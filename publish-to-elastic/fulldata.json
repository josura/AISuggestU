[{"url": "https://api.github.com/repos/mojombo/grit", "owner": "mojombo", "readme": "grit ==== **grit longer maintained check rugged https //github.com/libgit2/rugged ** grit gives object oriented read/write access git repositories via ruby main goals stability performance end interactions git repositories done shelling system's git command interactions done pure ruby reimplementations core git functionality choice however transparent end users need know method used software developed power github considered production ready extensive test suite provided verify correctness grit maintained tom preston-werner scott chacon chris wanstrath pj hyett documentation accurate grit 2.3 requirements git http //git-scm.com tested 1.7.2.1 install easiest install via rubygems gem install grit source grit 's git repo available github browsed http //github.com/mojombo/grit cloned git clone git //github.com/mojombo/grit.git development need gems get tests pass mocha contributing 'd like hack grit follow instructions get dependencies install gem first 1. fork project account 1. clone fork 1. create thoughtfully named topic branch contain change 1. hack away 1. add tests make sure everything still passes running rake 1. adding new functionality document readme.md 1. change version number end 1. necessary rebase commits logical chunks without errors 1. push branch github 1. send pull request branch usage grit gives object model access git repositories created repo object traverse find parent commits trees blobs etc initialize repo object first step create grit :repo object represent repo documentation include grit module reduce typing require 'grit' repo grit :repo.new /users/tom/dev/grit '' example directory /users/tom/dev/grit working directory contains .git directory also initialize grit bare repo repo repo.new /var/git/grit.git '' getting list commits repo object get list commits array commit objects repo.commits > < grit :commit e80bbd2ce67651aa18e57fb0b43618ad4baf7750 '' > < grit :commit 91169e1f5fa4de2eaea3f176461f5dc784796769 '' > < grit :commit 038af8c329ef7c1bae4568b98bd5c58510465493 '' > < grit :commit 40d3057d09a7a4d61059bca9dca5ae698de58cbe '' > < grit :commit 4ea50f4754937bf19461af58ce3b3d24c77311d9 '' > called without arguments repo commits returns list ten commits reachable **master** branch starting latest commit ask commits beginning different branch commit tag etc repo.commits 'mybranch repo.commits '40d3057d09a7a4d61059bca9dca5ae698de58cbe repo.commits 'v0.1 specify maximum number commits return repo.commits 'master 100 need paging specify number commits skip repo.commits 'master 10 20 return commits 21-30 commit list commit object commit objects contain information commit head repo.commits.first head.id > e80bbd2ce67651aa18e57fb0b43618ad4baf7750 '' head.parents > < grit :commit 91169e1f5fa4de2eaea3f176461f5dc784796769 '' > head.tree > < grit :tree 3536eb9abac69c3e4db583ad38f3d30f8db4771f '' > head.author > < grit :actor tom preston-werner < tom @ mojombo.com > '' > head.authored_date > wed oct 24 22:02:31 -0700 2007 head.committer > < grit :actor tom preston-werner < tom @ mojombo.com > '' > head.committed_date > wed oct 24 22:02:31 -0700 2007 head.message > add actor inspect '' traverse commit 's ancestry chaining calls parents repo.commits.first.parents 0 .parents 0 .parents 0 corresponds **master^^^** **master~3** git parlance tree object tree records pointers contents directory let 's say want root tree latest commit **master** branch tree repo.commits.first.tree > < grit :tree 3536eb9abac69c3e4db583ad38f3d30f8db4771f '' > tree.id > 3536eb9abac69c3e4db583ad38f3d30f8db4771f '' tree get contents contents tree.contents > < grit :blob 4ebc8aea50e0a67e000ba29a30809d0a7b9b2666 '' > < grit :blob 81d2c27608b352814cbe979a6acd678d30219678 '' > < grit :tree c3d07b0083f01a6e1ac969a0f32b8d06f20c62e5 '' > < grit :tree 4d00fe177a8407dbbc64a24dbfc564762c0922d8 '' > tree contains two blob objects two tree objects trees subdirectories blobs files trees root additional attributes contents.last.name > lib '' contents.last.mode > 040000 '' convenience method allows get named sub-object tree tree / lib '' > < grit :tree e74893a3d8a25cbb1367cf241cc741bfd503c4b2 '' > also get tree directly repo know name repo.tree > < grit :tree master '' > repo.tree 91169e1f5fa4de2eaea3f176461f5dc784796769 '' > < grit :tree 91169e1f5fa4de2eaea3f176461f5dc784796769 '' > blob object blob represents file trees often contain blobs blob tree.contents.first > < grit :blob 4ebc8aea50e0a67e000ba29a30809d0a7b9b2666 '' > blob certain attributes blob.id > 4ebc8aea50e0a67e000ba29a30809d0a7b9b2666 '' blob.name > readme.txt '' blob.mode > 100644 '' blob.size > 7726 get data blob string blob.data > grit library ... '' also get blob directly repo know name repo.blob 4ebc8aea50e0a67e000ba29a30809d0a7b9b2666 '' > < grit :blob 4ebc8aea50e0a67e000ba29a30809d0a7b9b2666 '' > many api methods available documented please reference code functionality copyright -- -- -- -- - copyright c 2010 tom preston-werner see license details"}, {"url": "https://api.github.com/repos/wycats/merb-core", "owner": "wycats", "readme": "merb-core merb-more merged http //github.com/wycats/merb"}, {"url": "https://api.github.com/repos/rubinius/rubinius", "owner": "rubinius", "readme": "! gitter https //badges.gitter.im/join % 20chat.svg https //gitter.im/rubinius/rubinius utm_source=badge & utm_medium=badge & utm_campaign=pr-badge ! build status https //travis-ci.org/rubinius/rubinius.svg branch=master https //travis-ci.org/rubinius/rubinius rubinius language platform rubinius modern language platform supports number programming languages philosophy high-level architecture rubinius described rubinius runs macos many unix/linux operating systems microsoft windows supported code conduct participation rubinius project governed rubinius code conduct https //rubinius.com/code-of-conduct/ issues & support please file tickets http //github.com/rubinius/rubinius/issues bugs problems additional help visit rubinius gitter chat room https //gitter.im/rubinius/rubinius contributing welcome contributions information see faq read contributing https //github.com/rubinius/rubinius/blob/master/.github/contributing.md file license source code repository subject terms mozilla public license version 2.0 unless stated otherwise copy license found file license '' < https //www.mozilla.org/mpl/2.0/ > contributions made prior january 3rd 2016 licensed old bsd 3-clause license copy license found file bsd_license '' event directory contains license '' license.txt '' copying '' file license specified said file applies contents said directory sub directories overwriting licenses specified installing rubinius install rubinius source use following steps 1. ensure mri 2.0+ rubygems rake git installed 2 git clone git //github.com/rubinius/rubinius.git 3 cd rubinius 4 ./configure -- prefix=/path/to/install/dir & & make install install process finishes follow directions printed terminal add rubinius executable bin directory path certain setups openssl require pass along additional options -- with-lib-dir -- with-include-dir pointing include relevant openssl directories e.g installing via rvm / homebrew os x rvm install rbx-3 -c -- with-lib-dir= brew -- prefix openssl /lib -- with-include-dir= brew -- prefix openssl /include *see https //book.rubinius.com/manuscript/getting_rubinius.html complete guide installing rubinius source philosophy & architecture rubinius virtual computing machine computing machine possesses several mechanisms physical computers possess support computation runs environment provides various capabilities presented machine environment object certain configuration values influence machine operates managed configuration object machine boot process carefully builds components precise order machine ready run user code user code completes executing machine halts following precise sequence deconstructing various components rest components machine described instructions rubinius instruction set includes different categories instructions one key aspect rubinius philosophy instruction set represent machine semantic contrasts way rubinius implemented historically relied heavily c++ primitives '' modeled smalltalk 80 virtual machine primitives replaced instruction set evolves richer capabilities categories instructions 1 *stack* instructions push pop get operands stack ; 2 *register* instructions read write set registers ; 3 *assertion* instructions halt execution change semantics program ; 4 *instrumentation* instructions change semantics program emit data program ; 5 *parsing expression grammar* peg instructions pegs elegant formalism describing recognizers ; 6 *foreign function interface* ffi instructions binding calling external functions ; 7 *concurrency* instructions execution threads concurrent data ; 8 *system* instructions accessing files directories systam capabilities **todo 's plenty places help parsers compilers instruction sets interest ** heaps & garbage collector rubinius two kinds managed objects object-oriented ones support inheriting superclass data objects concept object-orientation rubinius three concepts heaps space managed objects live 1. *open* heap one object heap contain reference object think normal ruby land ; 2. *closed* heap one object heap contain reference object outside closed heap object outside contain reference object closed heap ; 3. *isolated* heap one object isolated heap contain reference object outside heap object outside contain reference object isolated heap threads use isolated heaps execute fully independent thread must synchronize process boot fork halt garbage collector isolated heaps run thread rubinius uses single mechanism garbage collection immix mark-region collector http //www.cs.williams.edu/~dbarowy/cs334s18/assets/immix-pldi-2008.pdf rubinius garbage collector currently runs single separate thread must fully synchronize threads mutate managed memory ie stops world future single open heap introduce second generational area isolated heaps provide parallel collection **todo 's plenty places help garbage collectors interest ** codedb rubinius codedb compiled code core standard libraries stored every executable context ruby scripts class & module bodies methods blocks unique id cached codedb future user code also cached codedb unique id every executable context allows associating arbitrary dimensions data instance executable code example type information seen run time profile coverage information call graphs memory allocations data associated executable code **todo 's plenty places help databases code analytics interest ** console console interprocess communication ipc mechanism contrast ruby 's irb executes process rubinius console intended general purpose mechanism interact virtual machine capabilities console include ability execute code return result start/step/stop debugger start/stop profiler access data profiler diagnostics fetch call graph object graph data **todo 's plenty places help developer tools interest ** debugger debugger uses instruction replacement ie substituting debug instruction existing instruction point instruction sequence cause executing instance code stop allow inspect values step next instruction step another instance code eg method function block **todo 's plenty places help developer tools interest ** profiler profiler randomized-interval sampling profiler always running randomized interval code instances currently executing thread sample count incremented addition code instances call count incremented time invoked every call site number times call site executes tracked type object seen call sites enable deriving call graph program object graph call sites normal ruby object interface **todo 's plenty places help developer tools interest ** diagnostics & logging diagnostics facility provides metrics components virtual machine logging facility includes different log levels ie debug info warn error provides descriptive account virtual machine lifecycle events **todo 's plenty places help developer tools interest ** machine-code compiler machine-code compiler based llvm compiles managed code instance machine code first generation rubinius jit just-in-time compiler included type inference custom code passes inlining facilities implemented c++ next generation compiler uses nanopass http //nanopass.org architecture builds single managed code instance compiled native machine code **todo 's plenty places help native machine code compilers interest ** data types & functions rubinius functions really bin/rbx compile -n plus -b -e 'fun plus b + b end' ================ plus ================= arguments 2 required 0 post 2 total arity 2 locals 2 b stack size 4 registers 0 literals 1 + line 1 lines ip 0000 push_local 0 0002 push_local 1 b 0004 send_stack + 1 0007 unwind 0 0009 ret 0 -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- several ways types added first 's important distinguish behavior '' object-oriented code types '' data see objects interactions functions data https //medium.com/metalanguage/objects-are-for-interactions-functions-are-for-data-936e044cc729 objects instead types want able easily convey objects represent differently ruby class def integer 2 b integer 3 values passed b integers integer constructor called value n't passed default value 2 similarly b default value 3. end end functions situation similar different ruby type int fun + int b int type b must machine integers return type specified annotation end fun + int b int return int type return value int 'return argument elided end fun + int b int int form would require modifying parser end three represent possibility implementing types including return type function form implemented n't chosen yet namespacing explicit data definition using either type data implemented yet definitely considered examples would ruby namespace my_funcs data size_cat value 'big | 'small' fun big value == 'big' end fun small value == 'small' end end end my_funcs :size_cat 'big my_funcs :size_cat :small > false functions became particularly interesting co-mingled object-oriented code rubinius lexical scope represented ruby object much like ruby object since ruby contain language features manipulating lexical scope 's natural place stash functions lookup seems unsurprising ruby class import my_funcs '' def b small big b puts mixed mode '' end end end a.new.m 'small 'big mixed mode '' ruby method call explicitly use receiver could resolve function imported lexical scope exclosing lexical scope functions types described part experimental may may actually exist read ideas legitimate really excited features let us know **todo 's plenty places help functions data types interest ** c-api c-api provides element compatibility ruby c-extensions however c-api deprecated likely eventually removed faq **q. 's < programming language project concept application > seems < better faster cheaper > n't use instead ** a. yes absolutely sooner better really **q. tickets tagged beginners ** a. lot respect abilities whether 've ever written line code whether 've ever worked compiler virtual machine garbage collector debugger find something interests dive get stuck ask question **q. n't < pet feature > done already done ** **a ** 1,000,000 usd really **q. wo n't accept pr rewrite virtual machine < rust go node typescript > add static typing ruby core library terrific idea ** **a ** lot fascinating ideas fork rubinius whip idea show people find useful let 's talk might find 've got far better project rubinius 's 're trying figure might useful **q. documentation ** **a ** yes book https //rubinius.com/book/ needs lot love attention **q. embed rubinius favorite c/c++ application ** **a ** yes ! facilities support interacting machine added time c++ include machine.hpp '' int main int argc char** argv { rubinius :machine machine argc argv ; machine.boot ; return machine.halt ; } **q. ruby programming language ** **a ** many popular ruby applications like rails may run rubinius aims compatible recent stable ruby version rubinius provides standard ruby libraries following exceptions continuation ripper tracepoint tracer following ruby features supported rubinius refinements safe levels **q. n't rubinius ruby implementation ** **a ** 's rubinius experiment started ruby implementation attempting look beyond limitations ruby consider rubinius mostly compatible superset ruby **q. rubinius report ruby version 10.0 ** **a ** rubinius time machine use travel future even readme future **q. weird version scheme rubinius ** **a ** rubinius uses simple epoch.sequence version scheme sequence number n n+1 add new capabilities remove something listed deprecated < n super simple **q. rubinius support frozen tainted ** **a ** rubinius better features ; frozen tainted considered harmful elaborate ... frozen tainted depend strewing checks throughout source code classic _weak-link_ system one checks needs misplaced guarantees offered either fail since number checks high new code written new checks need considered features inherently constitute unbounded complexity unbounded risk place frozen rubinius implementing attributes classes one attribute immutability way works every machine instruction attribute whether instruction would mutate object method added class attributes checked method containing mutating instructions disallowed additionally dispatch searches superclasses class marked immutable would also perform check immutability indelible attribute inherited subclasses place tainted rubinius implementing sanitization functions io boundary similar transcoding facility cases places checks must made orders magnitude fewer case frozen tainted checks orderly well **q. n't rubinius allow set arbitrary encodings strings ** **a ** rubinius uses utf-8 internally transcoding must performed io boundary **q. use rubygems ** **a ** rubinius comes rubygems built-in install gem run following rbx -s gem install < gem_name > **q. n't rubinius install gem binaries place ruby ** **a ** rubinius intended installed alongside ruby without causing conflicts main executable rbx installed system directory edit shell path include directories listed rubinius installed access executables like gem binaries"}, {"url": "https://api.github.com/repos/mojombo/god", "owner": "mojombo", "readme": "god ruby framework process management ============================================== authors tom preston-werner kevin clark eric lindvall website http //godrb.com description -- -- -- -- -- - god easy configure easy extend monitoring framework written ruby keeping server processes tasks running simple part deployment process god aims simplest powerful monitoring application available documentation -- -- -- -- -- -- - see in-repo documentation repo_root/doc see online documentation http //godrb.com community -- -- -- -- - sign god mailing list http //groups.google.com/group/god-rb license -- -- -- - see license file"}, {"url": "https://api.github.com/repos/vanpelt/jsawesome", "owner": "vanpelt", "readme": "jsawesome description jsawesome provides powerful json based dsl creating interactive forms example new jsawesome 'rad 'cool 'neat '^neat true { 'cool { label 'cool man validation 'cool } .to_html > < label for= '' rad_cool '' > cool man < /label > < input type= '' text '' name= '' rad_cool '' value= '' neat '' / > < label for= '' rad_neat '' > < input type= '' checkbox '' name= '' rad_neat '' checked= '' checked '' / > neat < /label > detailed overview library available http //vandev.com/2008/4/22/jsawesome also see functional tests examples possible information http //github.com/vanpelt/jsawesome/tree/master author chris van pelt vanpelt @ doloreslabs.com"}, {"url": "https://api.github.com/repos/defunkt/exception_logger", "owner": "defunkt"}, {"url": "https://api.github.com/repos/defunkt/ambition", "owner": "defunkt", "readme": "ambition == get git clone git //github.com/defunkt/ambition.git == resources http //ambition.rubyforge.org/ http //groups.google.com/group/ambition-rb/ http //errtheblog.com/posts/63-full-of-ambition http //errtheblog.com/posts/82-adapting-ambitiously http //errtheblog.com/posts/86-sugary-adapters http //errtheblog.com/posts/64-even-more-ambitious == author chris wanstrath chris @ ozmm.org"}, {"url": "https://api.github.com/repos/technoweenie/restful-authentication", "owner": "technoweenie", "readme": "restful authentication generator '' http //github.com/technoweenie/restful-authentication widely-used plugin provides foundation securely managing user authentication login / logout secure password handling account activation validating email account approval / disabling admin rudimentary hooks authorization access control several features updated may 2008 stable newer version '' http //github.com/technoweenie/restful-authentication/tree/master 'classic backward-compatible version '' http //github.com/technoweenie/restful-authentication/tree/classic experimental version '' http //github.com/technoweenie/restful-authentication/tree/modular much modular needs testing & review > important upgrade site existing user account > passwords stop working unless use -- old-passwords *************************************************************************** issue tracker please submit bugs annoyances lighthouse tracker http //rails_security.lighthouseapp.com/projects/15332-restful_authentication/overview '' http //rails_security.lighthouseapp.com/projects/15332-restful_authentication/overview anything simple enough please github message maintainers rick olson technoweenie '' http //github.com/technoweenie flip kromer mrflip '' http //github.com/mrflip *************************************************************************** documentation page notes installation '' install new features '' awesome installing '' post-install see wiki '' http //github.com/technoweenie/restful-authentication/wikis/home notes/ directory want learn extensions addons alternatives '' addons haml templates security design patterns '' security-patterns snazzy diagram '' http //github.com/technoweenie/restful-authentication/tree/master/notes/securityframework.png authentication -- lets visitor identify lay claim corresponding roles measure trust trust metrics '' trustification -- confidence rely outcomes visitor 's actions authorization policy -- based trust identity actions may visitor perform access control -- authorization policy actually enforced code hopefully without turning spaghetti thens rails plugins authentication trust authorization access control tradeoffs -- paranoid curious rundown tradeoffs made code changelog -- summary changes internals todo -- ideas help best version release notes notes/ directory '' source code '' http //github.com/technoweenie/restful-authentication/tree/master -- look latest version wiki versions taken manually *************************************************************************** < id= '' awesome '' / > < /a > exciting new features stories cucumber '' http //wiki.github.com/aslakhellesoy/cucumber/home features allow expressive enjoyable tests authentication code flexible code resource testing stories extended ben mabey 's http //www.benmabey.com/2008/02/04/rspec-plain-text-stories-webrat-chunky-bacon/ modularize match security design patterns authentication currently password browser cookie token http basic trust metric email validation authorization stateful roles leave flexible framework play nicely access control / policy definition / trust metric plugins added helper methods linking user pages uniform handling logout remember_token stricter email login field validation minor security fixes -- see changelog *************************************************************************** non-backwards compatible changes changes may 2008 release increase defense depth '' may require changes existing accounts existing site none changes compelling enough warrant migrating userbase generating new site changes low-impact apply passwords new password encryption using site key salt stretching break existing user accounts passwords recommend use -- old-passwords option write migration tool submit patch see tradeoffs note information validations default email usernames validated somewhat strict pattern ; users values may illegal adjust suit *************************************************************************** < id= '' installation '' / > < /a > installation basic restful authentication generator rails taken acts authenticated currently requires rails 1.2.6 **important rails > 2.1 users** avoid @ nameerror @ exception lighthouse tracker ticket '' http //rails_security.lighthouseapp.com/projects/15332-restful_authentication/tickets/2-not-a-valid-constant-name-errors ticket-2-2 check code _underscore_ _dash_ name either use < code > git clone git //github.com/technoweenie/restful-authentication.git restful_authentication < /code > rename plugin 's directory < code > restful_authentication < /code > fetching use generator ./script/generate authenticated user sessions -- include-activation -- stateful -- rspec -- skip-migration -- skip-routes -- old-passwords first parameter specifies model gets created signup typically user account model model migration created well basic controller create method probably want say user '' second parameter specifies session controller name controller handles actual login/logout function site probably session '' -- include-activation generates code actionmailer respective activation code email -- stateful builds support acts_as_state_machine generates activation code @ -- stateful @ implies @ -- include-activation @ based idea http //www.vaporbase.com/postings/stateful_authentication passing @ -- skip-migration @ skip user migration @ -- skip-routes @ skip resource generation -- useful 've already run generator needs acts_as_state_machine plugin '' http //elitists.textdriven.com/svn/plugins/acts_as_state_machine/ new installs probably run @ -- aasm @ instead -- aasm works stateful uses updated aasm gem '' http //github.com/rubyist/aasm/tree/master -- rspec generate rspec tests stories place standard rails tests requires rspec rspec-on-rails plugins '' http //rspec.info/ make sure ./script/generate rspec '' installing rspec rspec story suite much thorough rails tests changes unlikely backported -- old-passwords use older password scheme see compatibility -- skip-migration n't generate migration file model -- skip-routes n't generate resource line @ config/routes.rb @ *************************************************************************** < id= '' post-install '' / > < /a > installing assumes model named 'user controller named 'session ; please alter suit additional security minutae @ notes/readme-tradeoffs @ -- paranoid curious need bother though add familiar login urls @ config/routes.rb @ like < pre > < code > map.signup '/signup controller > 'users action > 'new' map.login '/login controller > 'session action > 'new' map.logout '/logout controller > 'session action > 'destroy' < /code > < /pre > @ -- include-activation @ also add @ config/routes.rb @ < pre > < code > map.activate '/activate/ activation_code controller > 'users action > 'activate activation_code > nil < /code > < /pre > add observer @ config/environment.rb @ < pre > < code > config.active_record.observers user_observer < /code > < /pre > pay attention may issue everybody problems sent activation_code match database stored reload user object sending data email something like < pre > < code > class userobserver < activerecord :observer def after_create user user.reload usermailer.deliver_signup_notification user end def after_save user user.reload usermailer.deliver_activation user user.recently_activated end end < /code > < /pre > @ -- stateful @ add observer config/environment.rb < pre > < code > config.active_record.observers user_observer < /code > < /pre > modify users resource line read map.resources users member > { suspend > put unsuspend > put purge > delete } use public repository code github rubyforge gitorious etc make sure post site_keys.rb add line like '/config/initializers/site_keys.rb .gitignore svn ignore dance make sure keep backed somewhere safe"}, {"url": "https://api.github.com/repos/technoweenie/attachment_fu", "owner": "technoweenie", "readme": "attachment-fu ============= attachment_fu plugin rick olson aka technoweenie < http //techno-weenie.net > successor acts_as_attachment get basic run-through capabilities check mike clark 's tutorial < http //clarkware.com/cgi/blosxom/2007/02/24 fileuploadfu > attachment_fu functionality =========================== attachment_fu facilitates file uploads ruby rails storage options actual file data plugin always minimum stores metadata file database four storage options files uploaded attachment_fu file system database file amazon s3 rackspace mosso cloud files method storage many options associated covered following section something note however amazon s3 storage requires modify config/amazon_s3.yml rackspace cloud files storage requires modify config/rackspace_cloudfiles.yml database file storage requires extra table attachment_fu models ==================== three storage options table metadata required table contain information file hence 'meta location table restrictions naming unlike extra table required database storage must table name db_files convention model dbfile model two methods made available plugins has_attachment validates_as_attachment has_attachment options { } method accepts options hash content_type allowed content types allows default use image allow standard image types min_size minimum size allowed 1 byte default max_size maximum size allowed 1.megabyte default size range sizes allowed 1..1.megabyte default overrides min_size max_size options resize_to used rmagick resize images pass either array width/height geometry string thumbnails specifies set thumbnails generate accepts hash filename suffixes rmagick resizing options option need included want thumbnailing thumbnail_class set model class use thumbnails current attachment class used default path_prefix path store uploaded files uses public/ { table_name } default filesystem { table_name } s3 cloud files backend setting sets storage file_system partition whether partiton files directories like /0000/0001/image.jpg default true applicable file_system backend storage specifies storage system use.. defaults db_file options file_system db_file s3 cloud_files cloudfront using s3 storage option allows serving files via amazon cloudfront defaults false processor sets image processor use resizing attached image options include imagescience rmagick minimagick default whatever installed uuid_primary_key model 's primary key 128-bit uuid hexadecimal format set true association_options attachment_fu automatically defines associations thumbnails has_many belongs_to additional options want pass methods specify examples has_attachment max_size > 1.kilobyte has_attachment size > 1.megabyte..2.megabytes has_attachment content_type > 'application/pdf' has_attachment content_type > 'application/pdf 'application/msword 'text/plain has_attachment content_type > image resize_to > 50,50 has_attachment content_type > 'application/pdf image resize_to > 'x50' has_attachment thumbnails > { thumb > 50 50 geometry > 'x50 } has_attachment storage > file_system path_prefix > 'public/files' has_attachment storage > file_system path_prefix > 'public/files content_type > image resize_to > 50,50 partition > false has_attachment storage > file_system path_prefix > 'public/files thumbnails > { thumb > 50 50 geometry > 'x50 } has_attachment storage > s3 has_attachment store > s3 cloudfront > true has_attachment storage > cloud_files validates_as_attachment method prevents files outside valid range min_size max_size size range saved however halt upload files uploaded memory regardless size validation example validates_as_attachment attachment_fu migrations ======================== fields attachment_fu metadata tables ... general size integer file size bytes content_type string mime type ex application/mp3 filename string sanitized filename reference images height integer pixels width integer pixels reference images thumbnailed parent_id integer id parent image table self-referencing foreign-key populated current object thumbnail thumbnail string 'type thumbnail attachment record describes populated current object thumbnail usage model 'avatar has_attachment content_type > image storage > file_system max_size > 500.kilobytes resize_to > '320x200 > thumbnails > { small > '10x10 > thumb > '100x100 > } elsewhere @ user.avatar.thumbnails.first.thumbnail > 'small' reference files stored database db_file db_file_id integer id file database foreign key field attachment_fu db_files table data binary binary file data use database file storage attachment_fu views =================== two main views tasks directly affected attachment_fu upload forms displaying uploaded images two parts upload form differ typical usage 1. include multipart > true html options form_for tag example < % form_for attachment_metadata url > { action > create '' } html > { multipart > true } |form| % > 2. use file_field helper uploaded_data field name example < % form.file_field uploaded_data % > displaying uploaded images made easy public_filename method activerecord attachment objects using file system s3 cloud files storage public_filename thumbnail nil returns public path file thumbnail prefix specified return public file path corresponding thumbnail examples attachment_obj.public_filename > /attachments/2/file.jpg attachment_obj.public_filename thumb > /attachments/2/file_thumb.jpg attachment_obj.public_filename small > /attachments/2/file_small.jpg serving files database storage simply downloading file beyond scope document attachment_fu controllers ========================= two considerations take account using attachment_fu controllers first files publicly accessible path need downloaded action example def readme send_file '/path/to/readme.txt type > 'plain/text disposition > 'inline' end see possible values send_file reference second saving file submitted form example view < % form.file_field attachable uploaded_data % > example controller def create @ attachable_file attachmentmetadatamodel.new params attachable @ attachable_file.save flash notice 'attachment successfully created redirect_to attachable_url @ attachable_file else render action > new end end attachement_fu scripting ==================================== may wish import large number images attachments following example shows upload file script ! /usr/bin/env ./script/runner required use actioncontroller :testuploadedfile require 'action_controller' require 'action_controller/test_process.rb' path ./public/images/x.jpg '' mimetype string like image/jpeg '' one way get mimetype given file unix system mimetype file -ib { path } .gsub /\\n/ '' '' mimetype image/jpeg '' upload '' file path create new model @ attachable attachmentmetadatamodel.new uploaded_data > actioncontroller :testuploadedfile.new path mimetype @ attachable.save"}, {"url": "https://api.github.com/repos/anotherjesse/s3", "owner": "anotherjesse"}, {"url": "https://api.github.com/repos/anotherjesse/taboo", "owner": "anotherjesse", "readme": "release 0.20 0/8 - null titles break taboo - make sure re-clicking taboo button n't overwrite data - inplace editor n't handle escape key correctly click edit save changes click escape change - inplace editor breaks change textarea edit mode - deleting grid mode n't show undelete box - undelete / delete n't show correctly trash.js - use humanized messages deletion/undelete - use favicons dropdown menu - tooltips grid.js - tooltips calendar.js"}, {"url": "https://api.github.com/repos/anotherjesse/fotomatic", "owner": "anotherjesse"}, {"url": "https://api.github.com/repos/mojombo/glowstick", "owner": "mojombo", "readme": "glowstick fix name fix url == description fix describe package == features/problems fix list features problems == synopsis fix code sample usage == requirements fix list requirements == install fix sudo gem install anything else == license mit license copyright c 2008 fix permission hereby granted free charge person obtaining copy software associated documentation files 'software deal software without restriction including without limitation rights use copy modify merge publish distribute sublicense and/or sell copies software permit persons software furnished subject following conditions copyright notice permission notice shall included copies substantial portions software software provided 'as without warranty kind express implied including limited warranties merchantability fitness particular purpose noninfringement event shall authors copyright holders liable claim damages liability whether action contract tort otherwise arising connection software use dealings software"}, {"url": "https://api.github.com/repos/defunkt/starling", "owner": "defunkt", "readme": "name starling - light weight server reliable distributed message passing description starling powerful simple messaging server enables reliable distributed queuing absolutely minimal overhead speaks memcache protocol maximum cross-platform compatibility language speaks memcache take advantage starling 's queue facilities installation fork starling source hosted github found http //github.com/starling/starling/tree/master original source found rubyforge longer exists github serves gems prefixed username differentiate different forks project installed command one time gem sources -a http //gems.github.com/ often like sudo gem install starling-starling see http //gems.github.com/ want info github gems quick start usage view starling help usage message starling -- help console window start starling server default runs verbosely foreground listening 127.0.0.1:22122 stores files /tmp/starling starling new console test put get messages queue irb > > require 'starling' > true > > starling starling.new '127.0.0.1:22122 > memcache 1 servers 1 buckets ns nil ro false > > starling.set 'my_queue 12345 > nil > > starling.get 'my_queue > 12345 simple loop queue something like > > loop { puts starling.get 'my_queue ; sleep 1 } 12345 nil nil ... information run following new console 'gem server' start gem server http //localhost:8808/ view browser see rdocs gem generate rdocs running following new console 'rdoc' using fiveruns memcache-client memcache-client fiveruns couple fixed added like supporting failover retry failure fork memcache-client source hosted github found http //github.com/fiveruns/memcache-client/tree/master installed using command one time gem sources -a http //gems.github.com/ often like sudo gem install fiveruns-memcache-client known issues starling slow '' far messaging systems concerned practice 's fast enough == todo implement memcached instead memcache client interface make faster authors blaine cook < romeda @ gmail.com > chris wanstrath < chris @ ozmm.org > anotherbritt < > glenn rempe < > abdul-rahman advany < abdulrahman @ advany.com > copyright starling - light-weight server reliable distributed message passing copyright 2007-2008 blaine cook < blaine @ twitter.com > twitter inc"}, {"url": "https://api.github.com/repos/wycats/merb-more", "owner": "wycats", "readme": "merb-core merb-more merged http //github.com/wycats/merb"}, {"url": "https://api.github.com/repos/macournoyer/thin", "owner": "macournoyer", "readme": "thin small fast ruby web server installation gem install thin add thin gemfile ruby gem 'thin' usage +thin+ script offers easy way start rack application thin start browse example directory sample applications usage rails action cable use thin action cable add following gemfile ruby gem 'faye-websocket' gem 'thin already done create config/initializers/thin_action_cable.rb ruby rails.application.config.action_cable.use_faye true faye :websocket.load_adapter 'thin' cli use rackup config.ru file bind localhost port 8080 thin -r config.ru -a 127.0.0.1 -p 8080 start store server process id log file daemonize thin -p 9292 -p tmp/pids/thin.pid -l logs/thin.log -d start thin quite flexible many options specified command line see thin -h configuration files create configuration file using thin config -c config/thin.yml use commands thin start -c config/thin.yml example config file yaml -- - user www-data group www-data pid tmp/pids/thin.pid timeout 30 wait 30 log log/thin.log max_conns 1024 require environment production max_persistent_conns 512 servers 1 threaded true no-epoll true daemonize true socket tmp/sockets/thin.sock chdir /path/to/your/apps/root tag a-name-to-show-up-in-ps aux license ruby license http //www.ruby-lang.org/en/license.txt credits parser originally mongrel http //mongrel.rubyforge.org zed shaw mongrel copyright 2007 zed a. shaw contributors licensed ruby license gpl2 thin copyright marc-andre cournoyer < macournoyer @ gmail.com > get help http //groups.google.com/group/thin-ruby/ report bugs https //github.com/macournoyer/thin/issues major security issues directly macournoyer @ gmail.com"}, {"url": "https://api.github.com/repos/jamesgolick/resource_controller", "owner": "jamesgolick", "readme": "resource controller resource_controller makes restful controllers easier maintainable super readable restful controller pattern hidden away focus makes controller special == get install plugin script/plugin install git //github.com/giraffesoft/resource_controller.git grab source git clone git //github.com/giraffesoft/resource_controller.git usage creating basic restful controller easy ... class postscontroller < resourcecontroller :base end ... prefer use method-call syntax need inherit class syntax definitely class postscontroller < applicationcontroller resource_controller end syntaxes identical behavior make sure call resource_controller use r_c functionality controller nobody uses default restful controller though resource_controller provides simple api customizations == action lifecycle 's really easy make changes lifecycle actions note call new accessor new_action '' since new somewhat reserved ruby === class projectscontroller < resourcecontroller :base new_action.before 3.times { object.tasks.build } end create.after object.creator current_user end end === flash class projectscontroller < resourcecontroller :base create.flash believe easy use resource_controller neither could ! '' end === respond_to add 's already ... class projectscontroller < resourcecontroller :base create.wants.js { render template > show.rjs '' } end create whole new block syntax destroys everything 's starts ... class projectscontroller < resourcecontroller :base create.response |wants| wants.html wants.js { render template > show.rjs '' } end end nested resource want redirect parent create/update destroy object controller class commentscontroller < resourcecontroller :base belongs_to post create.wants.html { redirect_to smart_url parent_url_options } update.wants.html { redirect_to smart_url parent_url_options } destroy.wants.html { redirect_to smart_url parent_url_options } end === scoping sometimes want make bunch customizations helpers accept blocks make grouping calls really easy dsl maybe ; maybe 's definitely awesome actions fail scoping defaults success means create.flash == create.success.flash class projectscontroller < resourcecontroller :base create flash object successfully created ! '' wants.js { render template > show.rjs '' } failure.wants.js { render template > display_errors.rjs '' } end destroy flash destroyed project good work '' failure flash destroy project stop trying ! '' wants.js { render template > display_errors.rjs '' } end end end == singleton resource want create singleton restful controller inherit resourcecontroller :singleton class accountscontroller < resourcecontroller :singleton end ... need inherit class class accountscontroller < applicationcontroller resource_controller singleton end *note type controllers handle single resource index action collection helpers collection_url collection_path ... available loading objects singletons similar plural controllers one exception non-nested singleton controllers override object method defaults nil class accountscontroller < resourcecontroller :singleton private def object @ object ||= account.find session account_id end end cases use default logic override use permalinks anything special singleton nesting has_many has_one associations provided ... map.resource account has_many > options /account/options account singleton parent map.resources users has_one > image /users/1/image image singleton child has_many association singleton parent remember override parent_object has_many controller returns nil default case class optionscontroller < resourcecontroller :base belongs_to account protected def parent_object account.find session account_id end end == helpers resourcecontroller :helpers === loading objects want add something like pagination controller ... class postscontroller < resourcecontroller :base private def collection @ collection ||= end_of_association_chain.find page > { size > 10 current > params page } end end maybe used permalink ... class postscontroller < resourcecontroller :base private def object @ object ||= end_of_association_chain.find_by_permalink param end end === building objects maybe alternative way building objects ... class postscontroller < resourcecontroller :base private def build_object @ object ||= end_of_association_chain.build_my_object_some_funky_way object_params end end ... tons helpers resourcecontroller :helpers == nested resources nested controllers pain especially routing may may parent resource controller class commentscontroller < resourcecontroller :base belongs_to post end finding creation everything done scope post automatically == namespaced resources ... handled automatically namespaces always available symbolized array form @ resourcecontroller :helpers namespaces == polymorphic resources everything including url generation handled completely automatically take example ... comment.rb class comment belongs_to commentable polymorphic > true end comments_controller.rb class commentscontroller < resourcecontroller :base belongs_to post product user end *note model n't polymorphic activerecord sense associated whichever way want routes.rb map.resources posts has_many > comments map.resources products has_many > comments map.resources users has_many > comments r_c infer whichever relationship present perform actions scope parent object === parent helpers also get helpers reflecting parent parent > true/false parent present parent_type > post parent_model > post parent_object > @ post === non-standard resource names resource_controller supports overrides every non-standard configuration resources common example resource different name associated model simply overriding model_name helper get resource_controller working model map.resources tags ... class phototag < activerecord :base ... class tagscontroller < resourcecontroller :base private def model_name 'photo_tag' end end example variable params set @ tag @ tags params tag 'd like change override object_name def object_name 'photo_tag' end 're using non-standard controller name everything else standard overriding resource_name propagate helpers map.resources tags controller > somethings '' ... class tag < activerecord :base ... class somethingscontroller < resourcecontroller :base private def resource_name 'tag' end end finally route_name helper used urligence determine url helper call non-standard route names override map.resources tags controller > taggings '' ... class taggings < activerecord :base ... class taggingscontroller < resourcecontroller :base private def route_name 'tag' end end == url helpers thanks urligence also get free url helpers matter controller looks like ... edit_|new_ object_url equivalent saying edit_|new_ post_url @ post edit_|new_ object_url some_other_object allows specify object still maintain paths namespaces present collection_url like saying posts_url url helpers especially useful working polymorphic controllers /posts/1/comments object_url > /posts/1/comments/ { @ comment.to_param } object_url comment > /posts/1/comments/ { comment.to_param } edit_object_url > /posts/1/comments/ { @ comment.to_param } /edit collection_url > /posts/1/comments /products/1/comments object_url > /products/1/comments/ { @ comment.to_param } object_url comment > /products/1/comments/ { comment.to_param } edit_object_url > /products/1/comments/ { @ comment.to_param } /edit collection_url > /products/1/comments /comments object_url > /comments/ { @ comment.to_param } object_url comment > /comments/ { comment.to_param } edit_object_url > /comments/ { @ comment.to_param } /edit collection_url > /comments namespaced nested controllers ... /admin/products/1/options object_url > /admin/products/1/options/ { @ option.to_param } object_url option > /admin/products/1/options/ { option.to_param } edit_object_url > /admin/products/1/options/ { @ option.to_param } /edit collection_url > /admin/products/1/options get idea everything automagical ! parameters inferred == credits resource_controller created maintained { james golick } http //jamesgolick.com == license resource_controller available { mit license } http //en.wikipedia.org/wiki/mit_license"}, {"url": "https://api.github.com/repos/jamesgolick/markaby", "owner": "jamesgolick", "readme": "markaby markup ruby markaby short bit code writing html pages pure ruby alternative erb weaves two languages together also replacement templating languages use primitive languages blend html == using markaby rails plugin write rails templates pure ruby example layout html head title 'products + action_name stylesheet_link_tag 'scaffold' end body p flash notice style > color green '' self < < content_for_layout end end == using markaby ruby class markaby flaming easy call ruby classes require 'markaby' mab markaby :builder.new mab.html head { title boats.com '' } body h1 boats.com great deals '' ul li 49 canoe '' li 39 raft '' li 29 huge boot floats fit 5 people '' end end end puts mab.to_s markaby :builder.new take two arguments passing variables helper object also affix block right class see markaby :builder note < tt > instance_eval < /tt > markaby :builder class different normal builder class since uses < tt > instance_eval < /tt > running blocks cleans appearance markaby code write < tt > instance_eval < /tt > used code would look like mab markaby :builder.new mab.html mab.head { mab.title boats.com '' } mab.body mab.h1 boats.com great deals '' end end puts mab.to_s advantage cleanliness code disadvantage block run inside markaby :builder object 's scope means inside blocks < tt > self < /tt > markaby :builder object use instance variables blocks instance variables markaby :builder object n't affect rails users used regular ruby code bit disorienting recommended put markaby code module wo n't mix anything six steps markaby dive right markaby 'll probably make good sense likely run kinks review six steps commit memory really *know* 're == 1. element classes element classes may added hooking methods onto container elements div.entry h2.entrytitle 'son webpage' div.entrysection % { anthony } div.entrycontent 'okay idea ... end results < div class= '' entry '' > < h2 class= '' entrytitle '' > son webpage < /h2 > < div class= '' entrysection '' > anthony < /div > < div class= '' entrycontent '' > okay idea ... < /div > < /div > == 2. element ids ids may added use bang methods div.page ! { div.content ! { h1 short short saintly dog '' } } results < div id= '' page '' > < div id= '' content '' > < h1 > short short saintly dog < /h1 > < /div > < /div > == 3. validate xhtml 1.0 output 'd like markaby help assemble valid xhtml documents use < tt > xhtml_transitional < /tt > < tt > xhtml_strict < /tt > methods place normal < tt > html < /tt > tag xhtml_strict head { ... } body { ... } end add xml instruction doctype tag document also character set meta tag placed inside < tt > head < /tt > tag since markaby knows doctype 're using checks big list valid tags attributes printing anything > > div styl > padding 10px '' > > img src > samorost.jpg '' > > end invalidhtmlerror attribute styl' markaby also make sure n't use element id twice ! == 4. escape escape markaby uses simple convention escaping stuff string argument gets escaped string block n't handy 're using something like redcloth rdoc inside element pass string back block 'll skip escaping div.comment { redcloth.new str .to_html } raw text needs escaping pass argument div.comment raw_str one caveat tags inside block string passed back ignored div.comment { div.author _why '' div.says torpedoooooes ! '' < div > silence. < /div > '' } final div wo n't appear output ca n't mix tag modes like friend == 5. auto-stringification end using markaby tags '' string tag wo n't output 'll add new string back html output means call < tt > to_s < /tt > 'll get string back div.title { rock bottom '' + span robert wyatt '' .to_s } 're adding strings ruby < tt > to_s < /tt > happens automatically div.title { rock bottom '' + span robert wyatt '' } interpolation works fine div.title { rock bottom { span robert wyatt '' } '' } operation might perform string div.menu ! 5.gets 'bits 'cult 'inspect '-h .map |category| link_to category end join | == 6. < tt > tag ! < /tt > method need force tag time call < tt > tag ! < /tt > tag name followed possible arguments block cssproxy wo n't work technique tag ! select id > country_list '' countries.each |country| tag ! option country end end note rails helpers used rails templates rails helper object passed markaby :builder call helper methods inside markaby output methods output stream incredibly handy since rails helpers output html tags head javascript_include_tag 'prototype' autodiscovery_link_tag end however methods designed give back string use elsewhere 's okay ! every method returns fragment object used string p { total { number_to_human_size @ file_bytes } '' } also see quick tour specifically stuff auto-stringification reason trouble fragments call < tt > @ helpers < /tt > object method 'll get string back nothing output p { total { @ helpers.number_to_human_size @ file_bytes } '' } conversely may call instance variables controller using method value returned nothing output inside imaginary productcontroller def list @ products product.find end inside app/views/product/list.mab products.each |product| p product.title end credits markaby work immense hope tim fletcher lucky stiff thankyou giving whirl markaby inspired html library within cgi.rb hopefully turn around take cues"}, {"url": "https://api.github.com/repos/jamesgolick/enum_field", "owner": "jamesgolick", "readme": "enumfield macro emulate mysql enum_field type thing == usage plugin encapsulates validates_inclusion_of automatically gives goodies automatically 's ! class computer < activerecord base enum_field status 'on 'off 'standby 'sleep 'out world optionally message replace default one enum_field status 'on 'off 'standby 'sleep 'out world message > incorrect status '' ... end give things - add validates_inclusion_of simple error message invalid { field } '' custom message - define following query methods name expressive code - - - standby - sleep - out_of_this_world - define statuses constant contains acceptable values license copyright c 2008 james golick released mit license"}, {"url": "https://api.github.com/repos/defunkt/zippy", "owner": "defunkt"}, {"url": "https://api.github.com/repos/defunkt/cache_fu", "owner": "defunkt", "readme": "== cache_fu rewrite acts_as_cached == changes acts_as_cached 1 - longer set 'ttl method class instead pass ttl acts_as_cached > > acts_as_cached ttl > 15.minutes - is_cached method aliased cached - set_cache instance take ttl > > @ story.set_cache 15.days chris wanstrath chris ozmm dot org"}, {"url": "https://api.github.com/repos/KirinDave/phosphor", "owner": "KirinDave", "readme": ""}, {"url": "https://api.github.com/repos/bmizerany/sinatra", "owner": "bmizerany", "readme": "sinatra sinatra dsl quickly creating web applications ruby minimal effort myapp.rb require 'sinatra' get '/ 'hello world ! end install gem run gem install sinatra ruby -rubygems myapp.rb view http //localhost:4567 recommended also run < tt > gem install thin < /tt > sinatra pick available == routes sinatra route http method paired url-matching pattern route associated block get '/ .. show something .. end post '/ .. create something .. end put '/ .. replace something .. end patch '/ .. modify something .. end delete '/ .. annihilate something .. end options '/ .. appease something .. end routes matched order defined first route matches request invoked route patterns may include named parameters accessible via < tt > params < /tt > hash get '/hello/ name matches get /hello/foo '' get /hello/bar '' params name 'foo 'bar' hello { params name } ! '' end also access named parameters via block parameters get '/hello/ name |n| hello { n } ! '' end route patterns may also include splat wildcard parameters accessible via < tt > params splat < /tt > array get '/say/*/to/* matches /say/hello/to/world params splat > hello '' world '' end get '/download/* matches /download/path/to/file.xml params splat > path/to/file '' xml '' end block parameters get '/download/* |path ext| path ext > path/to/file '' xml '' end route matching regular expressions get % r { /hello/ \\w + } hello { params captures .first } ! '' end block parameter get % r { /hello/ \\w + } |c| hello { c } ! '' end route patterns may optional parameters get '/posts. format matches get /posts '' extension get /posts.json '' get /posts.xml '' etc end way unless disable path traversal attack protection see request path might modified matching routes === conditions routes may include variety matching conditions user agent get '/foo agent > /songbird \\d\\.\\d \\d\\/ / 're using songbird version { params agent 0 } '' end get '/foo matches non-songbird browsers end available conditions +host_name+ +provides+ get '/ host_name > /^admin\\./ admin area access denied ! '' end get '/ provides > 'html haml index end get '/ provides > 'rss 'atom 'xml builder feed end easily define conditions set probability { |value| condition { rand < value } } get '/win_a_car probability > 0.1 ! '' end get '/win_a_car sorry lost '' end condition takes multiple values use splat set auth |*roles| < - notice splat condition unless logged_in & & roles.any { |role| current_user.in_role role } redirect /login/ '' 303 end end end get /my/account/ '' auth > user admin account details '' end get /only/admin/ '' auth > admin admins allowed ! '' end === return values return value route block determines least response body passed http client least next middleware rack stack commonly string examples values also accepted return object would either valid rack response rack body object http status code array three elements < tt > status fixnum headers hash response body responds < /tt > array two elements < tt > status fixnum response body responds < /tt > object responds < tt > < /tt > passes nothing strings given block fixnum representing status code way instance easily implement streaming example class stream def 100.times { |i| yield { } \\n '' } end end get '/ { stream.new } also use +stream+ helper method described reduce boiler plate embed streaming logic route === custom route matchers shown sinatra ships built-in support using string patterns regular expressions route matches however stop easily define matchers class allbutpattern match struct.new captures def initialize except @ except except @ captures match.new end def match str @ captures unless @ except === str end end def all_but pattern allbutpattern.new pattern end get all_but /index '' ... end note example might over-engineered also expressed get // pass request.path_info == /index '' ... end using negative look ahead get % r { ^ ! /index } ... end == static files static files served < tt > ./public < /tt > directory specify different location setting < tt > public_folder < /tt > option set public_folder file.dirname __file__ + '/static' note public directory name included url file < tt > ./public/css/style.css < /tt > made available < tt > http //example.com/css/style.css < /tt > use < tt > static_cache_control < /tt > setting see add < tt > cache-control < /tt > header info == views / templates template language exposed via rendering method methods simply return string get '/ erb index end renders < tt > views/index.erb < /tt > instead template name also pass template content directly get '/ code < % time.now % > '' erb code end templates take second argument options hash get '/ erb index layout > post end render < tt > views/index.erb < /tt > embedded < tt > views/post.erb < /tt > default < tt > views/layout.erb < /tt > exists options understood sinatra passed template engine get '/ haml index format > html5 end also set options per template language general set haml format > html5 get '/ haml index end options passed render method override options set via +set+ available options locals list locals passed document handy partials example < tt > erb < % foo % > '' locals > { foo > bar '' } < /tt > default_encoding string encoding use uncertain defaults < tt > settings.default_encoding < /tt > views views folder load templates defaults < tt > settings.views < /tt > layout whether use layout +true+ +false+ 's symbol specifies template use example < tt > erb index layout > ! request.xhr < /tt > content_type content-type template produces default depends template language scope scope render template defaults application instance change instance variables helper methods available layout_engine template engine use rendering layout useful languages support layouts otherwise defaults engine used template example < tt > set rdoc layout_engine > erb < /tt > templates assumed located directly < tt > ./views < /tt > directory use different views directory set views settings.root + '/templates' one important thing remember always reference templates symbols even 're subdirectory case use < tt > 'subdir/template < /tt > must use symbol otherwise rendering methods render strings passed directly === available template languages languages multiple implementations specify implementation use thread-safe simply require first require 'rdiscount require 'bluecloth' get '/ { markdown index } === haml templates dependency { haml } http //haml.info/ file extensions < tt > .haml < /tt > example < tt > haml index format > html5 < /tt > === erb templates dependency { erubis } http //www.kuwata-lab.com/erubis/ erb included ruby file extensions < tt > .erb < /tt > < tt > .rhtml < /tt > < tt > .erubis < /tt > erubis example < tt > erb index < /tt > === builder templates dependency { builder } http //builder.rubyforge.org/ file extensions < tt > .builder < /tt > example < tt > builder { |xml| xml.em hi '' } < /tt > also takes block inline templates see example === nokogiri templates dependency { nokogiri } http //nokogiri.org/ file extensions < tt > .nokogiri < /tt > example < tt > nokogiri { |xml| xml.em hi '' } < /tt > also takes block inline templates see example === sass templates dependency { sass } http //sass-lang.com/ file extensions < tt > .sass < /tt > example < tt > sass stylesheet style > expanded < /tt > === scss templates dependency { sass } http //sass-lang.com/ file extensions < tt > .scss < /tt > example < tt > scss stylesheet style > expanded < /tt > === less templates dependency { less } http //www.lesscss.org/ file extensions < tt > .less < /tt > example < tt > less stylesheet < /tt > === liquid templates dependency { liquid } http //www.liquidmarkup.org/ file extensions < tt > .liquid < /tt > example < tt > liquid index locals > { key > 'value } < /tt > since call ruby methods except +yield+ liquid template almost always want pass locals === markdown templates dependency { rdiscount } https //github.com/rtomayko/rdiscount { redcarpet } https //github.com/tanoku/redcarpet { bluecloth } http //deveiate.org/projects/bluecloth { kramdown } http //kramdown.rubyforge.org/ *or* { maruku } http //maruku.rubyforge.org/ file extensions < tt > .markdown < /tt > < tt > .mkd < /tt > < tt > .md < /tt > example < tt > markdown index layout_engine > erb < /tt > possible call methods markdown pass locals therefore usually use combination another rendering engine erb overview locals > { text > markdown introduction } note may also call +markdown+ method within templates % h1 hello haml ! % p= markdown greetings since call ruby markdown use layouts written markdown however possible use another rendering engine template layout passing < tt > layout_engine < /tt > option === textile templates dependency { redcloth } http //redcloth.org/ file extensions < tt > .textile < /tt > example < tt > textile index layout_engine > erb < /tt > possible call methods textile pass locals therefore usually use combination another rendering engine erb overview locals > { text > textile introduction } note may also call +textile+ method within templates % h1 hello haml ! % p= textile greetings since call ruby textile use layouts written textile however possible use another rendering engine template layout passing < tt > layout_engine < /tt > option === rdoc templates dependency { rdoc } http //rdoc.rubyforge.org/ file extensions < tt > .rdoc < /tt > example < tt > rdoc readme layout_engine > erb < /tt > possible call methods rdoc pass locals therefore usually use combination another rendering engine erb overview locals > { text > rdoc introduction } note may also call +rdoc+ method within templates % h1 hello haml ! % p= rdoc greetings since call ruby rdoc use layouts written rdoc however possible use another rendering engine template layout passing < tt > layout_engine < /tt > option === radius templates dependency { radius } http //radius.rubyforge.org/ file extensions < tt > .radius < /tt > example < tt > radius index locals > { key > 'value } < /tt > since call ruby methods directly radius template almost always want pass locals === markaby templates dependency { markaby } http //markaby.github.com/ file extensions < tt > .mab < /tt > example < tt > markaby { h1 welcome ! '' } < /tt > also takes block inline templates see example === slim templates dependency { slim } http //slim-lang.com/ file extensions < tt > .slim < /tt > example < tt > slim index < /tt > === creole templates dependency { creole } https //github.com/minad/creole file extensions < tt > .creole < /tt > example < tt > creole wiki layout_engine > erb < /tt > possible call methods creole pass locals therefore usually use combination another rendering engine erb overview locals > { text > creole introduction } note may also call +creole+ method within templates % h1 hello haml ! % p= creole greetings since call ruby creole use layouts written creole however possible use another rendering engine template layout passing < tt > layout_engine < /tt > option === coffeescript templates dependency { coffee-script } https //github.com/josh/ruby-coffee-script { way execute javascript } https //github.com/sstephenson/execjs/blob/master/readme.md readme file extensions < tt > .coffee < /tt > example < tt > coffee index < /tt > === yajl templates dependency { yajl-ruby } https //github.com/brianmario/yajl-ruby file extensions < tt > .yajl < /tt > example < tt > yajl index locals > { key > 'qux } callback > 'present variable > 'resource < /tt > template source evaluated ruby string resulting json variable converted to_json json { foo > 'bar } json baz key < tt > callback < /tt > < tt > variable < /tt > options used decorate rendered object var resource { foo '' '' bar '' '' baz '' '' qux '' } ; present resource ; === wlang templates dependency { wlang } https //github.com/blambeau/wlang/ file extensions < tt > .wlang < /tt > example < tt > wlang index locals > { key > 'value } < /tt > since calling ruby methods idiomatic wlang almost always want pass locals layouts written wlang +yield+ supported though === embedded templates get '/ haml % div.title hello world' end renders embedded template string === accessing variables templates templates evaluated within context route handlers instance variables set route handlers directly accessible templates get '/ id @ foo foo.find params id haml % h1= @ foo.name' end specify explicit hash local variables get '/ id foo foo.find params id haml % h1= bar.name locals > { bar > foo } end typically used rendering templates partials within templates === inline templates templates may defined end source file require 'sinatra' get '/ haml index end __end__ @ @ layout % html yield @ @ index % div.title hello world note inline templates defined source file requires sinatra automatically loaded call < tt > enable inline_templates < /tt > explicitly inline templates source files === named templates templates may also defined using top-level < tt > template < /tt > method template layout % html\\n =yield\\n '' end template index % div.title hello world ! end get '/ haml index end template named layout '' exists used time template rendered individually disable layouts passing < tt > layout > false < /tt > disable default via < tt > set haml layout > false < /tt > get '/ haml index layout > ! request.xhr end === associating file extensions associate file extension template engine use < tt > tilt.register < /tt > instance like use file extension +tt+ textile templates following tilt.register tt tilt textile === adding template engine first register engine tilt create rendering method tilt.register myat myawesometemplateengine helpers def myat *args render myat *args end end get '/ myat index end renders < tt > ./views/index.myat < /tt > see https //github.com/rtomayko/tilt learn tilt == filters filters evaluated request within context routes modify request response instance variables set filters accessible routes templates @ note 'hi ! request.path_info '/foo/bar/baz' end get '/foo/* @ note > 'hi ! params splat > 'bar/baz' end filters evaluated request within context also modify request response instance variables set filters routes accessible filters puts response.status end note unless use +body+ method rather returning string routes body yet available filter since generated later filters optionally take pattern causing evaluated request path matches pattern '/protected/* authenticate ! end '/create/ slug |slug| session last_slug slug end like routes filters also take conditions agent > /songbird/ ... end '/blog/* host_name > 'example.com ... end == helpers use top-level < tt > helpers < /tt > method define helper methods use route handlers templates helpers def bar name { name } bar '' end end get '/ name bar params name end alternatively helper methods separately defined module module fooutils def foo name { name } foo '' end end module barutils def bar name { name } bar '' end end helpers fooutils barutils effect including modules application class === using sessions session used keep state requests activated one session hash per user session enable sessions get '/ value < < session value .inspect end get '/ value session value params value end note < tt > enable sessions < /tt > actually stores data cookie might always want storing lots data increase traffic instance use rack session middleware order *not* call < tt > enable sessions < /tt > instead pull middleware choice would middleware use rack :session :pool expire_after > 2592000 get '/ value < < session value .inspect end get '/ value session value params value end improve security session data cookie signed session secret random secret generate sinatra however since secret change every start application might want set secret application instances share set session_secret 'super secret' want configure may also store hash options +sessions+ setting set sessions domain > 'foo.com' === halting immediately stop request within filter route use halt also specify status halting halt 410 body halt 'this body' halt 401 'go away ! headers halt 402 { 'content-type > 'text/plain } 'revenge' course possible combine template +halt+ halt erb error === passing route punt processing next matching route using < tt > pass < /tt > get '/guess/ pass unless params == 'frank' 'you got ! end get '/guess/* 'you missed ! end route block immediately exited control continues next matching route matching route found 404 returned === triggering another route sometimes +pass+ want instead would like get result calling another route simply use +call+ achieve get '/foo status headers body call env.merge path_info '' > '/bar status headers body.map & upcase end get '/bar bar '' end note example would ease testing increase performance simply moving < tt > '' bar '' < /tt > helper used < tt > /foo < /tt > < tt > /bar < /tt > want request sent application instance rather duplicate use < tt > call ! < /tt > instead < tt > call < /tt > check rack specification want learn < tt > call < /tt > === setting body status code headers possible recommended set status code response body return value route block however scenarios might want set body arbitrary point execution flow +body+ helper method use method access body get '/foo body bar '' end puts body end also possible pass block +body+ executed rack handler used implement streaming see return values '' similar body also set status code headers get '/foo status 418 headers allow '' > brew post get propfind '' refresh '' > refresh 20 ; http //www.ietf.org/rfc/rfc2324.txt '' body 'm tea pot ! '' end like +body+ +headers+ +status+ arguments used access current values === streaming responses sometimes want start sending data still generating parts response body extreme examples want keep sending data client closes connection use +stream+ helper avoid creating wrapper get '/ stream |out| < < 's gon na legen -\\n '' sleep 0.5 < < wait \\n '' sleep 1 < < - dary ! \\n '' end end allows implement streaming apis { server sent events } http //dev.w3.org/html5/eventsource/ used basis { websockets } http //en.wikipedia.org/wiki/websocket also used increase throughput content depends slow resource note streaming behavior especially number concurrent request highly depends web server used serve application servers like webrick might even support streaming server support streaming body sent block passed +stream+ finished executing streaming work shotgun optional parameter set +keep_open+ call +close+ stream object allowing close later point execution flow works evented servers like thin rainbows servers still close stream set server thin connections get '/ keep stream open stream keep_open { |out| connections < < } end post '/ write open streams connections.each { |out| < < params message < < \\n '' } message sent '' end === logging request scope +logger+ helper exposes +logger+ instance get '/ logger.info loading data '' ... end logger automatically take rack handler 's logging settings account logging disabled method return dummy object worry routes filters note logging enabled < tt > sinatra :application < /tt > default inherit < tt > sinatra :base < /tt > probably want enable class myapp < sinatra :base configure production development enable logging end end avoid logging middleware set set +logging+ setting +nil+ however keep mind +logger+ case return +nil+ common use case want set logger sinatra use whatever find < tt > env 'rack.logger < /tt > === mime types using < tt > send_file < /tt > static files may mime types sinatra n't understand use +mime_type+ register file extension configure mime_type foo 'text/foo' end also use +content_type+ helper get '/ content_type foo foo foo foo '' end === generating urls generating urls use +url+ helper method instance haml % { href > url '/foo } foo takes reverse proxies rack routers account present method also aliased +to+ see example === browser redirect trigger browser redirect +redirect+ helper method get '/foo redirect '/bar end additional parameters handled like arguments passed +halt+ redirect '/bar 303 redirect 'http //google.com 'wrong place buddy' also easily redirect back page user came < tt > redirect back < /tt > get '/foo < href='/bar > something < /a > '' end get '/bar do_something redirect back end pass arguments redirect either add query redirect '/bar sum=42 use session enable sessions get '/foo session secret 'foo' redirect '/bar end get '/bar session secret end === cache control setting headers correctly foundation proper http caching easily set cache-control header like get '/ cache_control public cache ! '' end pro tip set caching filter cache_control public must_revalidate max_age > 60 end using +expires+ helper set corresponding header < tt > cache-control < /tt > set automatically expires 500 public must_revalidate end properly use caches consider using +etag+ +last_modified+ recommended call helpers *before* heavy lifting immediately flush response client already current version cache get '/article/ id @ article article.find params id last_modified @ article.updated_at etag @ article.sha1 erb article end also possible use { weak etag } http //en.wikipedia.org/wiki/http_etag strong_and_weak_validation etag @ article.sha1 weak helpers caching rather feed necessary information cache looking quick reverse-proxy caching solution try { rack-cache } http //rtomayko.github.com/rack-cache/ require rack/cache '' require sinatra '' use rack :cache get '/ cache_control public max_age > 36000 sleep 5 hello '' end use < tt > static_cache_control < /tt > setting see add < tt > cache-control < /tt > header info static files according rfc 2616 application behave differently if-match if-none-match header set < tt > < /tt > depending whether resource requested already existence sinatra assumes resources safe like get idempotent like put requests already existence whereas resources instance post requests treated new resources change behavior passing < tt > new_resource < /tt > option get '/create etag new_resource > true article.create erb new_article end still want use weak etag pass < tt > kind < /tt > option etag new_resource > true kind > weak === sending files sending files use < tt > send_file < /tt > helper method get '/ send_file 'foo.png' end also takes couple options send_file 'foo.png type > jpg options filename file name response defaults real file name last_modified value last-modified header defaults file 's mtime type content type use guessed file extension missing disposition used content-disposition possible values +nil+ default < tt > attachment < /tt > < tt > inline < /tt > length content-length header defaults file size status status code send useful sending static file error page supported rack handler means streaming ruby process used use helper method sinatra automatically handle range requests === accessing request object incoming request object accessed request level filter routes error handlers < tt > request < /tt > method app running http //example.com/example get '/foo % w text/css text/html application/javascript request.accept 'text/html '*/* request.accept 'text/xml true request.preferred_type 'text/html' request.body request body sent client see request.scheme http '' request.script_name /example '' request.path_info /foo '' request.port 80 request.request_method get '' request.query_string '' request.content_length length request.body request.media_type media type request.body request.host example.com '' request.get true similar methods verbs request.form_data false request some_header '' value some_header header request.referrer referrer client '/' request.user_agent user agent used agent condition request.cookies hash browser cookies request.xhr ajax request request.url http //example.com/example/foo '' request.path /example/foo '' request.ip client ip address request.secure false would true ssl request.forwarded true running behind reverse proxy request.env raw env hash handed rack end options like < tt > script_name < /tt > < tt > path_info < /tt > also written { request.path_info / '' } get / '' requests end '' end < tt > request.body < /tt > io stringio object post /api '' request.body.rewind case someone already read data json.parse request.body.read hello { data 'name } ! '' end === attachments use +attachment+ helper tell browser response stored disk rather displayed browser get '/ attachment store ! '' end also pass file name get '/ attachment info.txt '' store ! '' end === dealing date time sinatra offers +time_for+ helper method given value generates time object also able convert +datetime+ +date+ similar classes get '/ pass time.now > time_for 'dec 23 2012 still time '' end method used internally +expires+ +last_modified+ akin therefore easily extend behavior methods overriding +time_for+ application helpers def time_for value case value yesterday time.now - 24*60*60 tomorrow time.now + 24*60*60 else super end end end get '/ last_modified yesterday expires tomorrow hello '' end === looking template files < tt > find_template < /tt > helper used find template files rendering find_template settings.views 'foo tilt haml |file| puts could { file } '' end really useful useful actually override method hook lookup mechanism instance want able use one view directory set views 'views 'templates helpers def find_template views name engine & block array views .each { |v| super v name engine & block } end end another example would using different directories different engines set views sass > 'views/sass haml > 'templates default > 'views' helpers def find_template views name engine & block _ folder views.detect { |k v| engine == tilt k } folder ||= views default super folder name engine & block end end also easily wrap extension share others ! note < tt > find_template < /tt > check file really exists rather calls given block possible paths performance issue since +render+ use +break+ soon file found also template locations content cached running development mode keep mind write really crazy method == configuration run startup environment configure setting one option set option 'value' setting multiple options set > 1 b > 2 set option true enable option set option false disable option also dynamic settings blocks set css_dir { file.join views 'css } end run environment rack_env environment variable set < tt > production < /tt > configure production ... end run environment set either < tt > production < /tt > < tt > test < /tt > configure production test ... end access options via < tt > settings < /tt > configure set foo 'bar' end get '/ settings.foo > true settings.foo > 'bar' ... end === configuring attack protection sinatra using { rack :protection } https //github.com/rkh/rack-protection readme defend application common opportunistic attacks easily disable behavior open application tons common vulnerabilities disable protection skip single defense layer set +protection+ options hash set protection except > path_traversal also hand array order disable list protections set protection except > path_traversal session_hijacking === available settings absolute_redirects disabled sinatra allow relative redirects however sinatra longer conform rfc 2616 http 1.1 allows absolute redirects enable app running behind reverse proxy set properly note +url+ helper still produce absolute urls unless pass +false+ second parameter disabled per default add_charsets mime types < tt > content_type < /tt > helper automatically add charset info add rather overriding option settings.add_charsets < < application/foobar '' app_file path main application file used detect project root views public folder inline templates bind ip address bind default 0.0.0.0 used built-in server default_encoding encoding assume unknown defaults < tt > '' utf-8 '' < /tt > dump_errors display errors log environment current environment defaults < tt > env 'rack_env < /tt > < tt > '' development '' < /tt > available logging use logger lock places lock around every request running processing request per ruby process concurrently enabled app thread-safe disabled per default method_override use < tt > _method < /tt > magic allow put/delete forms browsers n't support port port listen used built-in server prefixed_redirects whether insert < tt > request.script_name < /tt > redirects absolute path given way < tt > redirect '/foo < /tt > would behave like < tt > redirect '/foo < /tt > disabled per default protection whether enable web attack protections see protection section public_dir alias < tt > public_folder < /tt > see public_folder path folder public files served used static file serving enabled see < tt > static < /tt > setting inferred < tt > app_file < /tt > setting set reload_templates whether reload templates requests enabled development mode root path project root folder inferred +app_file+ setting set raise_errors raise exceptions stop application enabled default < tt > environment < /tt > set < tt > '' test '' < /tt > disabled otherwise run enabled sinatra handle starting web server enable using rackup means running built-in server running change setting ! server server list servers use built-in server defaults 'thin 'mongrel 'webrick order indicates priority sessions enable cookie based sessions support using < tt > rack :session :cookie < /tt > see 'using sessions' section information show_exceptions show stack trace browser exception happens enabled default < tt > environment < /tt > set < tt > '' development '' < /tt > disabled otherwise static whether sinatra handle serving static files disable using server able disabling boost performance enabled per default classic style disabled modular apps static_cache_control sinatra serving static files set add < tt > cache-control < /tt > headers responses uses +cache_control+ helper disabled default use explicit array setting multiple values < tt > set static_cache_control public max_age > 300 < /tt > threaded set +true+ tell thin use < tt > eventmachine.defer < /tt > processing request views path views folder inferred < tt > app_file < /tt > setting set == environments three predefined +environments+ < tt > '' development '' < /tt > < tt > '' production '' < /tt > < tt > '' test '' < /tt > environments set +rack_env+ environment variable default value < tt > '' development '' < /tt > mode templates reloaded requests special < tt > not_found < /tt > < tt > error < /tt > handlers installed environment see stack trace browser < tt > '' production '' < /tt > < tt > '' test '' < /tt > templates cached default run different environments use < tt > -e < /tt > option ruby my_app.rb -e environment use predefined methods +development + +test + +production + check enviroment currently set == error handling error handlers run within context routes filters means get goodies offer like < tt > haml < /tt > < tt > erb < /tt > < tt > halt < /tt > etc === found < tt > sinatra :notfound < /tt > exception raised response 's status code 404 < tt > not_found < /tt > handler invoked not_found 'this nowhere found end === error +error+ handler invoked time exception raised route block filter exception object obtained < tt > sinatra.error < /tt > rack variable error 'sorry nasty error - + env 'sinatra.error .name end custom errors error mycustomerror 'so happened ... + env 'sinatra.error .message end happens get '/ raise mycustomerror 'something bad' end get happened ... something bad alternatively install error handler status code error 403 'access forbidden' end get '/secret 403 end range error 400..510 'boom' end sinatra installs special < tt > not_found < /tt > < tt > error < /tt > handlers running development environment == rack middleware sinatra rides rack http //rack.rubyforge.org/ minimal standard interface ruby web frameworks one rack 's interesting capabilities application developers support middleware '' -- components sit server application monitoring and/or manipulating http request/response provide various types common functionality sinatra makes building rack middleware pipelines cinch via top-level +use+ method require 'sinatra' require 'my_custom_middleware' use rack :lint use mycustommiddleware get '/hello 'hello world' end semantics +use+ identical defined rack :builder http //rack.rubyforge.org/doc/classes/rack/builder.html dsl frequently used rackup files example +use+ method accepts multiple/variable args well blocks use rack :auth :basic |username password| username == 'admin & & password == 'secret' end rack distributed variety standard middleware logging debugging url routing authentication session handling sinatra uses many components automatically based configuration typically n't +use+ explicitly find useful middleware { rack } https //github.com/rack/rack/tree/master/lib/rack { rack-contrib } https //github.com/rack/rack-contrib readme { coderack } http //coderack.org/ { rack wiki } https //github.com/rack/rack/wiki/list-of-middleware == testing sinatra tests written using rack-based testing library framework { rack :test } http //rdoc.info/github/brynary/rack-test/master/frames recommended require 'my_sinatra_app' require 'test/unit' require 'rack/test' class myapptest < test :unit :testcase include rack :test :methods def app sinatra :application end def test_my_default get '/' assert_equal 'hello world ! last_response.body end def test_with_params get '/meet name > 'frank' assert_equal 'hello frank ! last_response.body end def test_with_rack_env get '/ { } 'http_user_agent > 'songbird' assert_equal 're using songbird ! last_response.body end end == sinatra :base - middleware libraries modular apps defining app top-level works well micro-apps considerable drawbacks building reusable components rack middleware rails metal simple libraries server component even sinatra extensions top-level assumes micro-app style configuration e.g. single application file < tt > ./public < /tt > < tt > ./views < /tt > directories logging exception detail page etc. 's < tt > sinatra :base < /tt > comes play require 'sinatra/base' class myapp < sinatra :base set sessions true set foo 'bar' get '/ 'hello world ! end end methods available < tt > sinatra :base < /tt > subclasses exactly available via top-level dsl top-level apps converted < tt > sinatra :base < /tt > components two modifications file require < tt > sinatra/base < /tt > instead +sinatra+ ; otherwise sinatra 's dsl methods imported main namespace put app 's routes error handlers filters options subclass < tt > sinatra :base < /tt > < tt > sinatra :base < /tt > blank slate options disabled default including built-in server see { options configuration } http //sinatra.github.com/configuration.html details available options behavior === modular vs. classic style contrary common belief nothing wrong classic style suits application switch modular application main downsides using classic style rather modular style may one sinatra application per ruby process plan use one switch modular style reason mix modular classic style switching one style aware slightly different default settings setting classic modular app_file file loading sinatra file subclassing sinatra :base run 0 == app_file false logging true false method_override true false inline_templates true false static true false === serving modular application two common options starting modular app actively starting < tt > run ! < /tt > my_app.rb require 'sinatra/base' class myapp < sinatra :base ... app code ... start server ruby file executed directly run ! app_file == 0 end start ruby my_app.rb < tt > config.ru < /tt > allows using rack handler config.ru require './my_app' run myapp run rackup -p 4567 === using classic style application config.ru write app file app.rb require 'sinatra' get '/ 'hello world ! end corresponding < tt > config.ru < /tt > require './app' run sinatra :application === use config.ru good signs probably want use < tt > config.ru < /tt > want deploy different rack handler passenger unicorn heroku ... want use one subclass < tt > sinatra :base < /tt > want use sinatra middleware endpoint < b > need switch < tt > config.ru < /tt > switched modular style n't use modular style running < tt > config.ru < /tt > < /b > === using sinatra middleware sinatra able use rack middleware sinatra application turn added front rack endpoint middleware endpoint could another sinatra application rack-based application rails/ramaze/camping/ ... require 'sinatra/base' class loginscreen < sinatra :base enable sessions get '/login { haml login } post '/login params name == 'admin & & params password == 'admin' session 'user_name params name else redirect '/login' end end end class myapp < sinatra :base middleware run filters use loginscreen unless session 'user_name halt access denied please < href='/login > login < /a > '' end end get '/ { hello { session 'user_name } '' } end === dynamic application creation sometimes want create new applications runtime without assign constant < tt > sinatra.new < /tt > require 'sinatra/base' my_app sinatra.new { get '/ { hi '' } } my_app.run ! takes application inherit optional argument config.ru require 'sinatra/base' controller sinatra.new enable logging helpers myhelpers end map '/a run sinatra.new controller { get '/ { } } end map '/b run sinatra.new controller { get '/ { b } } end especially useful testing sinatra extensions using sinatra library also makes using sinatra middleware extremely easy require 'sinatra/base' use sinatra get '/ { ... } end run railsproject :application == scopes binding scope currently determines methods variables available === application/class scope every sinatra application corresponds subclass < tt > sinatra :base < /tt > using top-level dsl < tt > require 'sinatra < /tt > class < tt > sinatra :application < /tt > otherwise subclass created explicitly class level methods like +get+ +before+ access +request+ object +session+ single application class requests options created via +set+ methods class level class myapp < sinatra :base hey 'm application scope ! set foo 42 foo > 42 get '/foo hey 'm longer application scope ! end end application scope binding inside application class body methods defined extensions block passed +helpers+ procs/blocks used value +set+ block passed < tt > sinatra.new < /tt > reach scope object class like via object passed configure blocks < tt > configure { |c| ... } < /tt > +settings+ within request scope === request/instance scope every incoming request new instance application class created handler blocks run scope within scope access +request+ +session+ object call rendering methods like +erb+ +haml+ access application scope within request scope via +settings+ helper class myapp < sinatra :base hey 'm application scope ! get '/define_route/ name request scope '/define_route/ name' @ value 42 settings.get / { params name } '' request scope / { params name } '' @ value > nil request end route defined ! '' end end request scope binding inside get/head/post/put/delete/options blocks before/after filters helper methods templates/views === delegation scope delegation scope forwards methods class scope however behave 100 % like class scope class binding methods explicitly marked delegation available share variables/state class scope read different +self+ explicitly add method delegations calling < tt > sinatra :delegator.delegate method_name < /tt > delegate scope binding inside top level binding < tt > require sinatra '' < /tt > object extended < tt > sinatra :delegator < /tt > mixin look code 's { sinatra :delegator mixin } https //github.com/sinatra/sinatra/blob/ca06364/lib/sinatra/base.rb l1609-1633 { extending main object } https //github.com/sinatra/sinatra/blob/ca06364/lib/sinatra/main.rb l28-30 == command line sinatra applications run directly ruby myapp.rb -h -x -e environment -p port -o host -s handler options -h help -p set port default 4567 -o set host default 0.0.0.0 -e set environment default development -s specify rack server/handler default thin -x turn mutex lock default == requirement following ruby versions officially supported ruby 1.8.7 1.8.7 fully supported however nothing keeping recommend upgrading 1.9.2 switching jruby rubinius support 1.8.7 dropped sinatra 2.0 ruby 2.0 except maybe unlikely event 1.8.8 released even might continue supporting < b > ruby 1.8.6 longer supported. < /b > want run 1.8.6 downgrade sinatra 1.2 receive bug fixes sinatra 1.4.0 released ruby 1.9.2 1.9.2 fully supported recommended use 1.9.2p0 known cause segmentation faults running sinatra support continue least release ruby 1.9.4/2.0 support latest 1.9 release continue long still supported ruby core team ruby 1.9.3 1.9.3 fully supported recommended please note switching 1.9.3 earlier version invalidate sessions rubinius rubinius officially supported rubinius > 1.2.4 everything including template languages works upcoming 2.0 release supported well including 1.9 mode jruby jruby officially supported jruby > 1.6.7 issues third party template libraries known however choose use jruby please look jruby rack handlers thin web server fully supported jruby jruby 's support c extensions still experimental affects rdiscount redcarpet redcloth yajl templates well thin mongrel moment also keep eye upcoming ruby versions following ruby implementations officially supported still known run sinatra older versions jruby rubinius ruby enterprise edition macruby maglev ironruby ruby 1.9.0 1.9.1 recommend using officially supported means things break supported platform assume 's issue also run ci ruby-head upcoming 2.0.0 1.9.4 branch ca n't guarantee anything since constantly moving expect 1.9.4p0 2.0.0p0 supported sinatra work operating system supported chosen ruby implementation able run sinatra cardinal smallruby blueruby ruby version prior 1.8.7 time == bleeding edge would like use sinatra 's latest bleeding code feel free run application master branch rather stable also push prerelease gems time time gem install sinatra -- pre get latest features === bundler want run application latest sinatra using { bundler } http //gembundler.com/ recommended way first install bundler n't gem install bundler project directory create +gemfile+ source rubygems gem 'sinatra git > git //github.com/sinatra/sinatra.git '' dependencies gem 'haml instance use haml gem 'activerecord '~ > 3.0 maybe also need activerecord 3.x note list applications dependencies sinatra 's direct dependencies rack tilt however automatically fetched added bundler run app like bundle exec ruby myapp.rb === roll create local clone run app < tt > sinatra/lib < /tt > directory < tt > load_path < /tt > cd myapp git clone git //github.com/sinatra/sinatra.git ruby -isinatra/lib myapp.rb update sinatra sources future cd myapp/sinatra git pull === install globally build gem git clone git //github.com/sinatra/sinatra.git cd sinatra rake sinatra.gemspec rake install install gems root last step sudo rake install == versioning sinatra follows { semantic versioning } http //semver.org/ semver semvertag == reading { project website } http //www.sinatrarb.com/ - additional documentation news links resources { contributing } http //www.sinatrarb.com/contributing - find bug need help patch { issue tracker } http //github.com/sinatra/sinatra/issues { twitter } http //twitter.com/sinatra { mailing list } http //groups.google.com/group/sinatrarb/topics { irc sinatra } irc //chat.freenode.net/ sinatra http //freenode.net { sinatra book } http //sinatra-book.gittr.com cookbook tutorial { sinatra recipes } http //recipes.sinatrarb.com/ community contributed recipes api documentation { latest release } http //rubydoc.info/gems/sinatra { current head } http //rubydoc.info/github/sinatra/sinatra http //rubydoc.info { ci server } http //ci.rkh.im/view/sinatra/"}, {"url": "https://api.github.com/repos/jnewland/gsa-prototype", "owner": "jnewland", "readme": "gsa-prototype ============= prototype/javascript wrapper google search appliance search protocol fancy cross-domain json support included install ======= gsa-prototype requires custom xsl installed google search appliance login gsa admin console click 'serving sidebar create new frontend named 'json' click 'edit beside newly created frontend click 'edit underlying xslt code' select 'import stylesheet' import template xsl/json.xsl done ! usage ===== > > > var gsa new gsa 'foo.com > > > gsa.search 'jesse newland true > > > gsa.results.first .get 'title '' lexblog director talks today & 39 ; platform upgrade real < b > ... < /b > '' > > > gsa.results.first .get 'url '' http //kevin.lexblog.com/2007/07/articles/cool-stuff/lexblog-it-director-talks-about-todays-platform-upgrade/ '' see inline documentation gsa.js details"}, {"url": "https://api.github.com/repos/technoweenie/duplikate", "owner": "technoweenie", "readme": "duplikate ========= process differences two directories dupe duplikate.process 'my-git-repo 'my-svn-repo' dupe.added_files > ... ... dupe.added_directories > ... ... dupe.deleted_files > ... ... dupe.deleted_directories > ... ... dupe.existing_files > ... ... dupe.report actually make changes commit svn duplikate.execute 'my-git-repo 'my-svn-repo' todo actual real-world usage !"}, {"url": "https://api.github.com/repos/jnewland/lazy_record", "owner": "jnewland", "readme": "lazyrecord ========== proof concept lazy-loading activerecord inspired 'kickers ambition > > b buzz.lazy_find first > < activerecord :lazy :promise computation= < proc:0x025d1e50 @ ... > > -- -- -- -- -- -- -no sql query run method called 'promise > > b.to_s -- -- -- -- -- -- -buzz load 0.000578 select buzz limit 1 > inaugural buzz '' use +lazy_record+ class method make default certain class class buzz < < activerecord :base lazy_record end > > b buzz.find first > < activerecord :lazy :promise computation= < proc:0x025d1e50 @ ... > > -- -- -- -- -- -- -no sql query run method called 'promise > > b.to_s -- -- -- -- -- -- -buzz load 0.000578 select buzz limit 1 > inaugural buzz '' might want use =========== say 've got kick-ass cache_fu going views - huge blocks html cached ttl 30 mins hit controller still fires 'spensive db queries fetch tag cloud lazy loading queries n't run absolutely necessary - giving db rest til cache expires boosting reqs/sec might want use =========== > > b buzz.lazy_find 123023424 > < activerecord :lazy :promise computation= < proc:0x025d1e50 @ ... > > > > puts booleans screwed '' b booleans screwed promise code http //moonbase.rydia.net/software/lazy.rb/ contact ======= jesse newland jnewland @ gmail.com"}, {"url": "https://api.github.com/repos/jnewland/gsa-feeds", "owner": "jnewland", "readme": "gsa feeds ========= ruby wrapper google search appliance feeds protocol protocol exists push content metadata search appliance processing indexing serving search results feeds available gsa software versions 4.2 later"}, {"url": "https://api.github.com/repos/jnewland/votigoto", "owner": "jnewland", "readme": "readme votigoto =================== > > require 'votigoto' > true > > tivo votigoto :base.new 10.0.0.148 '' '' sekret_media_access_key '' > < votigoto :base:0x14095d8 @ mak= '' sekret_media_access_key '' @ ip= '' 10.0.0.148 '' > > > tivo.shows.first.to_s > daily show jon stewart - senator joe biden d-del. ''"}, {"url": "https://api.github.com/repos/defunkt/mofo", "owner": "defunkt", "readme": "mofo - ruby microformat parser - engine dsl helper toy first word hpricot still great seems destined deprecation 're nokogiri try prism microformatic needs http //github.com/mwunsch/prism get started immediately irb -rubygems > > require 'mofo' > true > > fireball hcard.find 'http //flickr.com/people/gruber/' > < hcard:0x6db898 ... > > > fireball.nickname > gruber '' > > fireball.url > http //daringfireball.net/ '' > > fireball.n.family_name > gruber '' > > fireball.title > raconteur '' > > fireball.adr.locality > philadelphia '' > > fireball.logo > http //static.flickr.com/9/buddyicons/44621776 @ n00.jpg 1117572751 '' grab git clone git //github.com/defunkt/mofo.git open http //github.com/defunkt/mofo microwhozit microformats tiny little markup definitions built top usually html xhtml blog recent posts blog 's index page atom feed recent posts blog 's atom feed see i'm going hatom microformat uformat embedded existing html setting css classes semantic meaning inside posts class signify post contained within div class signify contents h3 post 's title class signify contents span blog post 's author etc use microformat parser like say mofo extract information would atom feed hell even convert hatom atom 's insta-feed ! extra code required ! 're already work see microformats everywhere need set free check < div class= '' post '' > < h3 > megadeth show last night < /h3 > < span class= '' subtitle '' > posted chris june 4th < /span > < div class= '' content '' > went show last night megadeth alright. < /div > < /div > right normal 's post marked hatom < div class= '' post hentry '' > < h3 class= '' entry-title '' > megadeth show last night < /h3 > < span class= '' subtitle '' > posted < span class= '' author vcard fn '' > chris < /span > < abbr class= '' updated '' title= '' 2006-06-04t10:32:10z '' > june 4th < /abbr > < /span > < div class= '' content entry-content '' > went show last night megadeth alright. < /div > < /div > add hentry entry-title entry-content classes existing containers went ahead wrapped date < abbr > tag giving title microformat-standard way finally put div around chris signifying author field hentry making valid hcard including vcard fn classes 's really hard mess maybe 'm sure got close n't even use reference practice 'd parse tho irb -rubygems > > require 'mofo' > true > > post hentry.find 'http //milesofstyle.org/posts/351-megadeth-show-last-night.html' > < hentry:0x6db898 ... > > > post.entry_title > megadeth show last night '' > > post.properties > entry_content '' updated '' author '' entry_title '' > > post.updated > sun jun 04 10:32:10 utc 2006 > > post.updated.class > time > > post.author > < hcard:0x6e7b98 @ properties= fn '' @ fn= '' chris '' > > > post.author.fn > chris '' > > post.entry_content > went show last night megadeth alright '' 's like stupid easy hentry.find gets back one hentry 'll get array mofo find everything revolves around find method sound familiar yeah > > microformat.find http //valid-url.com '' > > microformat.find /path/to/existing/file '' > > microformat.find text > microformat text '' also find told explicitly find returning array failure find first returning nil failure > > microformat.find > /existing/file '' > array microformat objects > > microformat.find first > /existing/file '' > microformat object > > microformat.find /existing/file '' > either array objects one object first go outside text > > microformat.find > { text > 'mfin text } 's microformats take specific options microformats currently implemented microformats along site use today want better faster stat formats - hcard flickr profiles - hcalendar upcoming.org - hreview cork 'd reviews - hentry err blog posts - hresume linkedin.com - xoxo chowhound.com - geo upcoming.org - adr upcoming.org - xfn linkedin.com patterns - rel-tag - rel-bookmark - include-pattern ruby rails mofo doubles rails plugin drop vendor/plugins good go available microformat parsers loaded application mofo classes yaml marshal approved means cache drb memcached store session info > > http //microformats.org/ > homepage check '' > > http //microformats.org/wiki/ > wiki check '' > > http //blog.labnotes.org/category/microformats/ > assaf arkin knows mfin stuff '' > > http //allinthehead.com/ > drew mcclellan microformat wizard '' > > http //mofo.rubyforge.org/ > mofo hq '' parsers > > scrapi > http //rubyforge.org/projects/scrapi/ > > uformats > http //rubyforge.org/projects/uformats contributors > > steve ivy > > olle jonsson > > christian carter > > grant rodgers > > denis defreyne > > andrew turner > > mark murphy author > > chris wanstrath > chris ozmm dot org"}, {"url": "https://api.github.com/repos/jnewland/xhtmlize", "owner": "jnewland", "readme": "xhtmlize ========== rails helper xhtml-ize chunks user submitted html standardista us > > html < div > < p > foo < /p > < href='http //foo.com > foo '' > < div > < p > foo < /p > < href='http //foo.com > foo '' > > xhtmlize html > < div > < p > foo < /p > < href=\\ '' http //foo.com\\ '' > foo < /a > < /div > '' also comes activerecord class method automatically xhtmlize attributes after_save callback class comment < activerecord :base xhtmlize title content end"}, {"url": "https://api.github.com/repos/ruby-git/ruby-git", "owner": "ruby-git", "readme": "git library ruby library using git ruby homepage git public hosting project source code http //github.com/ruby-git/ruby-git install install ruby/git like sudo gem install git code status ! build status https //travis-ci.org/ruby-git/ruby-git.svg branch=master https //travis-ci.org/ruby-git/ruby-git ! code climate https //codeclimate.com/github/ruby-git/ruby-git.png https //codeclimate.com/github/ruby-git/ruby-git ! gem version https //badge.fury.io/rb/git.svg https //badge.fury.io/rb/git major objects **git :base** - object returned git.open git.clone major actions called object **git :object** - base object tree blob commit objects returned @ git.gtree @ git.object calls git :abstractobject calls common objects **git :diff** - returns @ git.diff command enumerable returns git :diff difffile objects get per file patches insertion/deletion statistics also get total statistics git :diff object directly **git :status** - returns @ git.status command enumerable returns git status :statusfile objects object git includes files working directory index repository similar running 'git status command line determine untracked changed files **git :branches** - enumerable object holds git :branch objects call .local .remote filter local remote branches **git :remote**- reference remote repository tracked repository **git :log** - enumerable object references git :object :commit objects encompass log query constructed methods git :log object like @ git.log 20 .object some_file '' .since 2 weeks ago '' .between 'v2.6 'v2.7 .each { |commit| block } examples bunch examples use ruby/git package ruby < 1.9 require rubygems loaded ruby require 'rubygems' require 'git gem ruby require 'git' git env config ruby git.configure |config| want use custom git binary config.binary_path '/git/bin/path' need use custom ssh script config.git_ssh '/path/to/ssh/script' end _note another way specify git binary environment variable git_path _ operations need read permission ruby g git.open working_dir log > logger.new stdout g.index g.index.readable g.index.writable g.repo g.dir g.log returns array git :commit objects g.log.since 2 weeks ago g.log.between 'v2.5 'v2.6 g.log.each { |l| puts l.sha } g.gblob 'v2.5 makefile .log.since 2 weeks ago g.object 'head^ .to_s git show / git rev-parse g.object 'head^ .contents g.object 'v2.5 makefile .size g.object 'v2.5 makefile .sha g.gtree treeish g.gblob treeish g.gcommit treeish commit g.gcommit '1cc8667014381 commit.gtree commit.parent.sha commit.parents.size commit.author.name commit.author.email commit.author.date.strftime % m- % d- % '' commit.committer.name commit.date.strftime % m- % d- % '' commit.message tree g.gtree head^ { tree } '' tree.blobs tree.subtrees tree.children blobs subtrees g.revparse 'v2.5 makefile g.branches returns git :branch objects g.branches.local g.branches.remote g.branches master .gcommit g.branches 'origin/master .gcommit g.grep 'hello implies head g.blob 'v2.5 makefile .grep 'hello g.tag 'v2.5 .grep 'hello 'docs/ g.describe g.describe '0djf2aa g.describe 'head { > true tags > true } g.diff commit1 commit2 .size g.diff commit1 commit2 .stats g.diff commit1 commit2 .name_status g.gtree 'v2.5 .diff 'v2.6 .insertions g.diff 'gitsearch1 'v2.5 .path 'lib/ g.diff 'gitsearch1 @ git.gtree 'v2.5 g.diff 'gitsearch1 'v2.5 .path 'docs/ .patch g.gtree 'v2.5 .diff 'v2.6 .patch g.gtree 'v2.5 .diff 'v2.6 .each |file_diff| puts file_diff.path puts file_diff.patch puts file_diff.blob src .contents end g.config 'user.name returns 'scott chacon' g.config returns whole config hash g.tags returns array git :tag objects g.show g.show 'head g.show 'v2.8 'readme.md git.ls_remote 'https //github.com/ruby-git/ruby-git.git returns hash containing available references repo git.ls_remote '/path/to/local/repo git.ls_remote git.ls_remote operations need write git repository ruby g git.init git.init 'project git.init '/home/schacon/proj { repository > '/opt/git/proj.git index > '/tmp/index } g git.clone uri name path > '/tmp/checkout g.config 'user.name 'scott chacon g.config 'user.email 'email @ email.com g.add git add -- '' g.add all= > true git add -- -- '' g.add 'file_path git add -- file_path '' g.add 'file_path_1 'file_path_2 git add -- file_path_1 '' file_path_2 '' g.remove git rm -f -- '' g.remove 'file.txt git rm -f -- file.txt '' g.remove 'file.txt 'file2.txt git rm -f -- file.txt '' file2.txt '' g.remove 'file.txt recursive > true git rm -f -r -- file.txt '' g.remove 'file.txt cached > true git rm -f -- cached -- file.txt '' g.commit 'message g.commit_all 'message g git.clone repo 'myrepo g.chdir new_file 'test-file 'blahblahblah g.status.changed.each |file| puts file.blob index .contents end end g.reset defaults head g.reset_hard git :commit g.branch 'new_branch creates new fetches existing g.branch 'new_branch .checkout g.branch 'new_branch .delete g.branch 'existing_branch .checkout g.branch 'master .contains 'existing_branch g.checkout 'new_branch g.checkout g.branch 'new_branch g.branch name .merge branch2 g.branch branch2 .merge merges head branch2 g.branch name .in_branch message { add files } auto-commits g.merge 'new_branch g.merge 'origin/remote_branch g.merge g.branch 'master g.merge branch1 branch2 g.merge_base 'branch1 'branch2 r g.add_remote name uri git :remote r g.add_remote name git :base git :remote g.remotes array git :remotes g.remote name .fetch g.remote name .remove g.remote name .merge g.remote name .merge branch g.fetch g.fetch g.remotes.first g.fetch 'origin { ref > 'some/ref/head } g.pull g.pull git :repo git :branch fetch merge g.add_tag 'tag_name returns git :tag g.add_tag 'tag_name 'object_reference g.add_tag 'tag_name 'object_reference { options > 'here } g.add_tag 'tag_name { options > 'here } options | annotate f | message g.delete_tag 'tag_name g.repack g.push g.push g.remote 'name examples low-level index tree operations ruby g.with_temp_index g.read_tree tree3 calls self.index.read_tree g.read_tree tree1 prefix > 'hi/ c g.commit_tree 'message g.write_tree c g.commit_tree message > 'message parents > sha1 sha2 g.branch 'branch_name .update_ref c g.update_ref branch c g.with_temp_working new blank working directory g.checkout g.checkout another_index g.commit commits temp_index end end g.set_index '/path/to/index g.with_index path calls set_index switches back end g.with_working dir calls set_working switches back end g.with_temp_working dir g.checkout_index prefix > dir path_limiter > path file work g.commit commits index end license licensed mit license copyright c 2008 scott chacon see license details"}, {"url": "https://api.github.com/repos/ezmobius/bmhsearch", "owner": "ezmobius", "readme": "bmhsearch zed shaw == description bmhsearch fast mime carver == features/problems fix list features problems == synopsys fix code sample usage == requirements fix list requirements \u00df == install fix sudo gem install anything else == license mit license copyright c 2007 fix permission hereby granted free charge person obtaining copy software associated documentation files 'software deal software without restriction including without limitation rights use copy modify merge publish distribute sublicense and/or sell copies software permit persons software furnished subject following conditions copyright notice permission notice shall included copies substantial portions software software provided 'as without warranty kind express implied including limited warranties merchantability fitness particular purpose noninfringement event shall authors copyright holders liable claim damages liability whether action contract tort otherwise arising connection software use dealings software"}, {"url": "https://api.github.com/repos/uggedal/mofo", "owner": "uggedal", "readme": "mofo - ruby microformat parser - engine dsl helper toy get started immediately irb -rubygems > > require 'mofo' > true > > fireball hcard.find 'http //flickr.com/people/gruber/' > < hcard:0x6db898 ... > > > fireball.nickname > gruber '' > > fireball.url > http //daringfireball.net/ '' > > fireball.n.family_name > gruber '' > > fireball.title > raconteur '' > > fireball.adr.locality > philadelphia '' > > fireball.logo > http //static.flickr.com/9/buddyicons/44621776 @ n00.jpg 1117572751 '' grab git clone git //github.com/defunkt/mofo.git open http //github.com/defunkt/mofo microwhozit microformats tiny little markup definitions built top usually html xhtml blog recent posts blog 's index page atom feed recent posts blog 's atom feed see i'm going hatom microformat uformat embedded existing html setting css classes semantic meaning inside posts class signify post contained within div class signify contents h3 post 's title class signify contents span blog post 's author etc use microformat parser like say mofo extract information would atom feed hell even convert hatom atom 's insta-feed ! extra code required ! 're already work see microformats everywhere need set free check < div class= '' post '' > < h3 > megadeth show last night < /h3 > < span class= '' subtitle '' > posted chris june 4th < /span > < div class= '' content '' > went show last night megadeth alright. < /div > < /div > right normal 's post marked hatom < div class= '' post hentry '' > < h3 class= '' entry-title '' > megadeth show last night < /h3 > < span class= '' subtitle '' > posted < span class= '' author vcard fn '' > chris < /span > < abbr class= '' updated '' title= '' 2006-06-04t10:32:10z '' > june 4th < /abbr > < /span > < div class= '' content entry-content '' > went show last night megadeth alright. < /div > < /div > add hentry entry-title entry-content classes existing containers went ahead wrapped date < abbr > tag giving title microformat-standard way finally put div around chris signifying author field hentry making valid hcard including vcard fn classes 's really hard mess maybe 'm sure got close n't even use reference practice 'd parse tho irb -rubygems > > require 'mofo' > true > > post hentry.find 'http //milesofstyle.org/posts/351-megadeth-show-last-night.html' > < hentry:0x6db898 ... > > > post.entry_title > megadeth show last night '' > > post.properties > entry_content '' updated '' author '' entry_title '' > > post.updated > sun jun 04 10:32:10 utc 2006 > > post.updated.class > time > > post.author > < hcard:0x6e7b98 @ properties= fn '' @ fn= '' chris '' > > > post.author.fn > chris '' > > post.entry_content > went show last night megadeth alright '' 's like stupid easy hentry.find gets back one hentry 'll get array mofo find everything revolves around find method sound familiar yeah > > microformat.find http //valid-url.com '' > > microformat.find /path/to/existing/file '' > > microformat.find text > microformat text '' also find told explicitly find returning array failure find first returning nil failure > > microformat.find > /existing/file '' > array microformat objects > > microformat.find first > /existing/file '' > microformat object > > microformat.find /existing/file '' > either array objects one object first go outside text > > microformat.find > { text > 'mfin text } 's microformats take specific options microformats currently implemented microformats along site use today want better faster stat formats - hcard flickr profiles - hcalendar upcoming.org - hreview cork 'd reviews - hentry err blog posts - hresume linkedin.com - xoxo chowhound.com - geo upcoming.org - adr upcoming.org - xfn linkedin.com patterns - rel-tag - rel-bookmark - include-pattern ruby rails mofo doubles rails plugin drop vendor/plugins good go available microformat parsers loaded application mofo classes yaml marshal approved means cache drb memcached store session info > > http //microformats.org/ > homepage check '' > > http //microformats.org/wiki/ > wiki check '' > > http //blog.labnotes.org/category/microformats/ > assaf arkin knows mfin stuff '' > > http //allinthehead.com/ > drew mcclellan microformat wizard '' > > http //mofo.rubyforge.org/ > mofo hq '' parsers > > scrapi > http //rubyforge.org/projects/scrapi/ > > uformats > http //rubyforge.org/projects/uformats contributors > > steve ivy > > olle jonsson > > christian carter > > grant rodgers > > denis defreyne > > andrew turner > > mark murphy author > > chris wanstrath > chris ozmm dot org"}, {"url": "https://api.github.com/repos/mmower/simply_versioned", "owner": "mmower", "readme": "simplyversioned =============== release 1.0.0 date 28-01-2008 author matt mower < self @ mattmower.com > simplyversioned simple non-invasive approach versioning activerecord models simplyversioned require structural change models versioned requires one versions table created migration generator supplied plugin application regardless number models versioned plugin introduces 'version activerecord model reflects changes model attributes versioned models polymorphically associated version records store model information yaml hash simplyversioned meets simple need model versioning needs complex maybe try rick olsen 's acts_as_versioned http //svn.techno-weenie.net/projects/plugins/acts_as_versioned/ simplyversioned far actively tested rails 2.0.2 ruby 1.8.6 usage ===== 1. install plugin ./script/plugin install http //rubymatt.rubyforge.org/svn/simply_versioned 2. generate migration ./script/generate simply_versioned_migration note migration defaults storing version info text field mysql default limit 64k versioning particularly large models want modify migration include limit > n condition promote yaml column mediumtext god forbid longtext 3. create versions table rake db migrate 4. annotate models want version specifying many versions keep class thing < activerecord :base simply_versioned keep > 10 end specify limit old versions never automatically deleted manually delete like thing.versions.purge 10 would delete last ten versions want fine-grained control versions created use class thing < activerecord :base simply_versioned automatic > false end new versions longer created default need use with_versioning method create version lastly control columns versioned specifying exclude parameter class thing < activerecord :base simply_versioned exclude > awkward_column end class thing < activerecord :base simply_versioned exclude > first_awkward_column :second_awkward_column ... end may helpful run conflicts plugins try manage columns 5. create versions thing thing.create ! foo > bar creates v1 thing.foo baz thing.save ! creates v2 need control whether version created use with_versioning example thing.with_versioning false |t| t.save ! end using magic pen '' http //dablog.rubypal.com/2007/2/18/the-magic-pens-of-ruby thanks hmj thing.with_versioning false & save ! 6. find versions thing.versions.each |version| ... end render partial > 'thing_version collection > thing.versions thing.versions.current thing.versions.first thing.versions.get 3 find version number thing.version_number 7. revert previous version thing.revert_to_version 5 specific reversion needs avoid overwriting column values pass except option e.g thing.revert_to_version 1 except > name :age revert_to_version method also takes existing version instance e.g version thing.versions.find ... thing.revert_to_version version 8. traverse versions thing.versions.current.previous thing.versions.first.next 9. obtain copy previous versioned model thing.versions.first.model > instantiated thing versioned values thanks chris wanstrath http //ozmm.org/ useful feedback github josh susser http //blog.hasmanythrough.com/ useful suggestions feedback rick olson http //techno-weenie.net/ many plugins whose code 've read copyright c 2007 matt mower < self @ mattmower.com > released mit license"}, {"url": "https://api.github.com/repos/abhay/gchart", "owner": "abhay", "readme": "gchart == description gchart exposes google chart api http //code.google.com/apis/chart via friendly ruby interface generate url given chart webpage use download generated png offline use == problems/todo add support fills area background grid lines shape markers range markers support shorthand colors color names make venn data specification friendlier lots missing features 're implemented directly specify query parameters using extras key e.g. provides legend data set g gchart.line data > 1 2 3 4 extras > { chdl '' > first|second '' } == synopsis line chart g gchart.line data > 0 10 100 bar chart g gchart.bar data > 100 1000 10000 pie chart pie3d fancier look g gchart.pie data > 33 33 34 venn diagram asize bsize csize ab % bc % ca % abc % g gchart.venn data > 100 80 60 30 30 30 10 scatter plot x coords coords sizes g gchart.scatter data > 1 2 3 4 5 5 4 3 2 1 1 2 3 4 5 map chart g gchart.map area > 'usa data > { 'ny'= > 1 'va'= > 3 'ca'= > 2 } meter g gchart.meter data > 70 label > 70 % '' chart title g gchart.line title > awesomeness time '' data > 0 10 100 data set legend g gchart.line data > 1 2 3 4 legend > monkeys '' ferrets '' data set colors g gchart.line data > 0 10 100 100 10 0 colors > ff0000 '' 0000ff '' g.to_url generate chart 's url g.fetch get bytes g.write foo.png '' write file defaults chart.png '' g.write stream write anything quacks like io == license mit license copyright 2007-2008 john barnette jbarnette @ rubyforge.org permission hereby granted free charge person obtaining copy software associated documentation files 'software deal software without restriction including without limitation rights use copy modify merge publish distribute sublicense and/or sell copies software permit persons software furnished subject following conditions copyright notice permission notice shall included copies substantial portions software software provided 'as without warranty kind express implied including limited warranties merchantability fitness particular purpose noninfringement event shall authors copyright holders liable claim damages liability whether action contract tort otherwise arising connection software use dealings software"}, {"url": "https://api.github.com/repos/benburkert/schemr", "owner": "benburkert", "readme": "github win !"}, {"url": "https://api.github.com/repos/abhay/calais", "owner": "abhay", "readme": "calais ruby interface open calais web service http //opencalais.com features accepts documents text/plain text/xml text/html format basic access open calais api 's enlighten action output rdf representation input document single function ability extract names entities geographies given text synopsis basic wrapper open calais api uses post endpoint currently supports enlighten action 's simple call calais.enlighten content > government united kingdom given corporations like fast food chain mcdonald 's right award high school qualifications employees complete company training program content_type > raw license_id > 'your license id' easiest way get rdf-formated response opencalais service want something fun like getting sorts fun information document try calais.process_document content > government united kingdom given corporations like fast food chain mcdonald 's right award high school qualifications employees complete company training program content_type > raw license_id > 'your license id' return object containing information extracted rdf response requirements ruby 1.8.5 better http //ruby-lang.org nokogiri http //nokogiri.rubyforge.org/nokogiri/ libxml2 http //xmlsoft.org/ libxslt http //xmlsoft.org/xslt/ curb http //curb.rubyforge.org/ libcurl http //curl.haxx.se/ json http //json.rubyforge.org/ install install calais gem via rubygems gem install calais building source authors abhay kumar http //opensynapse.net acknowledgements paul legato http //www.economaton.com/ help around new response processor implementation 3.1 api ryan ong http //www.ryanong.net/ juan antonio chavez https //github.com/thenaox geographies relevance"}, {"url": "https://api.github.com/repos/mojombo/chronic", "owner": "mojombo", "readme": "chronic ======= chronic natural language date/time parser written pure ruby see wide variety formats chronic parse installation gem install chronic usage ruby require 'chronic' time.now > sun aug 27 23:18:25 pdt 2006 chronic.parse 'tomorrow > mon aug 28 12:00:00 pdt 2006 chronic.parse 'monday context > past > mon aug 21 12:00:00 pdt 2006 chronic.parse 'this tuesday 5:00 > tue aug 29 17:00:00 pdt 2006 chronic.parse 'this tuesday 5:00 ambiguous_time_range > none > tue aug 29 05:00:00 pdt 2006 chronic.parse 'may 27th > time.local 2000 1 1 > sat may 27 12:00:00 pdt 2000 chronic.parse 'may 27th guess > false > sun may 27 00:00:00 pdt 2007..mon may 28 00:00:00 pdt 2007 chronic.parse 6/4/2012 endian_precedence > little > fri apr 06 00:00:00 pdt 2012 chronic.parse 'invalid date > nil parser find date time either time chronic :span returned depending value guess date time found nil returned see chronic.parse detailed usage instructions examples chronic parse huge variety date time formats following small sample strings properly parsed parsing case insensitive handle common abbreviations misspellings simple thursday november summer friday 13:00 mon 2:35 4pm 10 8 10 past 2 half past 2 6 morning friday 1pm sat 7 evening yesterday today tomorrow last week next week tuesday next month last winter morning last night second yesterday 4:00 last friday 20:00 last week tuesday tomorrow 6:45pm afternoon yesterday thursday last week complex 3 years ago year ago 5 months 7 hours ago 7 days 1 week hence 3 hours 1 year ago tomorrow 3 months ago saturday 5:00 pm 7 hours tomorrow noon 3rd wednesday november 3rd month next year 3rd thursday september 4th day last week fourteenth june 2010 eleven o'clock evening may seventh '97 three morning specific dates january 5 22nd june 5th may 2017 february twenty first dec 25 may 27th october 2006 oct 06 jan 3 2010 february 14 2004 february 14th 2004 3 jan 2000 17 april 85 5/27/1979 27/5/1979 05/06 1979-05-27 friday 5 4:00 17:00 0800 specific times many added time january 5 7pm 22nd june 8am 1979-05-27 05:00:00 03/01/2012 07:25:09.234567 2013-08-01t19:30:00.345-07:00 2013-08-01t19:30:00.34-07:00 etc time zones chronic allows set time class use constructing times default built ruby time class creates times system 's local time zone set something like activesupport's timezone http //api.rubyonrails.org/classes/activesupport/timezone.html class get full time zone support > > time.zone utc '' > > chronic.time_class time.zone > > chronic.parse june 15 2006 5:45 '' > thu 15 jun 2006 05:45:00 utc +00:00 limitations chronic uses ruby 's built time class time storage computation times time class handle properly parsed parsing times outside range simply return nil support wider range times planned future release contribute 'd like hack chronic start forking repo github https //github.com/mojombo/chronic best way get changes merged back core follows 1. clone fork 1. create thoughtfully named topic branch contain change 1. install development dependencies running bundle install 1. hack away 1. add tests make sure everything still passes running bundle exec rake 1. ensure tests pass multiple timezones ie tz=utc bundle exec rake tz=bst bundle exec rake 1. adding new functionality document readme 1. change version number end 1. necessary rebase commits logical chunks without errors 1. push branch github 1. send pull request branch"}, {"url": "https://api.github.com/repos/sr/git-wiki", "owner": "sr", "readme": "git-wiki needs cool names use git ======================================================== git-wiki wiki relies git keep pages history sinatra serve wrote git-wiki quick dirty hack mostly play sinatra turned sinatra awesome little web framework hack n't useless first though since use daily however definitely feature rich probably never mostly use web frontend git ls vim want history search etc look people 's forks especially al3x 's one install -- -- -- - fellowing gems required run git-wiki - sinatra - mojombo-grit - haml - rdiscount run mkdir ~/wiki & & cd ~/wiki & & git init & & ./run.ru -sthin -p4567 point browser < http //0.0.0.0:4567/ > enjoy ! see also -- -- -- -- - use vim edit & lt ; textarea & gt ; lynx tip - wigit think git-wiki except implemented php - ikiwiki wiki compiler supporting git sinatra http //www.sinatrarb.com github http //github.com/sr/git-wiki forks http //github.com/sr/git-wiki/network al3x http //github.com/al3x/git-wiki gems http //www.rubygems.org/ mojombo-grit http //github.com/mojombo/grit haml http //haml.hamptoncatlin.com rdiscount http //github.com/rtomayko/rdiscount tip http //wiki.infogami.com/using_lynx_ & _vim_with_infogami wigit http //el-tramo.be/software/wigit ikiwiki http //ikiwiki.info quotes -- -- -- < blockquote > < p > ... first wiki engine 'd consider worth using projects. < /p > < p > < cite > < href= '' http //www.dekorte.com/blog/blog.cgi do=item & amp ; id=3319 '' > steve dekorte < /a > < /cite > < /p > < /blockquote > < blockquote > < p > oh looks like < href= '' http //atonie.org/2008/02/git-wiki '' > git wiki < /a > may starting point need ... < /p > < p > < cite > < href= '' http //tommorris.org/blog/2008/03/09 pid2761430 '' > tom morris build perfect wiki '' < /a > < /cite > < /p > < /blockquote > < blockquote > < p > makes git-wiki cool backed git store clone wiki like could git repository \u2019 always wanted wiki could pull offline \u2019 access internets b edit perhaps bulk favorite text editor git-wiki allows both. < /p > < p > < cite > < href= '' http //github.com/willcodeforfoo/git-wiki/wikis '' > cloning wiki < /a > < /cite > < /p > < /blockquote > < blockquote > < p > numerous people written diff merge systems wikis ; twiki even uses rcs used git instead repository would tiny could make personal copy entire wiki take plane sync changes back 're done. < /p > < p > < cite > < href= '' http //www.advogato.org/person/apenwarr/diary/371.html '' > git next unix < /a > < /cite > < /p > < /blockquote > licence -- -- -- - fuck want public license version 2 december 2004 copyright c 2008 simon rozet < simon @ rozet.name > everyone permitted copy distribute verbatim modified copies license document changing allowed long name changed fuck want public license terms conditions copying distribution modification 0. fuck want"}, {"url": "https://api.github.com/repos/queso/signal-wiki", "owner": "queso", "readme": "===== signal wiki signal wiki easy use wiki built standards mind uses common rails plugins practises make sure easy integrate wiki suite site offerings wanted something could tie shared user table multiple apps beast app time could login used restful auth several clients asking decided must big need clients agreement extracted basic wiki parts cleaned result code enjoy ===== installation instructions fixme detail instructions 1. download app 2. copy config/database.yml.example config/database.yml 3. run rake db migrate '' root app 4. start rails app using mongrel fcgi whatever crazy method use 5. input wiki stuffs ===== required gems json ruby-openid ruby-yadis redcloth"}, {"url": "https://api.github.com/repos/drnic/ruby-on-rails-tmbundle", "owner": "drnic", "readme": "textmate bundle ruby rails development install git mkdir -p ~/library/application\\ support/textmate/bundles cd ~/library/application\\ support/textmate/bundles git clone git //github.com/drnic/ruby-on-rails-tmbundle.git ruby rails.tmbundle '' osascript -e 'tell app textmate '' reload bundles' install without git mkdir -p ~/library/application\\ support/textmate/bundles cd ~/library/application\\ support/textmate/bundles wget http //github.com/drnic/ruby-on-rails-tmbundle/tarball/master tar zxf drnic-ruby-on-rails-tmbundle*.tar.gz rm drnic-ruby-on-rails-tmbundle*.tar.gz mv drnic-ruby-on-rails-tmbundle* ruby rails.tmbundle '' osascript -e 'tell app textmate '' reload bundles' ruby 1.8.7 greater required"}, {"url": "https://api.github.com/repos/danwrong/low-pro-for-jquery", "owner": "danwrong", "readme": "low pro jq -- -- -- -- -- author dan webb dan @ danwebb.net git github.com danwrong/low-pro-for-jquery.git download http //github.com/danwrong/low-pro-for-jquery/tree/master/src/lowpro.jquery.js raw=true jquery port low pro behavior framework originally written prototype brief -- -- -- -- create behavior class testy .klass { initialize function arg { alert 'ive attached arg + arg ; } onclick function { alert 'ive clicked ; } } ; btw .klass full port prototype 's class.create youget bonus use inheritance stuff way next attach behavior dom ready jquery way jquery function { p .attach testy 'my arg ; } ; alternatively need attach behaviors get references behavior instances created use .attachandreturn clicky 45 //= > array behavior instances aside everything works low pro prototype see http //www.danwebb.net/lowpro details livequery support -- -- -- -- -- -- -- -- - livequery plugin found low pro use automatically bind behaviors newly created content taking example something like document.body .append < p > new para < /p > would get behavior binded acknowledgements -- -- -- -- -- -- -- -- .klass code direct port class.create code prototype http //prototypejs.org"}, {"url": "https://api.github.com/repos/wayneeseguin/merb-core", "owner": "wayneeseguin", "readme": "merb-core new branch merb also referred merb-next 0.9 series aims provide stable stripped api future merb 1.0 release branch based 0.5 release series significant rewrites goals release stabilize @ public interface methods provide consistent application development experience remove features nothing except central application api left improve comments methods using standard documentation methodology described documentation_standards separate tests two sections ... private '' public '' public methods methods tagged @ public part standard stable merb api private methods implementation methods might implement new render api build extensions regain selected features needed familiarize merb-core application might look reference /sample directory"}, {"url": "https://api.github.com/repos/sr/dst", "owner": "sr", "readme": "dst kiss gtd manager command line lovers == licence dst copyright 2008 simon rozet licensed mit licence see included license file details == install sudo gem install ape == usage % dst @ mail john @ doe.org foo 1 - @ mail john @ doe.org foo created % dst @ code myproj fix bug 123 2 - @ code myproj fix bug 123 created % dst @ code myproj foo bar 3 - @ code myproj foo bar created % dst 1 - @ mail john @ doe.org foo 2 - @ code myproj fix bug 3 - @ code myproj foo bar % dst @ mail 1 - @ mail john @ doe.org foo % dst myproj 2 - @ code myproj fix bug 3 - @ code myproj foo bar % dst ^2 ok 2 - @ code myproj fix bug marked completed % dst 1 - @ mail john @ doe.org foo 3 - @ code myproj foo bar == contact simon rozet simon @ rozet.name"}, {"url": "https://api.github.com/repos/mojombo/yaws", "owner": "mojombo", "readme": "yaws webserver dynamic content written erlang build install 1. get install erlang system http //www.erlang.org 2 ./configure -- prefix=/usr/local install everything /usr/local including var files /usr/local/var/run/yaws etc files /usr/local/etc/yaws plain ./configure install executables /usr/local/bin libs /usr/local/lib/yaws etc var files end /usr/local/etc /usr/local/var note also change target directory etc var directories using -- localstatedir=dir files go /var -- sysconfdir=dir files go /etc -- disable-pam reason want pam support -- with-extrainclude=dir add dir include path may useful e.g pam installed somewhere usually found -- with-defaultcharset=string set default charset used generated page headers usually never needed way precisely control install yaws usefull computers right access standard systemdirs example ./configure -- prefix=/home/install/yaws -- localstatedir=/home/install/yaws/var -- sysconfdir=/home/install/etc 2b note packagers rpm deb ... install targets support destdir variable thus ./configure -- prefix=/usr ; make subsequently destdir=/foo/bar make install yaws files installed destdir code assume yaws installed /usr 3. make build system make docs optionnal issue command want build yaws documentation make local_install perform something call local install create executable script home/bin directory config file home/yaws.conf developers 4. test build start bin/yaws -i start webserver http //0.0.0.0:8000 terminate ^c > init stop 5. root make install 6. root start /usr/local/bin/yaws -i starts interactive system 7. create webserver http // { host } one https // { host } 8. root edit /etc/yaws.conf 9. create content /var/yaws 10a start /usr/local/bin/yaws -- daemon -- heart start daemon -- daemon autorestarted when/if crashes hangs -- heart 10b start interactive system /usr/local/bin/yaws -i"}, {"url": "https://api.github.com/repos/KirinDave/yaws", "owner": "KirinDave", "readme": "yaws webserver dynamic content written erlang build install 1. get install erlang system http //www.erlang.org 2 ./configure -- prefix=/usr/local install everything /usr/local including var files /usr/local/var/run/yaws etc files /usr/local/etc/yaws plain ./configure install executables /usr/local/bin libs /usr/local/lib/yaws etc var files end /usr/local/etc /usr/local/var note also change target directory etc var directories using -- localstatedir=dir files go /var -- sysconfdir=dir files go /etc -- disable-pam reason want pam support -- with-extrainclude=dir add dir include path may useful e.g pam installed somewhere usually found -- with-defaultcharset=string set default charset used generated page headers usually never needed way precisely control install yaws usefull computers right access standard systemdirs example ./configure -- prefix=/home/install/yaws -- localstatedir=/home/install/yaws/var -- sysconfdir=/home/install/etc 2b note packagers rpm deb ... install targets support destdir variable thus ./configure -- prefix=/usr ; make subsequently destdir=/foo/bar make install yaws files installed destdir code assume yaws installed /usr 3. make build system make docs optionnal issue command want build yaws documentation make local_install perform something call local install create executable script home/bin directory config file home/yaws.conf developers 4. test build start bin/yaws -i start webserver http //0.0.0.0:8000 terminate ^c > init stop 5. root make install 6. root start /usr/local/bin/yaws -i starts interactive system 7. create webserver http // { host } one https // { host } 8. root edit /etc/yaws.conf 9. create content /var/yaws 10a start /usr/local/bin/yaws -- daemon -- heart start daemon -- daemon autorestarted when/if crashes hangs -- heart 10b start interactive system /usr/local/bin/yaws -i"}, {"url": "https://api.github.com/repos/mattetti/ruby-on-rails-tmbundle", "owner": "mattetti"}, {"url": "https://api.github.com/repos/grempe/amazon-ec2", "owner": "grempe", "readme": "important ! ruby gem longer supported several years longer recommended public use instead would recommend looking officially supported amazon ruby sdk provided amazon.com see https //aws.amazon.com/sdkforruby/ thanks support ! amazon web services elastic compute cloud ec2 ruby gem == amazon-ec2 amazon web services offers compute power demand capability known elastic compute cloud ec2 server resources cloud provisioned demand making http query api calls ec2 'amazon-ec2 ruby gem interface library used interact amazon ec2 system control server resources demand ruby scripts applications written ruby framework choice ruby rails merb etc. recently support added following ec2 related aws api 's well autoscaling cloudwatch elastic load balancing elb relational database service rds complete up-to date readme information please visit project homepage http //github.com/grempe/amazon-ec2/tree/master official ec2 website http //aws.amazon.com/ec2 == installation gem follows standard conventions installation system ruby rubygems installed uses bundler gem installation build management worked gems look familiar === get aws account make use gem need amazon web services developer account sign https //aws-portal.amazon.com/gp/aws/developer/registration/index.html account must also specifically enabled amazon ec2 usage aws provide 'aws access key id 'secret access key allow authenticate api calls make ensure correct billing usage service take note keep secret ! === install amazon-ec2 gem canonical release standard install stable releases rubygems install gem sudo gem install amazon-ec2 === install local git clone amazon-ec2 developers install git adding features fixing bugs 'll need clone build git clone git //github.com/grempe/amazon-ec2.git cd amazon-ec2 bundle install rake test rake build rake install == using amazon-ec2 library exposes one main interface class aws :ec2 :base instance class perform operations using ec2 service including query string header signing public methods aws :ec2 :base closely mirror ec2 query api query api reference ec2 developer guide http //developer.amazonwebservices.com/connect/kbcategory.jspa categoryid=84 prove helpful === setting 'awshell 'ec2-gem-example.rb scripts introduced shortly expect aws ec2 credentials stored shell environment variables accessible scripts makes convenient use whenever need quick query see images available 's running start stop instance ec2 'll find 'awshell handy tool 'll describe os x route setting course setup steps vary depending particular system preferred shell n't want way feel free copy scripts gem dir location run modify directly include credentials edit file ~/.bash_login add following existing contents optional 'export rubyopt leave loading libs ... see http //gist.github.com/54177 export rubyopt= '' rubygems '' amazon-ec2 amazon s3 ruby gems export aws_access_key_id= '' your_access_key_id '' export aws_secret_access_key= '' your_secret_access_key_id '' using ec2 eu region make sure also set export ec2_url= '' https //eu-west-1.ec2.amazonaws.com '' already configured standard ec2 command line tools work region save file close re-open terminal new variables made available 'll need close/re-open step terminal window open issue 'source ~/.bash_login command make sure file readable user n't inadvertently expose credentials users system verify setup complete running 'set command window seeing credentials list shell variables === basics library exposes one main interface module aws :ec2 :base method requires arguments include aws credentials return object use make method calls directly ec2 operations using ec2 service including query string header signing handled automatically connection string look something like @ ec2 aws :ec2 :base.new access_key_id > access_key_id secret_access_key > secret_access_key 've tried keep public methods 'amazon-ec2 close possible aws ec2 query api similarity allows reference query api reference ec2 developer guide able get started right away cases methods names differ presented e.g 'describeimages becomes describe_images ruby feel free browse full rdoc documentation classes methods 'amazon-ec2 want details === examples best way become familiar 'amazon-ec2 take test drive provided simple ways get started also sample code help using 'amazon-ec2 plain ruby script part ruby rails application ==== using 'ec2-gem-example.rb sample test script example ruby script exercises library bit installed check install gem run script verify everything setup working correctly environment consult file installed amazon-ec2 gem dir /examples/ec2-example.rb since also package sample file gem 's bin/ dir also able run anywhere shell path set environment variables described ==== using 'awshell command shell 'awshell command shell actually standard 'irb ruby shell main difference read aws credentials environment pre-configure connection string lets run ec2 command simply proven valuable tool development gem try since install tool system path part installation gem able simply run 'awshell terminal command prompt local system 'll see basic instructions use examples start 'awshell go ahead try 'll wait ... 're front terminal shell perhaps 're browsing site iphone would see hostname /tmp/rails/amazon_test glenn awshell 'awshell usage interactive 'irb command shell allows use commands available amazon-ec2 gem 'll find great tool help debug issues practice running commands live ec2 servers prior putting code ec2 connection wired class instance @ ec2 make method calls execute commands ec2 adding to_s end command give full string representation response examples try returns ec2 public methods > > @ ec2.methods.sort returns string representation images > > @ ec2.describe_images.to_s returns array aws :response objects ec2 image data > > @ ec2.describe_images.imagesset.item > > @ ec2.describe_images.imagesset.item 0 hash representing single item array > > @ ec2.describe_images.imagesset.item 0 .to_s string representation item > > @ ec2.describe_images.imagesset.item 0 .to_s > < aws :response:0x100a465b4 imageid=\\ '' ami-018e6b68\\ '' imagelocation=\\ '' rbuilder-online/phonehome-1.5.6-x86_10132.img.manifest.xml\\ '' imageownerid=\\ '' 099034111737\\ '' imagestate=\\ '' available\\ '' ispublic=\\ '' true\\ '' parent= < aws :response:0x100a469a6 ... > > '' === ruby script usage example try following bit code walk image returned call describe_images print key data note example walk results describe_images call '.each iterator 'll get errors try need instead walk array items 'imagesset embedded response reflects exactly xml hierarchy data returned ec2 parse ruby openstruct objects aws :response ! /usr/bin/env ruby require 'rubygems' require 'aws' access_key_id -- aws access key id -- secret_access_key -- aws secret access key -- ec2 aws :ec2 :base.new access_key_id > access_key_id secret_access_key > secret_access_key puts -- -- - listing images owned 'amazon -- -- - '' ec2.describe_images owner_id > amazon '' .imagesset.item.each |image| openstruct objects members ! image.members.each |member| puts { member } > { image member } '' end end === ruby rails usage example < b > rails 2.3.x - config/environment.rb < /b > rails :initializer.run |config| ... config.gem amazon-ec2 '' lib > aws '' source > http //gemcutter.org/ '' ... end < b > rails 3.x.x - gemfile < /b > ... gem amazon-ec2 '' require > aws '' < b > app/controllers/my_controller.rb < /b > controller code ... ec2 aws :ec2 :base.new access_key_id > your_aws_access_key_id '' secret_access_key > your_aws_secret_access_key '' get public images @ ec2_images ec2.describe_images .imagesset.item get info public ec2 images created amazon ec2 team @ ec2_images_amazon ec2.describe_images owner_id > amazon '' .imagesset.item controller code ... < b > app/views/my/index.rhtml < /b > < h1 > ec2 test index < /h1 > < h1 > sample 1 - debug view < /h1 > < % debug @ ec2_images_amazon % > < h1 > sample 2 - build table < /h1 > < table border= 1 > < tr > < th > image.imageid < /th > < th > image.imagelocation < /th > < th > image.imageownerid < /th > < th > image.imagestate < /th > < th > image.ispublic < /th > < /tr > < % image @ ec2_images_amazon % > < tr > < td > < % =h image.imageid % > < /td > < td > < % =h image.imagelocation % > < /td > < td > < % =h image.imageownerid % > < /td > < td > < % =h image.imagestate % > < /td > < td > < % =h image.ispublic % > < /td > < /tr > < % end % > < /table > < h1 > sample 3 - iterate < /h1 > < % @ ec2_images_amazon.each |image| % > < % image.each_pair |key value| % > < % unless key == 'parent % > < % { key } > { value } '' % > < br / > < % end % > < % end % > < br / > < % end % > === important notes regarding structure aws :response objects one key benefits new version library responses ec2 bundled real data structure longer require parsing text hash returned populated directly xml given us ec2 response command issue means future changes api returned ec2 handled transparently gem huge benefit means though may little homework actually gets returned ec2 xml example make describe_images call 'awshell aws returns behind scenes looks like < xml version= '' 1.0 '' > < describeimagesresponse xmlns= '' http //ec2.amazonaws.com/doc/2007-01-19/ '' > < imagesset > < item > < imageid > ami-20b65349 < /imageid > < imagelocation > ec2-public-images/fedora-core4-base.manifest.xml < /imagelocation > < imagestate > available < /imagestate > < imageownerid > amazon < /imageownerid > < ispublic > true < /ispublic > < /item > < item > < imageid > ami-22b6534b < /imageid > < imagelocation > ec2-public-images/fedora-core4-mysql.manifest.xml < /imagelocation > < imagestate > available < /imagestate > < imageownerid > amazon < /imageownerid > < ispublic > true < /ispublic > < /item > < item > < imageid > ami-23b6534a < /imageid > < imagelocation > ec2-public-images/fedora-core4-apache.manifest.xml < /imagelocation > < imagestate > available < /imagestate > < imageownerid > amazon < /imageownerid > < ispublic > true < /ispublic > < /item > < item > < imageid > ami-25b6534c < /imageid > < imagelocation > ec2-public-images/fedora-core4-apache-mysql.manifest.xml < /imagelocation > < imagestate > available < /imagestate > < imageownerid > amazon < /imageownerid > < ispublic > true < /ispublic > < /item > < item > < imageid > ami-26b6534f < /imageid > < imagelocation > ec2-public-images/developer-image.manifest.xml < /imagelocation > < imagestate > available < /imagestate > < imageownerid > amazon < /imageownerid > < ispublic > true < /ispublic > < /item > < item > < imageid > ami-2bb65342 < /imageid > < imagelocation > ec2-public-images/getting-started.manifest.xml < /imagelocation > < imagestate > available < /imagestate > < imageownerid > amazon < /imageownerid > < ispublic > true < /ispublic > < /item > < /imagesset > < /describeimagesresponse > see xml structure need follow constructing queries information parsing responses ec2 example wanted get image id third image listed response would need > > puts @ ec2.describe_images owner_id > 'amazon .imagesset.item 2 .imageid ami-23b6534a ec2 typically return sets things imagesset reservationset etc map ruby arrays .imagesset.item example want iterate response set need iterate array arrays typically contain additional aws :response objects represent individual item 'll find use 'awshell help understand structure completely try issuing commands way practice seeing returned making sure get exactly want === handling exceptions reason error occurs executing method e.g arguments incorrect simply failed exception thrown exceptions defined exceptions.rb individual classes match exceptions aws defined api exception raised identified generic exception class thrown implication need prepared handle exceptions may raised library code 'rescue clause determine want handle exceptions code == additional resources === project websites project home http //github.com/grempe/amazon-ec2/tree/master api documentation http //rdoc.info/projects/grempe/amazon-ec2 amazon web services http //aws.amazon.com == credits original code library provided amazon web services llc sample code thanks providing us something get us started == contact comments patches git pull requests bug reports welcome send email mailto glenn @ rempe.us join google groups forum == patches & pull requests please follow steps want send patch github pull request fork grempe/amazon-ec2 create topic branch git checkout -b my_fix make sure add tests changes pass 'rake test' n't change files n't like gemspec version.rb commit changes one change/fix per commit push fixes branch git push origin my_fix open issue github referencing branch send pull request please push master fork using feature/bugfix branch make everyone \u2019 life easier enjoy ! glenn rempe"}, {"url": "https://api.github.com/repos/wayneeseguin/merblogger", "owner": "wayneeseguin", "readme": "merblogger merb + logger merblogger merblogger.com - ruby community blog anybody ruby gets blog"}, {"url": "https://api.github.com/repos/wayneeseguin/alogr", "owner": "wayneeseguin"}, {"url": "https://api.github.com/repos/wayneeseguin/autozest", "owner": "wayneeseguin", "readme": "autozest autotest extension author wayne e. seguin wayneeseguin gmail dot com features automated growl installation autozest install growl generation .autotest growl & autozest config autozest setup autotest generation .autozest.yml config file autozest setup autozest.sqlite3 database file pulling random messages based severity update via autozest update notes config file specify extra image fetching options dependency zentest"}, {"url": "https://api.github.com/repos/wayneeseguin/sequel", "owner": "wayneeseguin"}, {"url": "https://api.github.com/repos/bmizerany/simply_versioned", "owner": "bmizerany", "readme": "simplyversioned =============== release 1.0.0 date 28-01-2008 author matt mower < self @ mattmower.com > simplyversioned simple non-invasive approach versioning activerecord models simplyversioned require structural change models versioned requires one versions table created migration generator supplied plugin application regardless number models versioned plugin introduces 'version activerecord model reflects changes model attributes versioned models polymorphically associated version records store model information yaml hash simplyversioned meets simple need model versioning needs complex maybe try rick olsen 's acts_as_versioned http //svn.techno-weenie.net/projects/plugins/acts_as_versioned/ simplyversioned far actively tested rails 2.0.2 ruby 1.8.6 usage ===== 1. install plugin ./script/plugin install http //rubymatt.rubyforge.org/svn/simply_versioned 2. generate migration ./script/generate simply_versioned_migration note migration defaults storing version info text field mysql default limit 64k versioning particularly large models want modify migration include limit > n condition promote yaml column mediumtext god forbid longtext 3. create versions table rake db migrate 4. annotate models want version specifying many versions keep class thing < activerecord :base simply_versioned keep > 10 end specify limit old versions never automatically deleted manually delete like thing.versions.purge 10 would delete last ten versions want fine-grained control versions created use class thing < activerecord :base simply_versioned automatic > false end new versions longer created default need use with_versioning method create version lastly control columns versioned specifying exclude parameter class thing < activerecord :base simply_versioned exclude > awkward_column end class thing < activerecord :base simply_versioned exclude > first_awkward_column :second_awkward_column ... end may helpful run conflicts plugins try manage columns 5. create versions thing thing.create ! foo > bar creates v1 thing.foo baz thing.save ! creates v2 need control whether version created use with_versioning example thing.with_versioning false |t| t.save ! end using magic pen '' http //dablog.rubypal.com/2007/2/18/the-magic-pens-of-ruby thanks hmj thing.with_versioning false & save ! 6. find versions thing.versions.each |version| ... end render partial > 'thing_version collection > thing.versions thing.versions.current thing.versions.first thing.versions.get 3 find version number thing.version_number 7. revert previous version thing.revert_to_version 5 specific reversion needs avoid overwriting column values pass except option e.g thing.revert_to_version 1 except > name :age revert_to_version method also takes existing version instance e.g version thing.versions.find ... thing.revert_to_version version 8. traverse versions thing.versions.current.previous thing.versions.first.next 9. obtain copy previous versioned model thing.versions.first.model > instantiated thing versioned values thanks chris wanstrath http //ozmm.org/ useful feedback github josh susser http //blog.hasmanythrough.com/ useful suggestions feedback rick olson http //techno-weenie.net/ many plugins whose code 've read copyright c 2007 matt mower < self @ mattmower.com > released mit license"}, {"url": "https://api.github.com/repos/peterc/switchpipe", "owner": "peterc", "readme": "switchpipe 1.05 peter cooper ~~~~ february 10 2008 development began january 11 2008 switchpipe @ peterc.org -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- latest canonical documentation switchpipe located http //groups.google.com/group/switchpipe/web documentation included merely help 're rush unable visit online version incomplete sections may inaccurate online documentation explains lot date -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- switchpipe -- -- -- -- -- -- -- -- -- - online @ http //groups.google.com/group/switchpipe/web/introduction-overview switchpipe proof concept web application server '' accurately 's web application process manager request dispatcher / proxy backend http-speaking applications web applications run directly within switchpipe loaded processes making switchpipe language framework agnostic switchpipe takes control manages backend application processes including loading proxying multiple instances application round-robin style configuration administrator define maximum number backend processes run app along settings exceeded preferred resource limits switchpipe quickly removes processes break '' otherwise outlive welcome example let switchpipe kill backend processes accessed say 20 seconds makes hosting many multiple rails applications example quick non-memory demanding process ideal shared hosting environments switchpipe proxies incoming http requests tcp level using information extracted http request headers work backend application required handle request switchpipe 's goal super easy configure easiest way deploy multiple http-talking backend applications painless terms management ; hand-holding different applications needed permanent daemon handle configuration changes backend apps fly '' reliable solution linux os/x anything posix compatible ideally quick install / steps seeing quick demo switchpipe -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- online @ http //groups.google.com/group/switchpipe/web/installation-instructions run demo '' script switchpipe 's base directory ./script/demo demo '' script everything manual process except runs switchpipe daemon temporarily one test request closes cleans manual way '' preferred true hackers ... install dependencies sudo gem install daemons eventmachine open4 instate configuration file cp config.yml.example config.yml move application configurations demo apps apps '' directory mv demo_apps/*.yml apps/ run switchpipe interactive process ./script/switchpipe run visit urls browser http //127.0.0.1:10000/webrick_thing/ http //127.0.0.1:10000/python_http_server/ wo n't run unless python installed http //127.0.0.1:10000/camping_demo_app/ wo n't run unless camping installed notice switchpipe start manage relevant processes killing whenever timeouts kick use ctrl+c break switchpipe 's non-daemonized mode future use ./script/switchpipe start ./script/switchpipe stop start stop switchpipe daemonized process information setting switchpipe system service /etc/init.d etc available within switchpipe 's online documentation key steps getting started apps -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- online @ http //groups.google.com/group/switchpipe/web/setting-up-your-own-webapps-with-switchpipe significantly date 1 put yaml files /apps example rails path /users/peter/dev/rails/app1 type mongrel_rails max_instances 6 timeout 60 example webrick / regular app path demo_apps cmd ruby webrick_thing port single_threaded false example camping path demo_apps cmd camping -p port camping_demo.rb max_instances 1 timeout 15 2 make sure config.yml exists copying config.yml.example config.yml tweaking 3 run ./script/switchpipe run note runs regular process daemonized daemonize use ./script/switchpipe start ./script/switchpipe stop 4 make main http server apache / nginx / whatever proxy requests switchpipe directories name yaml files made example yaml file some_rails_app.yml proxy http //switchpipe-host.example.com/some_rails_app/ yaml file acampingapp.yml proxy http //switchpipe-host.example.com/acampingapp/ mod_proxy / < virtualhost > example proxypass / http //127.0.0.1:10000/rails_app_name/ proxypassreverse / http //127.0.0.1:10000/rails_app_name/ .htaccess example useful apache serve static files ! rewriteengine rewritecond % { request_filename } ! -f rewriterule ^ http //127.0.0.1:10000/rails_app_name/ 1 p 5 enjoy watching output switchpipe starts stops backend processes access different apps example adding application -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- online @ http //groups.google.com/group/switchpipe/web/setting-up-your-own-webapps-with-switchpipe let 's say 've developed rails application want switchpipe manage create new yaml file /apps called rails_app_name.yml anything base name file name used app 's identifier drop lines like path /path/to/the/rails/app type mongrel_rails max_instances 6 timeout 8 restart switchpipe merely wait seconds picks new file application made available six backend processes seconds directory switchpipe 's main url example http //switchpipe/rails_app_name deploy camping merb even plain old webrick apps way long run prompt given specific port run talk http switchpipe deploy goes ruby non-ruby apps complete setup would configure normal apache nginx main http daemon forward requests particular domain / virtual host / directory switchpipe relevant folder example apache < virtualhost > directives proxypass / http //127.0.0.1:10000/rails_app_name/ proxypassreverse / http //127.0.0.1:10000/rails_app_name/ even better way possible .htaccess file example rewriteengine rewritecond % { request_filename } ! -f rewriterule ^ http //127.0.0.1:10000/rails_app_name/ 1 p benefit technique static files served apache usual breakneck speed ! port numbers setting individual clusters different apps worrying different frameworks handle clustering hurrah ! note hostname '' config variable also used applications serve application switchpipe directly means serve apps without apache nginx front switchpipe ! dos -- -- -- online @ http //groups.google.com/group/switchpipe/web/todos-limitations improve error handling web-accessible status / information url caching potentially test suite test switchpipe platforms architectures os x linux i386/686 tested far improve documentation web site stream http message bodies certain size backend apps rather buffer whole lot switchpipe becomes necessity dealing huge http uploads say contributors -- -- -- -- -- -- - peter cooper / primary developer switchpipe far - jason stirk provided key patch april 2008 resolved hanging issues - mike auclair provided fix trailing slashes necessary app names '' license '' -- -- -- -- - online @ http //groups.google.com/group/switchpipe/web/licensing-information work hereby released public domain view copy public domain dedication visit http //creativecommons.org/licenses/publicdomain/ send letter creative commons 171 second street suite 300 san francisco california 94105 usa switchpipe distributed made available freedoms public domain stern reminder ethical software / content / work released public domain want may conscience moral compass encourage good guy gal good means using identical name title substantially different derived works way confusion could caused amongst users providing original author feedback notices patches credit relating extended usage work decent thing work provided '' without warranty kind express implied including limited warranties merchantability fitness particular purpose event shall authors liable claim damages liability whether action contract tort otherwise arising connection software use dealings work note company requires license switchpipe e.g company policy peter cooper prove one fee contact details found http //www.petercooper.co.uk/ applies anyone wishes support peter cooper work switchpipe thank"}, {"url": "https://api.github.com/repos/up_the_irons/ebay4r", "owner": "up_the_irons"}, {"url": "https://api.github.com/repos/wycats/merb-plugins", "owner": "wycats", "readme": ""}, {"url": "https://api.github.com/repos/up_the_irons/ram", "owner": "up_the_irons", "readme": "welcome ram ruby asset manager ram premiere open-source role-based access-controlled digital asset manager ruby rails built ground fast secure efficient platform distribution aggregation tracking online digital assets installation root directory application type rake install launch install wizard take step step setting ram problems installing ram consult support section website found http //www.locusfoc.us/ram/pages/docs additionally come irc channel server irc.freenode.net channel ram hope enjoy ram ! license ram distributed license ruby rails see http //www.opensource.org/licenses/mit-license.php"}, {"url": "https://api.github.com/repos/defunkt/ambitious_activeldap", "owner": "defunkt", "readme": "h2 ambitious activeldap adapter write ldap search filters ruby awesomeness courtesy chris wanstrath 's ambition library must using activeldap 0.9 greater h2 get @ sudo gem install ambitious-activeldap @ < pre > require 'rubygems' require 'ambition/adapters/active_ldap' < /pre > h2 examples let @ user @ subclass @ activeldap :base @ < ruby > user.select { |u| u.givenname == 'severian } .each |user| puts user.name end < /ruby > queries n't run kick adapter supports basic kicker methods @ @ @ each_with_index @ @ map @ @ entries @ @ to_a @ adapter also n't support methods require sorting slicing counting openldap effectively n't support things activeldap lets request sorted sliced result sets work ruby might well call @ to_s @ @ to_hash @ query @ to_s @ returns ldap search filter string < ruby > > > user.select { |m| m.givenname == 'jonas } .to_s > givenname=jonas '' < /ruby > h2 issues.find filter > type=bug '' found bug sweet add lighthouse '' http //err.lighthouseapp.com/projects/466-plugins/tickets/new information ambition http //ambition.rubyforge.org '' http //ambition.rubyforge.org http //groups.google.com/group/ambition-rb/ '' http //groups.google.com/group/ambition-rb/"}, {"url": "https://api.github.com/repos/atmos/fitter_happier", "owner": "atmos", "readme": "fitterhappier ============= fitterhappier rails plug-in provides actions monitoring site and/or database availability fitterhappier 's monitoring controller disables unnecessary rails features like sessions layouts logging lightning-fast monitoring uris fitterhappier provides three monitoring uris % curl localhost:3000/fitter_happier fitterhappier site check passed % curl localhost:3000/fitter_happier/site_check fitterhappier site check passed @ wed 17 dec 2008 14:27:47 -0800 % curl localhost:3000/fitter_happier/site_and_database_check fitterhappier site database check passed @ wed 17 dec 2008 14:27:57 -0800 schema version 20081217141904 installation ============ % cd vendor/plugins % git clone git //github.com/atmos/fitter_happier.git uptime monitoring ================= see engineyard 's support guide uptime monitoring rails application http //www.engineyard.com/support/guides/uptime_monitoring_for_your_rails_application monit ===== simple checks monit like failed host 127.0.0.1 port 5000 protocol http request /fitter_happier checksum 15b8a1ee66d740fbfc00297684bb5430 restart keepalived/lvs ============== also keepalived/lvs setup virtual_server 169.254.y.z 80 { delay_loop 15 lb_algo lc lb_kind nat nat_mask 255.255.255.0 persistence_timeout 0 protocol tcp sorry_server 127.0.0.1 80 virtualhost www.myfacetube.com real_server 10.0.1.34 80 { weight 1 http_get { url { path /fitter_happier status_code 200 } connect_port 80 connect_timeout 5 nb_get_retry 20 delay_before_retry 2 } } real_server 10.0.1.35 80 { weight 1 http_get { url { path /fitter_happier status_code 200 } connect_port 80 connect_timeout 5 nb_get_retry 20 delay_before_retry 2 } } } copyright c 2008 atmos released mit license"}, {"url": "https://api.github.com/repos/up_the_irons/credit_card_tools", "owner": "up_the_irons"}, {"url": "https://api.github.com/repos/jnicklas/rorem", "owner": "jnicklas", "readme": "rorem ===== rorem random data generator automatically fill ruby classes random data 's class car include rorem :model attr_accessor brand seats owner_name owner_age special_car end car.factory |car| brands equality likely car.brand random % w bmw mercedes volvo jaguar assign probabilities value car.seats random 2 4 distribution > 0.2 0.8 use normal distribution describe probabilities car.owner_age random 18..70 distribution > normal 40 15 generate name rorem 's database names car.owner_name random name deterministic value set car.special_car false end c car.new c.fill c.brand > 'bmw' c.seats > 4 c.owner_age > 27 c.owner_name > 'allan hernandez' c.special_car > false another complex example class employee include rorem :model attr_accessor first_name last_name email employee_nr empolyee_id address city country end employee.factory c.employee_nr sequence employee_nr start > 1 person random person unique > true location random location c.first_name person.first_name c.last_name person.last_name c.email person.email c.address location.address c.city location.city c.country location.country c.employee_id c.first_name 1..3 + c.last_name 1..4 + c.employee_nr.to_s end"}, {"url": "https://api.github.com/repos/cristibalan/braid", "owner": "cristibalan", "readme": "braid ! build status https //secure.travis-ci.org/cristibalan/braid.svg branch=master http //travis-ci.org/cristibalan/braid ! gem https //img.shields.io/gem/v/braid.svg maxage=2592000 https //rubygems.org/gems/braid braid simple tool help track vendor branches git http //git-scm.com/ repository motivation vendoring allows take source code external library ensure version controlled along main project contrast including reference packaged version external library available binary artifact repository maven central rubygems npm vendoring useful need patch customize external libraries external library expected co-evolve main project developer make changes main project patch library single commit problem arises external library makes changes want integrate local vendored version developer makes changes local version want integrated external library typical implementation '' vendoring simply download checkout source external library remove .git .svn directories commit main source tree however approach makes difficult update library want update library re-apply local changes onto new copy vendored library re-apply changes external library local version cases involve manual generation application patch files source trees braid comes play braid makes easy vendor remote git repositories use automated mechanism updating external library generating patches upgrade external library braid creates file .braids.json root repository contains references external libraries mirrors configuration allows control aspects mirroring process ; whether mirror locked particular version external library whether mirror tracking tag branch whether mirror includes entire external library subdirectory installation gem install braid quick usage - ruby project let 's assume 're writing project myproject needs grit lib/grit initialize repo nothing braid related git init myproject cd myproject touch readme git add readme git commit -m initial commit '' let 's vendor grit braid add git //github.com/mojombo/grit.git lib/grit 're done ! braid vendored grit lib/grit feel free inspect changes git log git show line want bring new changes grit repository update mirror braid update lib/grit make changes grit library want generate patch file submit patch file grit project braid diff lib/grit > grit.patch alternatively push changes back source directory directly using following command command push changes branch myproject_customizations branched source branch master example omit -- branch argument push directly source branch braid push lib/grit -- branch myproject_customizations changes applied grit probably want update local version grit braid update lib/grit usage use built help system find commands options braid help braid help add braid add -- help examples adding mirror braid add git //github.com/rails/rails.git vendor/rails adding subdirectory mirror useful want add subdirectory mirror project braid add -- path dist https //github.com/twbs/bootstrap.git vendor/assets/bootstrap adding mirror based branch braid add -- branch 5-0-stable https //github.com/rails/rails.git vendor/rails adding mirror based tag braid add -- tag v1.0 https //github.com/realityforge/backpack.git vendor/tools/backpack adding mirror locked revision braid add -- revision bf1b1e0 git //github.com/rails/rails.git vendor/rails updating mirrors update specific mirror braid update vendor/plugins/cache_fu update mirrors braid update updating mirrors conflicts braid update creates conflict braid stop execution leave partially committed files working copy like normal git merge conflict would resolve conflicts manually run git commit commit message already prepared want cancel braid update merge 'll reset working copy index git reset -- hard locking unlocking mirrors lock particular version mirror braid update -- revision 6c1c16b vendor/rails go back tracking particular branch braid update -- branch master vendor/rails showing local changes made mirrors braid diff vendor/rails braid version compatibility since braid regularly changing configuration format adding new features projects may choose rely somewhat less often making breaking changes configuration handled problems arise different developers work project using different versions braid since version 1.1.0 braid refuses operate detects potentially problematic version skew happens braid tell 'd like overview expect read roughly speaking .braids.json configuration file contains configuration version number corresponds range compatible braid minor versions x.y patch '' upgrades braid i.e. x.y.z - > x.y z+1 never intentionally ! configuration compatibility implications always recommended may fix critical bugs use braid version old configuration file braid direct configuration version history page config_versions.md instructions upgrade braid use braid version new braid tell upgrade configuration file find compatible older braid version use exception newer version braid run read-only commands older configuration file without upgrading breaking changes upgrade configuration file developers project may need upgrade braid braid support downgrading configuration file though revert commit upgraded n't made subsequent changes configuration work multiple projects may need install multiple versions braid manually run correct version project fortunately rubygems system makes reasonably straightforward another approach standardize braid version project listing braid gemfile either checking gemfile.lock using version constraint gemfile run project 's version braid via bundler http //bundler.io/ bundle exec braid even non-ruby projects 's acceptable gemfile gemfile.lock ruby projects n't want braid interact gems potentially put gemfile subdirectory provide wrapper script bundle sets bundle_gemfile environment variable yet enough experience approach make firm recommendation best design could find prevent surprises adequately support normal development processes minimizing additional maintenance cost version compatibility mechanism want scheme place robust enough make reasonable encourage serious adoption braid yet n't want spend extra work adding conveniences there's evidence sufficient demand contributing appreciate patches error reports usage ideas may please submit issue pull request github subversion preparing release braid v1.0 support subversion repositories removed active maintainers inadequate test coverage anyone motivated re-add maintain subversion support please contact authors authors cristi balan norbert crombach peter donald contributors alphabetically alan harper brad durrow christoph sturm dennis muhlestein ferdinand svehla matt mccutchen michael klishin roman heinrich travis tilley tyler rick"}, {"url": "https://api.github.com/repos/jnicklas/uploadcolumn", "owner": "jnicklas", "readme": "uploadcolumn uploadcolumn plugin ruby rails framework enables easy uploading files especially images suppose list users would like associate picture could upload image database could use upload_column simple storage file system assuming user model column called 'picture type string could simply add upload_column instruction user model class user < activerecord :base upload_column picture end 's ! start uploading files course +upload_column+ lot different options use customize uploads uploading files fun without user interface get going make one add upload_column_field form maybe like < p > < label for= '' user_picture '' > picture < /label > < br/ > < % upload_column_field 'user 'picture % > < /p > use upload_column_field instead rails file_field since work even form redisplayed like validation fails unfortunately file_field n't work case 's excellent likely fail instead sending file sends string worries though set form 's encoding multipart work uploadcolumn even comes nice helpers avoid nasty multipart syntax could look something like < % upload_form_tag action > 'create % > 's ! uploads running hopefully able add pictures users madness n't stop course ! == storage path wo n't always want store pictures directory upload_column selects 's problem changing directory trivial pass < tt > store_dir < /tt > key upload_column declaration override default mechanism always use directory basis upload_column picture store_dir > pictures '' might sensible case note way files stored directory need refined control storage path maybe need store id association use proc instead proc might look like upload_column picture store_dir > proc { |record file| images/ { record.category.name } / { record.id } / { file.extension } '' } proc passed two parameters first current instance model class second name attribute uploaded case +attr+ would < tt > picture < /tt > change < tt > tmp_dir < /tt > way == filename default uploadcolumn keep name original file however might inconvenient cases pass filename directive upload_column declaration upload_column picture filename > donkey.png '' case files named +donkey.png+ desirable file question jpeg file course usually sensible pass proc filename upload_column picture filename > proc { |record file| avatar { record.id } { file.extension } '' } proc passed two parameters current instance file == manipulators uploadcolumn allows use manipulators file way transform file perform kind operations currently two manipulators bundled rmagick manipulator imagescience manipulator writing easy instructions website == manipulating images rmagick say would want whatever reason funky solarize effect users images manipulating images upload_column done either runtime image saved let 's look possibilities class user < activerecord :base upload_column picture manipulator > uploadcolumn :manipulators :rmagick def picture_after_assign picture.process ! |img| img.solarize end end end also use process instruction automatically apply manipulation new image uploaded wanted resize image maximum 800 600 pixels example could class user < activerecord :base upload_column picture process > '800x600 manipulator > uploadcolumn :manipulators :rmagick end previous example solarize could written shorter class user < activerecord :base upload_column picture process > proc { |img| img.solarize } manipulator > uploadcolumn :manipulators :rmagick end maybe want different versions image could simply specify class user < activerecord :base upload_column picture versions > solarized sepiatoned manipulator > uploadcolumn :manipulators :rmagick def picture_after_assign picture.solarized.process ! |img| img.solarize end picture.sepiatoned.process ! |img| img.sepiatone end end end also use hash versions pass dimension proc class user < activerecord :base upload_column picture versions > { thumb > c100x100 '' large > 200x300 '' sepiatoned > proc { |img| img.sepiatone } } manipulator > uploadcolumn :manipulators :rmagick end note c front dimensions thumb image crop image exact dimensions bit wordy though also n't take check files really images sepiatoning latest greenday song somehow n't sound good reason uploadcolumn comes image_column function class user < activerecord :base image_column picture versions > { thumb > c100x100 '' large > 200x300 '' sepiatoned > proc { |img| img.sepiatone } } end also puts images public/images instead public neat ! == runtime rendering manipulate images runtime 's huge performance hit though ! controller add action use uploadcolumnrenderhelper.render_image def sepiatone @ user user.find parms id render_image @ user.picture |img| img.sepiatone end end 's ! view use uploadcolumnhelper.image easily create image tag action < % image action > sepiatone '' id > 5 % > == views uploaded file image would likely want display view 's another kind file 'll want link easy using uploadcolumn :baseuploadedfile.url < % link_to guitar tablature '' @ song.tab.url % > < % image_tag @ user.picture.url % > == magic columns uploadcolumn allows add 'magic columns model automatically filled appropriate data add column example via migrations add_column users picture_content_type model looks like class user < activerecord :base upload_column picture end column < tt > picture_content_type < /tt > automatically filled file 's content-type least uploadcolumn 's best guess ; use method method uploadcolumn :uploadedfile takes argument use example size url store_dir also < tt > picture_exif_date_time < /tt > < tt > picture_exif_model < /tt > etc works course uploaded file jpeg image since filetype exif data requires exifr library get installing gem via < tt > gem install exifr < /tt > == validations uploadcolumn comes validation method validates_integrity_of method ensure files extension whitelist uploaded prevents hacker uploading executable files .rb .pl .cgi example used restrict kind file allowed uploaded example images customize whitelist extensions parameter upload column want allow upload xhtml xml files manipulate xslt could upload_column xml extensions > % w xml html htm manipulator > myxsltprocessor validate_integrity_of xml also use rails validations uploadcolumn validates_presence_of validates_size_of verified work validates_size_of image maximum > 200000 message > big must smaller 200kb ! '' remember change error message default one sounds bit stupid uploadcolumn validates_uniqueness_of work validates_uniqueness_of send your_upload_column instead asking instance variable thus get uploadedfile object ca n't really compare values database rather difficult work around without messing rails internals manage please let know ! meanwhile could validates_each your_upload_column |record attr value| record.errors.add attr 'already exists ! yourmodel.find first conditions > { attr.to_s } value end 's elegant know work"}, {"url": "https://api.github.com/repos/simonjefford/ruby-on-rails-tmbundle", "owner": "simonjefford", "readme": "textmate bundle ruby rails development get rails 2.0 support rails 2.0 copied changelog snippets/commands tests assert_select ass assert_difference/assert_no_difference asd/asnd get+post test method stubs defg+defp controllers respond_to rst removed render_component snippets loggers - pass block instead raw string save time logging used e.g production thx stephen touset redirect_to resource paths rep repp renp renpp render update ru thx simon jefford views form_for ff link_to resource paths lip lipp linp linpp < % end - % > end models has_many though hmt association snippets give better defaults e.g bt + hm validates_format_of vf vfif thx dean strelau migrations sexy migrations available t. '' snippets thx lawrence pit migration classes textmate scope add/remove columns - 'down statements reverse order thx lawrence pit daniel kristensen language/syntax new keywords rescue_from added rb valid rails file type thx james deville commands html.erb default new templates backwards compatibility worked plugins footnote footnote-edge uses .erb templates thx stephen bannasch"}, {"url": "https://api.github.com/repos/leahneukirchen/rack-mirror", "owner": "leahneukirchen", "readme": "rack modular ruby webserver interface rack provides minimal modular adaptable interface developing web applications ruby wrapping http requests responses simplest way possible unifies distills api web servers web frameworks software so-called middleware single method call exact details described rack specification rack applications conform == supported web servers included *handlers* connect kinds web servers rack mongrel eventedmongrel webrick fcgi cgi scgi litespeed web servers include rack handlers distributions ebb fuzed thin valid rack app run handlers without changing anything == supported web frameworks included *adapters* connect rack existing ruby web frameworks camping frameworks include rack adapters distributions coset halcyon maveric merb racktools :simpleapplication ramaze sinatra vintage ruby rails run adapter included thin merged later rack version current links projects found http //ramaze.net/ other-frameworks == available middleware server framework rack customized applications needs using middleware example rack :urlmap route multiple applications inside process rack :commonlogger creating apache-style logfiles rack :showexception catching unhandled exceptions presenting nice helpful way clickable backtrace rack :file serving static files ... many others ! components use interface described detail rack specification choose use exactly way want == convenience want develop outside existing frameworks implement ones develop middleware rack provides many helpers create rack applications quickly without web stuff rack :request also provides query string parsing multipart handling rack :response convenient generation http replies cookie handling rack :mockrequest rack :mockresponse efficient quick testing rack application without real http round-trips == rackup rackup useful tool running rack applications uses rack :builder dsl configure middleware build applications easily rackup automatically figures environment run runs application fastcgi cgi standalone mongrel webrick -- -all configuration == quick start try lobster ! either embedded webrick starter ruby -ilib lib/rack/lobster.rb rackup bin/rackup -ilib example/lobster.ru default lobster found http //localhost:9292 == installing rubygems gem rack available install gem install rack also provide local mirror gems development snapshots site gem install rack -- source http //chneukirchen.org/releases/gems == running tests testing rack requires test/spec testing framework gem install test-spec full set tests also test fcgi access lighttpd need lighttpd installed well fcgi libraries fcgi gem installed download install lighttpd http //www.lighttpd.net/download installing fcgi libraries curl -o http //www.fastcgi.com/dist/fcgi-2.4.0.tar.gz tar xzvf fcgi-2.4.0.tar.gz cd fcgi-2.4.0 ./configure -- prefix=/usr/local make sudo make install cd .. installing ruby fcgi gem gem install fcgi two rake-based test tasks rake test tests fast tests handlers adapters rake fulltest runs tests == history march 3rd 2007 first public release 0.1 may 16th 2007 second public release 0.2 http basic authentication cookie sessions static file handler improved rack :request improved rack :response added rack :showstatus better default error messages bug fixes camping adapter removed rails adapter alpha february 26th 2008 third public release 0.3 litespeed handler adrian madrid scgi handler jeremy evans pool sessions blink openid authentication blink port file options opening fastcgi sockets blink last-modified http header rack :file blink rack :builder use accepts blocks corey jewett see example/protectedlobster.ru http status 201 contain content-type body many bugfixes especially related cookie handling xxx 2008 fourth public release 0.4 new memcache sessions blink rack :reloader loaded rackup development mode many bugfixes especially pool sessions urlmap == contact please mail bugs suggestions patches < mailto chneukirchen @ gmail.com > darcs repository darcs send '' welcome patches http //chneukirchen.org/repos/rack also welcome join rack channel irc.freenode.net == thanks blink pool sessions openid support many tweaks patches bugreports michael fellinger helpful discussion bugfixes better rack :request interface adrian madrid litespeed handler christoffer sawicki rails adapter tim fletcher http authentication code luc heinrich cookie sessions static file handler bugfixes armin ronacher logo racktools aredridel bug fixing stephen bannasch bug reports documentation gary wright proposing better rack :response interface jonathan buch improvements regarding rack :response armin r\u00f6hrl tracking bugs cookie generator alexander kellett testing gem reviewing announce marcus r\u00fcckert help configuring debugging lighttpd wsgi team well-done documented work 've done rack builds == copyright copyright c 2007 2008 christian neukirchen < http //purl.org/net/chneukirchen > permission hereby granted free charge person obtaining copy software associated documentation files software '' deal software without restriction including without limitation rights use copy modify merge publish distribute sublicense and/or sell copies software permit persons software furnished subject following conditions copyright notice permission notice shall included copies substantial portions software software provided '' without warranty kind express implied including limited warranties merchantability fitness particular purpose noninfringement event shall authors liable claim damages liability whether action contract tort otherwise arising connection software use dealings software == links rack < http //rack.rubyforge.org/ > rack 's rubyforge project < http //rubyforge.org/projects/rack > camping < http //camping.rubyforge.org/ > ramaze < http //ramaze.rubyforge.org/ > maveric < http //maveric.rubyforge.org/ > racktools < http //lucumr.pocoo.org/trac/repos/racktools/ > christian neukirchen < http //chneukirchen.org/ >"}, {"url": "https://api.github.com/repos/drnic/javascript-unittest-tmbundle", "owner": "drnic"}, {"url": "https://api.github.com/repos/engineyard/eycap", "owner": "engineyard", "readme": "eycap ! build status https //secure.travis-ci.org/engineyard/eycap.png http //travis-ci.org/engineyard/eycap description engine yard capistrano tasks use specifically engine yard managed services used examples building tasks well requirements capistrano https //github.com/capistrano/capistrano > 2.2.0 note using git repository use capistrano > 2.5.3 install use gemfile bundler document install eycap gem application also recommend following gems configured along side eycap add gemfile ruby group development test gem 'eycap require > false gem 'capistrano '~ > 2.15' gem 'net-ssh '~ > 2.7.0' end run bundle install install eycap gem bundle install deploy.rb file 'll need add following require statement begininng file require eycap/recipes '' usage configuration initial deploy.rb provided servers provisioned engine yard managed order deploy application go rails_root folder run capify generates capfile config/deploy.rb file 'll replace config/deploy.rb file deploy.rb given engine yard deploying rails 3.1 greater apps using asset pipeline https //github.com/engineyard/eycap/wiki/asset-pipeline read linked page setup restart server mongrel default server override default 'll need define following deploy.rb file ruby namespace deploy task restart roles > app mongrel.restart end task spinner roles > app mongrel.start end task start roles > app mongrel.start end task stop roles > app mongrel.stop end end replace commented server passenger unicorn thin puma etc override default mongrel deploying environment ensure environments ready deploy check staging cap staging deploy check determine requirements met deploy sometimes default folders setup may able repair running cap staging deploy setup get deploy check pass please open new support ticket https //support.cloud.engineyard.com/tickets/new let us know 're ready test deploy optionally cap deploy cold run migrations start instead restart app server cap staging deploy cold already dumped copy data staging want run migrations simply deploy cap staging deploy production change environment name 'll set cap production deploy eycap commands list available commands run cap -t show default capistrano commands also ones get including eycap gem custom binaries path rare cases unicorn / sphinx required set custom path binaries using development versions scripts easy ruby set engineyard_bin /engineyard/custom '' default /engineyard/bin fine normal deployment pull requests 'd like contribute eycap gem please create fork send pull request member eycap team review issues run problem please check issues /issues see one reported please report issue 'll get work fixing license copyright c engine yard permission hereby granted free charge person obtaining copy software associated documentation files '' software '' deal software without restriction including without limitation rights use copy modify merge publish distribute sublicense and/or sell copies software permit persons software furnished subject following conditions copyright notice permission notice shall included copies substantial portions software software provided '' without warranty kind express implied including limited warranties merchantability fitness particular purpose noninfringement event shall authors copyright holders liable claim damages liability whether action contract tort otherwise arising connection software use dealings software"}, {"url": "https://api.github.com/repos/leahneukirchen/gitsum", "owner": "leahneukirchen", "readme": "gitsum.el -- - basic darcsum feelalike git copyright c 2008 christian neukirchen < purl.org/net/chneukirchen > licensed terms emacs gitsum provides mode interactive partial commits emacs run m-x gitsum inside git repository kill everything want commit k navigate easily hunks n p files n p whole file killed k want refine patch split c-c c-s toggle read-only c-x c-q edit everything freely careful ! ready commit patch c-c c-c c enter message press c-c c-c n.b want add files commit use m-x git-status git.el add files switch gitsum add files whole need git.el git repository repository http //github.com/chneukirchen/gitsum git //github.com/chneukirchen/gitsum.git patches chneukirchen @ gmail.com"}, {"url": "https://api.github.com/repos/wayneeseguin/sequel-model", "owner": "wayneeseguin", "readme": "== sequel concise orm ruby sequel orm framework ruby sequel provides thread safety connection pooling concise dsl constructing queries table schemas sequel makes easy deal multiple records without break teeth sql == resources { project page } http //code.google.com/p/ruby-sequel/ { source code } http //ruby-sequel.googlecode.com/svn/ { bug tracking } http //code.google.com/p/ruby-sequel/issues/list { google group } http //groups.google.com/group/sequel-talk { rubyforge page } http //rubyforge.org/projects/sequel/ check source code svn co http //ruby-sequel.googlecode.com/svn/trunk === contact comments suggestions please send email ciconia gmail.com 'll get back == installation sudo gem install sequel == supported databases sequel currently supports ado windows dbi informix mysql odbc oracle postgresql sqlite 3 also experimental adapters db2 openbase jdbc jruby == sequel console sequel includes irb console quick n'dirty access databases use like sequel sqlite ///test.db get irb session database object stored db == introduction sequel designed take hassle away connecting databases manipulating sequel deals boring stuff like maintaining connections formatting sql correctly fetching records concentrate application sequel uses concept datasets retrieve data dataset object encapsulates sql query supports chainability letting fetch data using convenient ruby dsl concise infinitely flexible example following one-liner returns average gdp five biggest countries middle east region db countries .filter region > 'middle east .reverse_order area .limit 5 .avg gdp equivalent select avg gdp countries region 'middle east order area desc limit 5 since datasets retrieve records needed stored later reused records fetched hashes also fetched custom model objects accessed using enumerable interface middle_east db countries .filter region > 'middle east middle_east.order name .each { |r| puts r name } sequel also offers convenience methods extracting data datasets extended map method middle_east.map name > 'egypt 'greece 'israel ... getting results transposed hash one column key another value middle_east.to_hash name area > { 'israel > 20000 'greece > 120000 ... } much sequel still undocumented especially part relating model classes following section provides examples common usage feel free explore ... == getting started === connecting database connect database simply provide sequel url require 'sequel' db sequel.open 'sqlite ///blog.db' connection url also include stuff user name password db sequel.open 'postgres //cico:12345 @ localhost:5432/mydb' also specify optional parameters connection pool size logger logging sql queries db sequel.open postgres //postgres postgres @ localhost/my_db '' max_connections > 10 logger > logger.new 'log/db.log === arbitrary sql queries db.execute create table text b text '' db.execute insert values b '' succinctly db < < create table text b text '' db < < insert values b '' === getting dataset instances dataset primary means records retrieved manipulated create blank dataset using dataset method dataset db.dataset using methods posts db.from posts also use equivalent shorthand posts db posts note dataset fetch records explicitly ask shown datasets manipulated filter records change record order even join tables also shown === retrieving records retrieve records using method posts.all method returns array hashes hash corresponds record also iterate records one time posts.each { |row| p row } perform advanced stuff posts.map id posts.inject { } { |h r| h r id r name } also retrieve first record dataset posts.first retrieve single record specific value posts id > 1 dataset ordered also ask last record posts.order stamp .last === filtering records simplest way filter records provide hash values match my_posts posts.filter category > 'ruby author > 'david also specify ranges my_posts posts.filter stamp > 2.weeks.ago .. 1.week.ago lists values my_posts posts.filter category > 'ruby 'postgres 'linux sequel also accepts expressions closures aka block filters my_posts posts.filter { category == 'ruby 'postgres 'linux } also lets stuff like my_posts posts.filter { stamp > 1.month.ago } adapters like postgresql also let specify regexps my_posts posts.filter category > /ruby/i also use inverse filter my_posts posts.exclude category > /ruby/i retrieve records using retrieval methods my_posts.each { |row| p row } also specify custom clause posts.filter stamp < author < > 3.days.ago author_name datasets also used subqueries db items .filter 'price > db items .select 'avg price + 100 === summarizing records counting records easy posts.filter category > /ruby/i .count also query maximum/minimum values max_value db history .max value calculate sum total db items .sum price === ordering records posts.order stamp also specify descending order posts.order stamp.desc === deleting records posts.filter 'stamp < 3.days.ago .delete === inserting records posts.insert category > 'ruby author > 'david alternatively posts < < { category > 'ruby author > 'david } === updating records posts.filter 'stamp < 3.days.ago .update state > 'archived === joining tables joining useful variety scenarios example many-to-many relationships sequel 's really easy order_items db items .join order_items item_id > id filter order_items__order_id > 1234 equivalent sql select items left outer join order_items order_items.item_id items.id order_items.order_id 1234 anything like dataset order_total order_items.sum price equivalent sql select sum price items left outer join order_items order_items.item_id items.id order_items.order_id 1234"}, {"url": "https://api.github.com/repos/kevinclark/god", "owner": "kevinclark", "readme": "god tom preston-werner kevin clark kqueue/netlink support http //god.rubyforge.org == description god easy configure easy extend monitoring framework written ruby keeping server processes tasks running simple part deployment process god aims simplest powerful monitoring application available == documentation see online documentation http //god.rubyforge.org == community sign god mailing list http //groups.google.com/group/god-rb == install sudo gem install god == contribute latest code available http //github.com/mojombo/god 'master branch cloned git clone git //github.com/mojombo/god.git == license mit license copyright c 2007 tom preston-werner permission hereby granted free charge person obtaining copy software associated documentation files 'software deal software without restriction including without limitation rights use copy modify merge publish distribute sublicense and/or sell copies software permit persons software furnished subject following conditions copyright notice permission notice shall included copies substantial portions software software provided 'as without warranty kind express implied including limited warranties merchantability fitness particular purpose noninfringement event shall authors copyright holders liable claim damages liability whether action contract tort otherwise arising connection software use dealings software"}, {"url": "https://api.github.com/repos/hornbeck/blerb-core", "owner": "hornbeck", "readme": "welcome blerb ! == installation working directory say ~/code/ clone blerb repository git clone git //github.com/hornbeck/blerb-core.git - anon checkout git clone git @ github.com hornbeck/blerb-core.git - commit access cd blerb-core use script/install update install merb-* parent directory e.g ~/code/merb-core/ script/install_merb cp config/database.sample.yml config/database.yml fill correct database credentials cp config/settings.sample.yml config/settings.yml fill correct blog settings rake dm auto_migrate start webserver run merb command merb blerb running port 4000 open browser visit localhost:4000 ! == dependencies versions tested merb-core 0.9 merb-more 0.9.0 merb-action-args 0.9.0 merb-assets 0.9.0 merb-mailer 0.9.1 merb-test 0.9.0 merb_datamapper 0.9.0 merb_helpers 0.9.0 merb_rspec 0.9.0 datamapper 0.3.0 rspec 1.1.3 do_yourdbhere varies"}, {"url": "https://api.github.com/repos/brosner/django-mptt", "owner": "brosner", "readme": "=========== django mptt =========== utilities implementing modified preorder tree traversal django models working trees model instances installation instructions see file install '' directory ; instructions use application provides see file overview.txt '' docs/ '' directory"}, {"url": "https://api.github.com/repos/technomancy/bus-scheme", "owner": "technomancy", "readme": "bus scheme phil hagelberg c 2007 - 2008 http //bus-scheme.rubyforge.org == description bus scheme scheme written ruby implemented bus ! every programmer must implement scheme rite passage ; mine note least half implementation bus scheme must written bus documentation tests administrivia may accomplished elsewhere majority actual implementation code strictly bus-driven bus scheme primarily toy ; using anything serious right ill-advised bus scheme aims general scheme usefulness optimized learning fun 's loosely targeting r5rs varies huge ways purposes project pretend r6rs never happened see file r5rs.diff ways bus scheme differs standard things yet unimplemented things intentionally different == usage bus drop repl bus -e stuff '' bus foo.scm load file == tutorial see http //technomancy.us/104 getting started '' tutorial == contributing 're looking stuff try rake todo '' patches welcome especially written riding bus daily commute involve bus want submit patch may able work something regarding code written trains ferries perhaps even carpool lanes join mailing list ask questions discuss http //rubyforge.org/mail/ group_id=5094 == makes bus scheme different well starters 's implemented bus scheme implementation claim things set bus scheme apart === flexible calling syntax taking hint arc bus scheme allows use notation mylist n access nth place mylist list instead nth mylist n myhash key notation access slot myhash corresponding value key instead gethash myhash key todo notation flexible data types may call behaviour '' specified === web functionality planned web restful application development part package bus scheme uses rack library allow scheme programs serve web applications representations data easily translated s-expressions html json === written high-level language bus scheme written ruby means anyone experience high-level dynamic languages like oh n't know ... scheme right home poking around implementation using ruby allows implementation code remain compact concise bus scheme run ruby 1.8 ruby 1.9 rubinius jruby least bus scheme also allows drop ruby that's convenient todo allow real inline ruby blocks instead access via function call === test-driven bus scheme written entirely test-driven manner much possible tries keep tests written scheme includes fairly comprehensive testing suite encourages programs written test-first == install sudo gem install bus-scheme source git clone git //github.com/technomancy/bus-scheme.git == todo bus scheme currently missing pieces functionality === parser multiline strings regular expressions === general filter stacktrace continuations macros failing tests already included commented mostly relevant test files === long term post 1.0 web functions defresource friends lambda arg1 arg2 args body rest args string interpolation escape sequences strings ruby blocks inline xml literals optimize tail call recursion compile rubinius bytecode custom call behaviour parse non-decimal base numbers parse rationals scientific complex polar complex numbers == requirements bus scheme run least ruby 1.8 ruby 1.9 rubinius jruby support windows entirely accidental == bonus fact n't actually used real scheme yet everything know 've gathered reading little schemer watching structure interpretation computer programs videos reading lots common lisp emacs lisp huge gaping flaws implementation likely"}, {"url": "https://api.github.com/repos/caged/groomlake", "owner": "caged"}, {"url": "https://api.github.com/repos/sevenwire/forgery", "owner": "sevenwire", "readme": "forgery ======= ! build status https //travis-ci.org/sevenwire/forgery.png https //travis-ci.org/sevenwire/forgery ! code climate https //codeclimate.com/github/sevenwire/forgery.png https //codeclimate.com/github/sevenwire/forgery **a problem** 's harder *absolutely easy* make meaningful simple data testing development **a solution** fake data generator provides host basics rememberable syntax customizable library boot welcome forgery excellent solution problem hard n't know using -- -- - 'll want read individual forgery categories information basics ruby forgery basic .password > b6qztqeh '' forgery internet .email_address > krainboltgreene @ crt.net '' forgery monetary .money > 1.58 '' forgery lorem_ipsum .words 10 > lorem ipsum dolor sit amet consectetur adipiscing elit aliquam egestas '' forgery monetary .formatted_money min > 100 max > 1000 > 923.36 '' many many ! alternatively write like ruby forgery :basic.hex_color forgery :name.full_name forgery :personal.shirt_size addition always write dictionaries formats overriding ones gem fully explained installing -- -- -- -- -- like gem install forgery two ways depending 's use normal ruby development need simply use bash gem install forgery add gem library like normal gem use like normal gem library see examples **rails 3.x** 're using rails 3.x need extra things probably rote first step add rails.root/gemfile also suggest specifying latest version found rubygems ruby gem 'forgery 0.6.0' 'll need run bundle install install lock new gem next 'll want run special rails 3 generator bundle exec rails generate forgery **rails 2.x** **rails 2.x** 'll need something little different first editing rails.root/config/environment.rb adding configuration block ruby config.gem 'forgery' 'll need run command line bash script/generate forgery **generators** rails generators make directories rails.root directory - rails.root/lib/forgery - rails.root/lib/forgery/dictionaries - rails.root/lib/forgery/extensions - rails.root/lib/forgery/forgeries - rails.root/lib/forgery/formats use directories write dictionaries class extensions forgeries formats full list methods -- -- -- -- -- -- -- -- -- -- address | example output -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- | -- -- -- -- -- -- -- -- forgery 'address .city | loomis forgery 'address .continent | south america forgery 'address .country | cameroon forgery 'address .phone | +1 693 901-4549 forgery 'address .province | alberta forgery 'address .province_abbrev | nt forgery 'address .state | alabama forgery 'address .state_abbrev | sc forgery 'address .street_address | 21 hayes park forgery 'address .street_name | oneill forgery 'address .street_number | 222 forgery 'address .street_suffix | drive forgery 'address .zip | 11281-5568 basic | example output -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- | -- -- -- -- -- -- -- -- forgery 'basic .boolean | true trueclass forgery 'basic .color | red forgery 'basic .encrypt | fc0d835dd4e4df144a33a6a346298b0f23dcd14a forgery 'basic .frequency | never forgery 'basic .hex_color | e1d82a forgery 'basic .number | 4 forgery 'basic .password | kclbhcv6 forgery 'basic .short_hex_color | c1d forgery 'basic .text | g8gecffvds2 credit card | example output -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- | -- -- -- -- -- -- -- -- forgery 'credit_card .check_digit number | 5 forgery 'credit_card .number | 343682330855371 forgery 'credit_card .type | american express forgery 'currency .code | xpf forgery 'currency .description | austria schillings date | example output -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- | -- -- -- -- -- -- -- -- forgery 'date .date | fri 20 mar 2009 date forgery 'date .day | 15 forgery 'date .day_of_week | monday forgery 'date .delta options | 3 forgery 'date .month | january forgery 'date .year | 1994 email | example output -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- | -- -- -- -- -- -- -- -- forgery 'email .address | gsmith @ kamba.org forgery 'email .body | lorem ipsum dolor sit amet consectetuer ... forgery 'email .subject | lorem ipsum dolor sit amet ... geo | example output -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- | -- -- -- -- -- -- -- -- forgery 'geo .latitude | -8.095096815540515 float forgery 'geo .latitude_degrees | -49 forgery 'geo .latitude_direction | n forgery 'geo .latitude_minutes | 14 forgery 'geo .latitude_seconds | 45 forgery 'geo .longitude | -22.56746406884514 float forgery 'geo .longitude_degrees | 100 forgery 'geo .longitude_direction | w forgery 'geo .longitude_minutes | 47 forgery 'geo .longitude_seconds | 41 internet | example output -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- | -- -- -- -- -- -- -- -- forgery 'internet .cctld | cf forgery 'internet .domain_name | bubbletube.net forgery 'internet .email_address | cwalker @ quire.name forgery 'internet .email_subject | lorem ipsum dolor sit amet ... forgery 'internet .ip_v4 | 94.120.51.103 forgery 'internet .ip_v6 | c61e:5926:15e6 d225:8eef fb39:7412 e9d5 forgery 'internet .top_level_domain | com forgery 'internet .user_name | sdixon lorem ipsum | example output -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- | -- -- -- -- -- -- -- -- forgery 'lorem_ipsum .character | l forgery 'lorem_ipsum .characters | lorem ipsu forgery 'lorem_ipsum .lorem_ipsum_characters | lorem ipsum dolor sit amet ... forgery 'lorem_ipsum .lorem_ipsum_words | lorem '' ipsum '' dolor '' ... array forgery 'lorem_ipsum .paragraph | lorem ipsum dolor sit amet ... forgery 'lorem_ipsum .paragraphs | lorem ipsum dolor sit amet ... forgery 'lorem_ipsum .range_from_quantity quantity | 0..4 range forgery 'lorem_ipsum .sentence | lorem ipsum dolor sit amet ... forgery 'lorem_ipsum .sentences | lorem ipsum dolor sit amet ... forgery 'lorem_ipsum .text | lorem ipsum dolor sit amet ... forgery 'lorem_ipsum .title | lorem ipsum dolor sit amet ... forgery 'lorem_ipsum .word | lorem forgery 'lorem_ipsum .words | lorem ipsum dolor sit amet ... monetary | example output -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- | -- -- -- -- -- -- -- -- forgery 'monetary .formatted_money | 5.49 forgery 'monetary .money | 9.20 string name | example output -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- | -- -- -- -- -- -- -- -- forgery 'name .company_name | bubbletube forgery 'name .female_first_name | judy forgery 'name .first_name | albert forgery 'name .full_name | evelyn wallace forgery 'name .industry | toy & hobby stores forgery 'name .job_title | analyst programmer forgery 'name .job_title_suffix | iii forgery 'name .last_name | jackson forgery 'name .location | try-n-save forgery 'name .male_first_name | donald forgery 'name .suffix | sr forgery 'name .title | mr personal | example output -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- | -- -- -- -- -- -- -- -- forgery 'personal .abbreviated_gender | f forgery 'personal .gender | female forgery 'personal .language | bislama forgery 'personal .race | indonesian forgery 'personal .shirt_size | 2xl bank account | example output -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- | -- -- -- -- -- -- -- -- forgery 'bank_account .iban | be68539007547034 forgery 'bank_account .bic | vbrsde33345 russian tax | example output -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- | -- -- -- -- -- -- -- -- forgery 'russian_tax .account_number | 56335652786612121479 forgery 'russian_tax .bik | 046533860 forgery 'russian_tax .inn | 7366543467 forgery 'russian_tax .legal_inn | 7822838630 forgery 'russian_tax .legal_ogrn | 3483465598635 forgery 'russian_tax .ogrn | 666325227817763 forgery 'russian_tax .person_inn | 451559765443 forgery 'russian_tax .person_ogrn | 195478617554621 time | example output -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- | -- -- -- -- -- -- -- -- forgery 'time .zone | amsterdam string contributing -- -- -- -- -- -- work progress open source project feel free contribute 'll take pull requests via git suggestions via issues tab work done forgery get credits list hearts credits -- -- -- - thanks authors contributors nate sutton nate aka fowlduck brandon arbini brandonarbini josh nichols technicalpickles jeremy stephens viking aka crookshanks darcy laycock sutto lukas westermann lwe mike dungan andrew selder aselder thomas sinclair anathematic stafford brunk wingrunr21 sixarm sixarm akira matsuda amatsuda diego plentz plentz gabe berke-williams gabebw todd mazierski toddmazierski galen palmer palmergs licensing -- -- -- -- - copyright c 2007 sevenwire llc permission hereby granted free charge person obtaining copy software associated documentation files '' software '' deal software without restriction including without limitation rights use copy modify merge publish distribute sublicense and/or sell copies software permit persons software furnished subject following conditions copyright notice permission notice shall included copies substantial portions software software provided '' without warranty kind express implied including limited warranties merchantability fitness particular purpose noninfringement event shall authors copyright holders liable claim damages liability whether action contract tort otherwise arising connection software use dealings software note fun !"}, {"url": "https://api.github.com/repos/technicalpickles/ambitious-sphinx", "owner": "technicalpickles", "readme": "ambitious sphinx adapter n't know like sexy full-text searching == basics want find meals mention bacon meal.select { 'bacon } bacon bits sour cream meal.select { 'bacon bits & & 'sour cream } maybe bacon name cheese recipe meal.select { |m| m.name =~ 'bacon || m.recipe =~ 'cheese } cheese name grilled meal.select { |m| m.name =~ 'bacon & & m.name ! ~ 'grilled } == pagination 're going want use pagination ultrasphinx underlying library supports ca n't get objects matching query _have_ use paging 's pretty simple meal.select { 'bacon } .page 2 meal.select { 'bacon } .page 3 == big honking disclaimer 're still learning lot sphinx ambition work things likely change lot features likely missing == getting started === installing sudo gem install ambitious-sphinx === add app require files somewhere like end config/environment.rb maybe create config/initializers/sphinx.rb require 'ultrasphinx' require 'ambition/adapters/ambitious_sphinx' === sphinx ultrasphinx also need go motions setting ultrasphinx includes configuring/installing sphinx modifying model indicate 's indexed bootstrapping ultrasphinx discussed detail ultrasphinx 's readme == playing code base addition dependencies 'll need gem install echoe redgreen mocha test-spec run tests rake test == information sphinx - > http //www.sphinxsearch.com/ - > http //blog.evanweaver.com/articles/2007/07/09/ultrasphinx-searching-the-world-in-231-seconds/ - > http //blog.evanweaver.com/files/doc/fauna/ultrasphinx/files/readme.html == information ambition - > http //ambition.rubyforge.org - > http //groups.google.com/group/ambition-rb/"}, {"url": "https://api.github.com/repos/lazyatom/soup", "owner": "lazyatom", "readme": "soup bit everything summoned nothing soup like imaginary friend - comforting often talk look closely n't exist terrifying require 'soup' soup soup.new file.join soup '' __file__ soup < < { name > james '' skills > bowstaff nunchuck '' } ... much later ... soup 'james s.skills > bowstaff nunchuck '' soup < < { mane > lush thick '' teeth > sharp ready '' position > bed ! ! ! '' } point set attribute soup data persisted without care reckless abandon really data stored using anything - soup n't really care much underlying persistence layer 've written implementations using datamapper activerecord sequel ... implementations course unknowable implementations terrifying implementations fool ! warren dead ! c 2008 james adam mit license yeah xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxp xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxy '' '' '' xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxy '' '' ; ciccc yxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxyyy '' '' ; icccccccccc '' '' '' '' '' yyyyyyyyyyxxxxxxxyyyyy '' '' '' '' '' '' '' .. ; ciiccccccccccc '' cciiicccccccccc ; ; .. .. ; cccciiiccccccc > '' ; ciccc cic ; < < cccccccccccc '' '' '' .. ; ; ; ccciiicccccccccc cccccccccccccc ; ; ; .. .. .. ; ; cciiiiccccccccccccccccccccc > cccccccccc '' cccccccccccccccccccccccccccccccc '' _. ; ccicc ic ; ; < ciiccc ; cccccc '' '' '' ; cciiicccccccccc ccccccccciic ; ._ '' < ccc ; ; ; .. ... ; ; ; ; ; ; c777 cc '' '' _ xixx ccccccciicc ; .. xiixxxxxxxxxx xxxxxxxx .. .. .xixiixiixxxxxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxy '' '' '' '' yxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxyy '' '' '' '' '' '' '' yyxxxxxxxxxxxxxxxxxxxxxxxxxxyyy '' '' ; - ; ccccc ; ; .. '' '' '' '' '' '' '' '' '' ; cicc ; ; ccccc -- ; ccicc ; ; ; ; .. ; cicccccccicc ; - c cciiiiicccctciicc ; ; ; iccccc '' ; ; cccc- '' ccccccccccccc ; ; ccccc ; ,. ; ccccc ,.. '' ; cc 'cccccccccc '' ; ; ; cc=== cc '' ... .c. '' '' '' ccccc ccc '' '' ; cicccccc.. ; cciictttccccccctt ccccccccccc ccc '' '' ccccccccccccc '' '' .. ccc '' hccc=jcc hccccccc cccccc ccc ,.. hcccci cccccc l c hcccccj lcccccccccjccc cccc f '' h h h izc '' '' '' '' '' '' '' '' '' '' '' '' '' < lr cr '' '' j ,.. p > jp '' ; ; ! ! ; ! ! ! ! ! ! ! c3 - -- '' ! ! ! ! .. ! ci c .. jjcccc rrrcccc c < < pf < cizccccccccccccccc > > j clccc '' '' ii iijjj '' '' '' p iiiiicccccc < < cicc p '' '' .. ; ; ! ! ! ccccccc > > j > > > > cccccc > > > c cc > cccj '' '' '' '' '' - ! ! ; ! ! ! ! cccccccccccff > > > > > j p '' '' '' '' '' '' '' '' .. ; ; ; ; ; ; ; ! ; ; ! '' '' '' '' '' '' '' .. ; ; ; ; ! ! ! .. ; ; ; - ; ; ; -- -- '' '' ; ; ! ! '' .. ; ; '' ; -- - ; ; ; ; ; ; ; -- -- - '' '' '' -- - ,ccc hcccccc ; ; ! ! ! ; ; ! ! ; ; ; ; ,. ; -- -- -- - '' '' '' ; ; ! ! - .zj c ; ; ! ! ! ! ; - ; ; ; ! '' ''- .. .zj c ! ! '' ; ! ! ! ! - ; ; ; ; ; ; ; ; ; ; '' '' c c ; ! ! '' ; ; ; ; ! ! ! ! ! ! ! ! '' ; ; ; ; ! z '' '' '' '. ,. ; ; ! ! ! ; ; .. -- '' _.. ; ; ! j zcd h ; ; '' ; ; f z c '' h ! ! ! ! ; ; ; ; -- ! '' '' h. h ; ; ; ! ; ; ; -- ; ; zf r ; ! ; .. ; ; ; ; p j '' p '' c ,.j '' cc _ h. l .. '' p '' c c ! ! ! ! ! ! ! ! ! ! ! ! ! '' j p c c j p '' < c ; z f '' p c c < f h - ! > '' f f f '' c f '' z p h. r hc j p j f l ,j f < hc l j z c '' f f c c c ,j c c f c f '' h l ; ; f '' '' '' '' '' '' h '' j h cccc c zj p p p '' c '' j p '' j p .. h c. < '' '' ! ! > h c '' p c ; ! < ! ! ! > c c p z ; ! ! hc ; c f j ; ! ! .. h j ! ! ! p l f j p j f j p ; ! ! -= < z f p ! ! cc c hc cd f ; ! ! c c '' c ! ! p > .. p '' l c ! ! < zc '' '' < cc ! ! j p ! l h ; l ! j ! ! < ! ! ! c ; c ! ; ; ; ; ! h. '' p h p h ! f ! ; ! ; ! ! > ! c ; p ! ! > f ! ! > '' ! ! ; ! > < - f ! ! ; ! ; ! < ! > ; f < ! ! ! ! ! ! > ! ! ! ! ! ! ! ! ! ! > ! ! ! ! < ! ! ; ! ! ! ; ; ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ; ! ! ; ! ! ! ! ! ! ; ! ! < ! ! ! ! ; ; > ; ! ! ! ! ; ! ! ! ! ! ; ! ; ! ! ! c ! '' ; ! ! ! c c > ; ! ! ! ! ! > ; ! ! ! ! ! ! > < ! ! ; ; ! ! ! ! ! ! ! ! ; ! ! ! ! ! ! ! ! ! < ! ! ! ! ! ! ! ! ! ! ! ! > ! ! ! < ! ! ! ! ! ! ! ! ! ; ! ! > ! ! ! < ! ! ! ! ; ! ! ! ! ! ! ; < ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! > ! ! ! ! ! ! ! ! ; ! > ! ! < ! ! ! > ; < ! ! ! ! ! ! ! < ! ; ! ! ; ! ! ! ! > < ! > ; ! ! ! ! ! ! ! ! < ! ! .. ! ! ! ; < ! ! ! < ! ! ; ! ! ! ! ! > ; ! ! '' ! j c ! ! ; ! ! > ; ! ! ! ; ! ! < ! ! ! > ! ! ! ! ! j hr ! ! ! ; ; ; ! ! ! ! ! < ! ! < ! ! ! ; ! ! < < ! ! ! ! ! ! ! ! ; < ! ! ! ! ! ; ! ! ! > ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! c ! ! > ; ; ! ! ; ! ! ! ! ! ; ! ! > ! ! < ! ! > c ! ! ! ! ! ! ! ! ! ! ! ! > ! ! ! ! ! c < ! ; ! ! ! ! ; ! ! ! ! > ! ; ! ! ! c '' c ; ! ! ! ! ; ! ! ! ! ! ! ! ! ! ! c h ! ! ! > ! ! ! ! ! ! ! ! ! ! ! c c ! ! ! ! ! ! ! ! ! h. c < ! ! ! > < ! ! ! ! ! ! > c h ! ! ! ! ! ! ! ! h. ! ! > ! ! ! ! ! ! ! ! > ! - ; ! http //www.edvard-munch.com/paintings/other_artists/scream_ascii_3.htm"}, {"url": "https://api.github.com/repos/josh/rails", "owner": "josh", "readme": "welcome rails rails web-application framework includes everything needed create database-backed web applications according model-view-controller mvc http //en.wikipedia.org/wiki/model-view-controller pattern understanding mvc pattern key understanding rails mvc divides application three layers specific responsibility _model layer_ represents domain model account product person post etc encapsulates business logic specific application rails database-backed model classes derived activerecord :base active record allows present data database rows objects embellish data objects business logic methods read active record readme activerecord/readme.rdoc although rails models backed database models also ordinary ruby classes ruby classes implement set interfaces provided active model module read active model readme activemodel/readme.rdoc _controller layer_ responsible handling incoming http requests providing suitable response usually means returning html rails controllers also generate xml json pdfs mobile-specific views controllers load manipulate models render view templates order generate appropriate http response rails incoming requests routed action dispatch appropriate controller controller classes derived actioncontroller :base action dispatch action controller bundled together action pack read action pack readme actionpack/readme.rdoc _view layer_ composed templates '' responsible providing appropriate representations application 's resources templates come variety formats view templates html embedded ruby code erb files views typically rendered generate controller response generate body email rails view generation handled action view read action view readme actionview/readme.rdoc active record action pack action view used independently outside rails addition rails also comes action mailer readme actionmailer/readme.rdoc library generate send emails ; active job readme activejob/readme.md framework declaring jobs making run variety queueing backends ; active support readme activesupport/readme.rdoc collection utility classes standard library extensions useful rails may also used independently outside rails getting started 1. install rails command prompt n't yet gem install rails 2. command prompt create new rails application rails new myapp myapp '' application name 3. change directory myapp start web server cd myapp rails server run -- help -h options 4. using browser go http //localhost:3000 'll see '' welcome aboard 're riding ruby rails ! '' 5. follow guidelines start developing application may find following resources handy getting started rails http //guides.rubyonrails.org/getting_started.html ruby rails guides http //guides.rubyonrails.org api documentation http //api.rubyonrails.org ruby rails tutorial http //www.railstutorial.org/book contributing encourage contribute ruby rails ! please check contributing ruby rails guide http //edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html guidelines proceed join us ! http //contributors.rubyonrails.org code status ! build status https //travis-ci.org/rails/rails.svg branch=master https //travis-ci.org/rails/rails license ruby rails released mit license http //www.opensource.org/licenses/mit"}, {"url": "https://api.github.com/repos/cdcarter/backpacking", "owner": "cdcarter", "readme": "backpacking io-powered web framework inspired simplicity web frameworks awesome metaprogramming power io chris carter set recreate nails hammer toolbox wheel recreated io dbrms- orm-agnostic simple template system mit-licensed fiddle run io start server port 8000 per default get source code git clone git //github.com/cdcarter/backpacking.git co-creators chris carter ian ownbey view system among things olle jonsson readme read http //iolanguage.com/"}, {"url": "https://api.github.com/repos/jnewland/capsize", "owner": "jnewland", "readme": "h1 capsize capsize provides capistrano tasks manage amazon ec2 project way endorsed sponsored associated amazon amazon.com amazon web services h2 installation @ gem install jnewland-capsize -s http //gems.github.com @ edit @ config/deploy.rb @ < pre > < code > capsize ec2 gem include capsize ec2 'cap tasks warning must placed deploy.rb file anywhere line set application name ! looks like set application foobar '' application name used capsize order matters require 'capsize' use overwrite standard capsize config dir locations set capsize_config_dir 'config/capsize' set capsize_secure_config_dir 'config/capsize' use overwrite actual config file names stored config dirs set capsize_config_file_name 'capsize.yml' set capsize_secure_config_file_name 'secure.yml' < /code > < /pre > run @ cap ec2 setup @ read task 's output example usage h2 tasks run cap -e < taskname > task get details cap ec2 console output cap ec2 addresses allocate cap ec2 addresses associate cap ec2 addresses disassociate cap ec2 addresses release cap ec2 addresses show cap ec2 images show cap ec2 instances reboot cap ec2 instances run cap ec2 instances show cap ec2 instances ssh cap ec2 instances terminate cap ec2 keypairs create cap ec2 keypairs delete cap ec2 keypairs show cap ec2 security_groups authorize_ingress cap ec2 security_groups create cap ec2 security_groups create_with_standard_ports cap ec2 security_groups delete cap ec2 security_groups revoke_ingress cap ec2 security_groups show cap ec2 setup cap ec2 setup check h4 notes < em > tasks optionally take environment variables lieu capistrano configuration variables. < /em > h4 contributing source github '' http //github.com/jnewland/capsize know h4 authors jesse newland '' http //jnewland.com/ glenn rempe '' http //blog.rempe.us/ h4 copyright c 2007-2008 jesse newland glenn rempe distributes terms ruby"}, {"url": "https://api.github.com/repos/bs/starling", "owner": "bs", "readme": "name starling - light weight server reliable distributed message passing synopsis start starling server daemonized process starling -h 192.168.1.1 -d put messages onto queue require 'memcache' starling memcache.new '192.168.1.1:22122 starling.set 'my_queue 12345 get messages queue require 'memcache' starling memcache.new '192.168.1.1:22122 loop { puts starling.get 'my_queue } see starling documentation information description starling powerful simple messaging server enables reliable distributed queuing absolutely minimal overhead speaks memcache protocol maximum cross-platform compatibility language speaks memcache take advantage starling 's queue facilities known issues starling slow '' far messaging systems concerned practice 's fast enough authors blaine cook < romeda @ gmail.com > copyright starling - light-weight server reliable distributed message passing copyright 2007 blaine cook < blaine @ twitter.com > twitter inc. < < completed > >"}, {"url": "https://api.github.com/repos/sr/ape", "owner": "sr", "readme": "== atom protocol exerciser ape ape sanity-checker implementations atom publishing protocol atompub app written ruby provides mongrel-based html interface describing interactions app implementation test information history impetus creation ape see tim bray 's account http //www.tbray.org/ongoing/when/200x/2006/08/11/meet-the-ape == license copyright c 2006 sun microsystems inc. rights reserved see included license link /files/license.html file details == quick start install ape via rubygems gem install ape ape_server command available path start server ape_server start server foreground access ape browser http //localhost:4000 == source access latest source code ape see project site https //rubyforge.org/projects/ape"}, {"url": "https://api.github.com/repos/collectiveidea/awesomeness", "owner": "collectiveidea", "readme": "collective idea 's awesomeness ============================= collection stuff use often generic enough go another plugin 've stumbled across love/hate let us know ! == compatability plugin compatible edge-rails slated rails 2.2. version compatible 2.1 check rails-2.1 '' tag git == core extensions object tap http //moonbase.rydia.net/mental/blog/programming/eavesdropping-on-expressions string widont make typography nicer http //shauninman.com/archive/2006/08/22/widont_wordpress_plugin array uniq block > > % w cow jumped moon .uniq { |s| s.length } > '' jumped '' '' round floats nearest x > > 5.38475.round 0.5 > 5.5 hash goodies > > { > 1,3,4 b > 2,5 } .without > 1 > { > 3,4 b > 2,5 } > > { > '' b > nil c > 1 } .compact > { c > 1 } more\u2026 == rails helpers unicode texthelper additions change default truncate & excerpt string elipsis \u2026 instead three periods ... add widont textilize methods transparent removal trailing slashes urls == rake tasks == capistrano recipes use remote_cache default disable enable web restarts run deploy cleanup deploys backups"}, {"url": "https://api.github.com/repos/collectiveidea/audited", "owner": "collectiveidea", "readme": "audited ! build status https //secure.travis-ci.org/collectiveidea/audited.svg http //travis-ci.org/collectiveidea/audited ! code climate https //codeclimate.com/github/collectiveidea/audited.svg https //codeclimate.com/github/collectiveidea/audited ! security https //hakiri.io/github/collectiveidea/audited/master.svg https //hakiri.io/github/collectiveidea/audited/master ======= **audited** previously acts_as_audited orm extension logs changes models audited also record made changes save comments associate models related changes audited currently 4.x works rails 6.0 5.2 5.1 5.0 4.2. rails 3 use gem version 3.0 see 3.0-stable branch https //github.com/collectiveidea/audited/tree/3.0-stable supported rubies audited supports tested http //travis-ci.org/collectiveidea/audited following ruby versions 2.3.7 2.4.4 2.5.1 2.6.3 audited may work fine ruby version listed ca n't guarantee 'd like maintain ruby n't listed please let us know pull request https //github.com/collectiveidea/audited/pulls supported orms audited currently activerecord-only previous life audited worked mongomapper use 4.2-stable branch https //github.com/collectiveidea/audited/tree/4.2-stable need mongomapper installation add gem gemfile ruby gem audited '' ~ > 4.9 '' rails app directory create audits table bash rails generate audited install rake db migrate default changes stored yaml format 're using postgresql use rails generate audited install -- audited-changes-column-type jsonb json mysql 5.7+ rails 5+ store audit changes natively database json column types 're using something integer primary keys e.g uuid user model use rails generate audited install -- audited-user-id-column-type uuid customize audits table user_id column type upgrading 're already using audited acts_as_audited audits table may require additional columns every upgrade please run bash rails generate audited upgrade rake db migrate upgrading make changes changes needed usage simply call audited models ruby class user < activerecord :base audited end default whenever user created updated destroyed new audit created ruby user user.create ! name steve '' user.audits.count > 1 user.update ! name ryan '' user.audits.count > 2 user.destroy user.audits.count > 3 audits contain information regarding action taken model changes made ruby user.update ! name ryan '' audit user.audits.last audit.action > update '' audit.audited_changes > { name '' > steve '' ryan '' } get previous versions record index date list revisions ruby user.revisions user.revision 1 user.revision_at date.parse 2016-01-01 '' specifying columns default new audit created attribute changes however limit columns considered ruby class user < activerecord :base fields audited single field audited name multiple fields audited name address except certain fields audited except password end specifying callbacks default new audit created create update destroy action however limit actions audited ruby class user < activerecord :base fields actions audited single field audit update destroy create audited name update destroy end comments attach comments audit using audit_comment attribute model ruby user.update ! name ryan '' audit_comment changing name '' user.audits.last.comment > changing name '' optionally add comment_required option audited call require comments audits ruby class user < activerecord :base audited comment_required > true end update audit audit_comment present optionally add update_with_comment_only option set false audited call turn behavior audits ruby class user < activerecord :base audited update_with_comment_only > false end limiting stored audits limit number audits stored model configure limiting audited models put following initializer ruby audited.max_audits 10 keep 10 latest audits customize per model ruby class user < activerecord :base audited max_audits 2 end whenever object updated destroyed extra audits combined newer ones old ones destroyed ruby user user.create ! name steve '' user.audits.count > 1 user.update ! name ryan '' user.audits.count > 2 user.destroy user.audits.count > 2 current user tracking 're using audited rails application audited changes made within request automatically attributed current user default audited uses current_user method controller ruby class postscontroller < applicationcontroller def create current_user > < user name steve '' > @ post post.create params post @ post.audits.last.user > < user name steve '' > end end use method current_user put following initializer ruby audited.current_user_method authenticated_user outside request audited still record user as_user method ruby audited.audit_class.as_user user.find 1 post.update ! title hello world ! '' end post.audits.last.user > < user id 1 > standard audited install assumes user model integer primary key type n't true e.g 're using uuid primary keys 'll need create migration update audits table user_id column type see installation generator flags 'd like regenerate install migration custom audit user might need use custom auditor time time done simply passing string ruby class applicationcontroller < actioncontroller :base def authenticated_user current_user current_user else 'elon musk' end end end as_user also accepts string useful auditing updates made cli environment rb audited.audit_class.as_user console-user- { env 'ssh_user } '' post.update_attributes ! title hello world ! '' end post.audits.last.user > 'console-user-username' associated audits sometimes 's useful associate audit model one changed instance given following models ruby class user < activerecord :base belongs_to company audited end class company < activerecord :base has_many users end every change user audited want grab audits users belonging particular company add associated_with option audited call ruby class user < activerecord :base belongs_to company audited associated_with company end class company < activerecord :base has_many users has_associated_audits end audit created user user 's company also saved alongside audit makes much easier faster access audits indirectly related company ruby company company.create ! name collective idea '' user company.users.create ! name steve '' user.update ! name steve richert '' user.audits.last.associated > < company name collective idea '' > company.associated_audits.last.auditable > < user name steve richert '' > access records audits associated audits one go ruby company.own_and_associated_audits conditional auditing want audit specific conditions provide conditional options similar activemodel callbacks ensure model audited conditions ruby class user < activerecord :base audited active private def active last_login > 6.months.ago end end like activemodel use inline proc conditions ruby class user < activerecord :base audited unless proc.new { |u| u.ninja } end case user audited user ninja false disabling auditing want disable auditing temporarily certain tasks methods available disable auditing save ruby @ user.save_without_auditing ruby @ user.without_auditing @ user.save end disable auditing column ruby user.non_audited_columns first_name last_name disable auditing entire model ruby user.auditing_enabled false disable auditing models ruby audited.auditing_enabled false auditing disabled default model enable auditing temporarily ruby user.auditing_enabled false @ user.save_with_auditing ruby user.auditing_enabled false @ user.with_auditing @ user.save end custom audit model want extend modify audit model create new class inherits audited :audit ruby class customaudit < audited :audit def some_custom_behavior hiya ! '' end end set initializer ruby config/initializers/audited.rb audited.config |config| config.audit_class customaudit end support find documentation http //rdoc.info/github/collectiveidea/audited join mailing list http //groups.google.com/group/audited get help offer suggestions contributing spirit free software http //www.fsf.org/licensing/essays/free-sw.html **everyone** encouraged help improve project ways _you_ pitch use prerelease versions audited report bugs https //github.com/collectiveidea/audited/issues fix bugs submit pull requests http //github.com/collectiveidea/audited/pulls write clarify fix documentation refactor code"}, {"url": "https://api.github.com/repos/collectiveidea/acts_as_geocodable", "owner": "collectiveidea", "readme": "acts_as_geocodable ! gem version https //img.shields.io/gem/v/acts_as_geocodable.svg style=flat http //rubygems.org/gems/acts_as_geocodable ! build status https //img.shields.io/travis/collectiveidea/acts_as_geocodable/master.svg style=flat https //travis-ci.org/collectiveidea/acts_as_geocodable ! code climate https //img.shields.io/codeclimate/github/collectiveidea/acts_as_geocodable.svg style=flat https //codeclimate.com/github/collectiveidea/acts_as_geocodable ! code coverage http //img.shields.io/codeclimate/coverage/github/collectiveidea/acts_as_geocodable.svg style=flat https //codeclimate.com/github/collectiveidea/acts_as_geocodable ! dependency status https //img.shields.io/gemnasium/collectiveidea/acts_as_geocodable.svg style=flat https //gemnasium.com/collectiveidea/acts_as_geocodable acts_as_geocodable helps build geo-aware applications automatically geocodes models saved giving ability search location calculate distances records **beginning version 2 require rails 3. use one 1.0.x tags work rails 2.3 ** 've adopted arel style syntax finding records usage ruby event event.create street 777 ne martin luther king jr blvd locality portland '' region oregon '' postal_code 97232 event.geocode.latitude > 45.529100000000 event.geocode.longitude > -122.644200000000 event.distance_to 49423 '' > 1807.66560483205 event.origin 97232 '' within 50 event.origin portland '' .nearest installation install gem gem install acts_as_geocodable add gemfile ruby gem acts_as_geocodable '' graticule http //github.com/collectiveidea/graticule used heavy lifting installed upgrading october 2008 precision n't included geocode model make sure add string precision column geocode table 're upgrading older version update graticule also 're upgrading previous version plugin note city renamed locality consistent graticule 0.2. create migration ruby rename_column geocodes city locality also remember change mapping geocodable classes use locality key instead city ruby class event < activerecord :base acts_as_geocodable address { street address1 locality city region state postal_code zip } end configuration create required tables rails generate acts_as_geocodable rake db migrate set default geocoder environment.rb file ruby geocode.geocoder graticule.service yahoo .new your_api_key '' model want make geocodable add acts_as_geocodable ruby class event < activerecord :base acts_as_geocodable end requirement model must address fields default acts_as_geocodable looks attributes called _street_ _locality_ _region_ _postal_code_ _country_ change provide mapping address option ruby class event < activerecord :base acts_as_geocodable address { street address1 locality city region state postal_code zip } end n't meet needs simply override default to_location method model return graticule :location attributes set acts_as_geocodable also update address fields data returned geocoding service ruby class event < activerecord :base acts_as_geocodable normalize_address true end ip-based geocoding acts_as_geocodable adds remote_location method controllers uses http //hostip.info guess remote users location based ip address ruby def index @ nearest store.origin remote_location .nearest remote_location @ stores store.all end keep mind ip-based geocoding always accurate often return results contributing spirit free software http //www.fsf.org/licensing/essays/free-sw.html **everyone** encouraged help improve project ways **you** contribute using alpha beta prerelease versions reporting bugs suggesting new features writing editing documentation writing specifications writing code **no patch small** fix typos add comments clean inconsistent whitespace refactoring code closing issues https //github.com/collectiveidea/acts_as_geocodable/issues/ reviewing patches submitting issue use github issue tracker https //github.com/collectiveidea/acts_as_geocodable/issues/ track bugs features submitting bug report feature request check make sure n't already submitted indicate support existing issuse voting submitting bug report please include gist https //gist.github.com/ includes stack trace details may necessary reproduce bug including gem version ruby version operating system ideally bug report include pull request failing specs submitting pull request 1. fork project 2. create topic branch 3. implement feature bug fix 4. add specs feature bug fix 5. run bundle exec rake changes 100 % covered passing go back step 4 6. commit push changes 7. submit pull request please include changes gemspec version history file want create version reason please separate commit configurable formulas"}, {"url": "https://api.github.com/repos/collectiveidea/acts_as_money", "owner": "collectiveidea", "readme": "actsasmoney acts_as_money plugin makes easier work money gem class product < activerecord :base money price end assumes 2 columns database price_in_cents integer currency string fields changed setting cents currency options use default currency usd simply leave currency class room < activerecord :base money rate cents > rate_in_cents currency > rate_currency money discount cents > discount_in_cents currency > false end acts_as_money allows pass string fixnum float money object parameter setter call to_money convert money object makes convenient using money fields forms r room.new rate > 100.00 '' r.rate returns < money:0x249ef9c @ currency= '' usd '' @ cents=10000 > compatibility plugin compatible current edge-rails slated 2.2. using rails < 2.1 check rails-2.1 '' tag git"}, {"url": "https://api.github.com/repos/collectiveidea/calendar_builder", "owner": "collectiveidea", "readme": "== calendarbuilder calendarbuilder couple things builds calendars view adds event finders event models == building calendars add docs please == event finders assuming event model sort begin_at end_at use finders event.upcoming event.on_date date event.in_month date event.in_date_range date1..date2 event.in_rolling_month date number_of_weeks event.in_month_with_outliers date event model association unto model like community instance following community community.find 1 comunity.events.upcoming comunity.events.on_date date comunity.events.in_month date comunity.events.in_date_range date1..date2 comunity.events.in_rolling_month date number_of_weeks comunity.events.in_month_with_outliers date == todo extract css classes options month day weekend other_month"}, {"url": "https://api.github.com/repos/collectiveidea/clear_empty_attributes", "owner": "collectiveidea", "readme": "problem ======= ar objects saved empty fields saved instead nil - complicates queries empty fields field null field - makes use unless field.blank necessary opposed field - lead late-detected bugs time strings filled suddenly nil - validations support allow_blank= > true - databases handle null better & faster empty strings especially using like solution ======== defines ar before_validation sets empty strings nil install ======= script/plugin install git //github.com/collectiveidea/clear_empty_attributes.git sudo gem install clear_empty_attributes migration ========= switching clear_empty_attributes run task remove strings/texts database rake db clear_empty_attributes works checked installed plugin authors ======= - brandon keepers http //opensoul.org - michael grosser http //pragmatig.wordpress.com hereby placed public domain want hold anybody accountable ..."}, {"url": "https://api.github.com/repos/collectiveidea/css_naked_day", "owner": "collectiveidea", "readme": "cssnakedday =========== plugin disables stylesheets css naked day http //naked.dustindiaz.com/ long 're using rails stylesheet_link_tag helper css automatically hidden naked day april 9 2009 also adds method date class check day naked day example ======= < % date.today.is_css_naked_day % > < h3 > happened design < /h3 > < p > know styles disabled website visit < href= '' http //naked.dustindiaz.com '' title= '' web standards naked day host website '' > annual css naked day < /a > website information. < /p > < % end % > read http //daniel.collectiveidea.com/blog/tags/css_naked_day copyright c 2007 daniel morrison collective idea http //collectiveidea.com released mit license"}]